# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_sw_engine')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_sw_engine')
    _sw_engine = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_sw_engine', [dirname(__file__)])
        except ImportError:
            import _sw_engine
            return _sw_engine
        try:
            _mod = imp.load_module('_sw_engine', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _sw_engine = swig_import_helper()
    del swig_import_helper
else:
    import _sw_engine
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def gncSplitGetGUID(x):
    return _sw_engine.gncSplitGetGUID(x)
gncSplitGetGUID = _sw_engine.gncSplitGetGUID

def gncTransGetGUID(x):
    return _sw_engine.gncTransGetGUID(x)
gncTransGetGUID = _sw_engine.gncTransGetGUID

def gncAccountGetGUID(x):
    return _sw_engine.gncAccountGetGUID(x)
gncAccountGetGUID = _sw_engine.gncAccountGetGUID

def gnc_split_get_type():
    return _sw_engine.gnc_split_get_type()
gnc_split_get_type = _sw_engine.gnc_split_get_type
CREC = _sw_engine.CREC
YREC = _sw_engine.YREC
FREC = _sw_engine.FREC
NREC = _sw_engine.NREC
VREC = _sw_engine.VREC

def xaccSplitConvertAmount(split, account):
    return _sw_engine.xaccSplitConvertAmount(split, account)
xaccSplitConvertAmount = _sw_engine.xaccSplitConvertAmount

def xaccMallocSplit(book):
    return _sw_engine.xaccMallocSplit(book)
xaccMallocSplit = _sw_engine.xaccMallocSplit

def xaccSplitReinit(split):
    return _sw_engine.xaccSplitReinit(split)
xaccSplitReinit = _sw_engine.xaccSplitReinit

def xaccSplitDestroy(split):
    return _sw_engine.xaccSplitDestroy(split)
xaccSplitDestroy = _sw_engine.xaccSplitDestroy

def xaccSplitCopyOnto(from_split, to_split):
    return _sw_engine.xaccSplitCopyOnto(from_split, to_split)
xaccSplitCopyOnto = _sw_engine.xaccSplitCopyOnto

def xaccSplitGetBook(split):
    return _sw_engine.xaccSplitGetBook(split)
xaccSplitGetBook = _sw_engine.xaccSplitGetBook

def xaccSplitGetAccount(split):
    return _sw_engine.xaccSplitGetAccount(split)
xaccSplitGetAccount = _sw_engine.xaccSplitGetAccount

def xaccSplitSetAccount(s, acc):
    return _sw_engine.xaccSplitSetAccount(s, acc)
xaccSplitSetAccount = _sw_engine.xaccSplitSetAccount

def xaccSplitGetParent(split):
    return _sw_engine.xaccSplitGetParent(split)
xaccSplitGetParent = _sw_engine.xaccSplitGetParent

def xaccSplitSetParent(split, trans):
    return _sw_engine.xaccSplitSetParent(split, trans)
xaccSplitSetParent = _sw_engine.xaccSplitSetParent

def xaccSplitGetLot(split):
    return _sw_engine.xaccSplitGetLot(split)
xaccSplitGetLot = _sw_engine.xaccSplitGetLot

def xaccSplitSetLot(split, lot):
    return _sw_engine.xaccSplitSetLot(split, lot)
xaccSplitSetLot = _sw_engine.xaccSplitSetLot

def xaccSplitSetMemo(split, memo):
    return _sw_engine.xaccSplitSetMemo(split, memo)
xaccSplitSetMemo = _sw_engine.xaccSplitSetMemo

def xaccSplitGetMemo(split):
    return _sw_engine.xaccSplitGetMemo(split)
xaccSplitGetMemo = _sw_engine.xaccSplitGetMemo

def xaccSplitSetAction(split, action):
    return _sw_engine.xaccSplitSetAction(split, action)
xaccSplitSetAction = _sw_engine.xaccSplitSetAction

def xaccSplitGetAction(split):
    return _sw_engine.xaccSplitGetAction(split)
xaccSplitGetAction = _sw_engine.xaccSplitGetAction

def xaccSplitSetReconcile(split, reconciled_flag):
    return _sw_engine.xaccSplitSetReconcile(split, reconciled_flag)
xaccSplitSetReconcile = _sw_engine.xaccSplitSetReconcile

def xaccSplitGetReconcile(split):
    return _sw_engine.xaccSplitGetReconcile(split)
xaccSplitGetReconcile = _sw_engine.xaccSplitGetReconcile

def xaccSplitSetDateReconciledSecs(split, time):
    return _sw_engine.xaccSplitSetDateReconciledSecs(split, time)
xaccSplitSetDateReconciledSecs = _sw_engine.xaccSplitSetDateReconciledSecs

def xaccSplitSetDateReconciledTS(split, ts):
    return _sw_engine.xaccSplitSetDateReconciledTS(split, ts)
xaccSplitSetDateReconciledTS = _sw_engine.xaccSplitSetDateReconciledTS

def xaccSplitGetDateReconciledTS(split, ts):
    return _sw_engine.xaccSplitGetDateReconciledTS(split, ts)
xaccSplitGetDateReconciledTS = _sw_engine.xaccSplitGetDateReconciledTS

def xaccSplitRetDateReconciledTS(split):
    return _sw_engine.xaccSplitRetDateReconciledTS(split)
xaccSplitRetDateReconciledTS = _sw_engine.xaccSplitRetDateReconciledTS

def xaccSplitGetDateReconciled(split):
    return _sw_engine.xaccSplitGetDateReconciled(split)
xaccSplitGetDateReconciled = _sw_engine.xaccSplitGetDateReconciled

def xaccSplitSetAmount(split, amount):
    return _sw_engine.xaccSplitSetAmount(split, amount)
xaccSplitSetAmount = _sw_engine.xaccSplitSetAmount

def xaccSplitGetAmount(split):
    return _sw_engine.xaccSplitGetAmount(split)
xaccSplitGetAmount = _sw_engine.xaccSplitGetAmount

def xaccSplitSetValue(split, value):
    return _sw_engine.xaccSplitSetValue(split, value)
xaccSplitSetValue = _sw_engine.xaccSplitSetValue

def xaccSplitGetValue(split):
    return _sw_engine.xaccSplitGetValue(split)
xaccSplitGetValue = _sw_engine.xaccSplitGetValue

def xaccSplitSetSharePriceAndAmount(split, price, amount):
    return _sw_engine.xaccSplitSetSharePriceAndAmount(split, price, amount)
xaccSplitSetSharePriceAndAmount = _sw_engine.xaccSplitSetSharePriceAndAmount

def xaccSplitGetSharePrice(split):
    return _sw_engine.xaccSplitGetSharePrice(split)
xaccSplitGetSharePrice = _sw_engine.xaccSplitGetSharePrice

def xaccSplitSetBaseValue(split, value, base_currency):
    return _sw_engine.xaccSplitSetBaseValue(split, value, base_currency)
xaccSplitSetBaseValue = _sw_engine.xaccSplitSetBaseValue

def xaccSplitGetBaseValue(split, base_currency):
    return _sw_engine.xaccSplitGetBaseValue(split, base_currency)
xaccSplitGetBaseValue = _sw_engine.xaccSplitGetBaseValue

def xaccSplitGetBalance(split):
    return _sw_engine.xaccSplitGetBalance(split)
xaccSplitGetBalance = _sw_engine.xaccSplitGetBalance

def xaccSplitGetClearedBalance(split):
    return _sw_engine.xaccSplitGetClearedBalance(split)
xaccSplitGetClearedBalance = _sw_engine.xaccSplitGetClearedBalance

def xaccSplitGetReconciledBalance(split):
    return _sw_engine.xaccSplitGetReconciledBalance(split)
xaccSplitGetReconciledBalance = _sw_engine.xaccSplitGetReconciledBalance

def xaccSplitEqual(sa, sb, check_guids, check_balances, check_txn_splits):
    return _sw_engine.xaccSplitEqual(sa, sb, check_guids, check_balances, check_txn_splits)
xaccSplitEqual = _sw_engine.xaccSplitEqual

def xaccSplitLookup(guid, book):
    return _sw_engine.xaccSplitLookup(guid, book)
xaccSplitLookup = _sw_engine.xaccSplitLookup

def xaccSplitListGetUniqueTransactions(splits):
    return _sw_engine.xaccSplitListGetUniqueTransactions(splits)
xaccSplitListGetUniqueTransactions = _sw_engine.xaccSplitListGetUniqueTransactions

def xaccSplitAddPeerSplit(split, other_split, timestamp):
    return _sw_engine.xaccSplitAddPeerSplit(split, other_split, timestamp)
xaccSplitAddPeerSplit = _sw_engine.xaccSplitAddPeerSplit

def xaccSplitHasPeers(split):
    return _sw_engine.xaccSplitHasPeers(split)
xaccSplitHasPeers = _sw_engine.xaccSplitHasPeers

def xaccSplitIsPeerSplit(split, other_split):
    return _sw_engine.xaccSplitIsPeerSplit(split, other_split)
xaccSplitIsPeerSplit = _sw_engine.xaccSplitIsPeerSplit

def xaccSplitRemovePeerSplit(split, other_split):
    return _sw_engine.xaccSplitRemovePeerSplit(split, other_split)
xaccSplitRemovePeerSplit = _sw_engine.xaccSplitRemovePeerSplit

def xaccSplitMergePeerSplits(split, other_split):
    return _sw_engine.xaccSplitMergePeerSplits(split, other_split)
xaccSplitMergePeerSplits = _sw_engine.xaccSplitMergePeerSplits

def xaccSplitGetOtherSplit(split):
    return _sw_engine.xaccSplitGetOtherSplit(split)
xaccSplitGetOtherSplit = _sw_engine.xaccSplitGetOtherSplit

def xaccSplitGetType(s):
    return _sw_engine.xaccSplitGetType(s)
xaccSplitGetType = _sw_engine.xaccSplitGetType

def xaccSplitMakeStockSplit(s):
    return _sw_engine.xaccSplitMakeStockSplit(s)
xaccSplitMakeStockSplit = _sw_engine.xaccSplitMakeStockSplit

def xaccSplitOrder(sa, sb):
    return _sw_engine.xaccSplitOrder(sa, sb)
xaccSplitOrder = _sw_engine.xaccSplitOrder

def xaccSplitOrderDateOnly(sa, sb):
    return _sw_engine.xaccSplitOrderDateOnly(sa, sb)
xaccSplitOrderDateOnly = _sw_engine.xaccSplitOrderDateOnly

def xaccSplitCompareAccountFullNames(sa, sb):
    return _sw_engine.xaccSplitCompareAccountFullNames(sa, sb)
xaccSplitCompareAccountFullNames = _sw_engine.xaccSplitCompareAccountFullNames

def xaccSplitCompareAccountCodes(sa, sb):
    return _sw_engine.xaccSplitCompareAccountCodes(sa, sb)
xaccSplitCompareAccountCodes = _sw_engine.xaccSplitCompareAccountCodes

def xaccSplitCompareOtherAccountFullNames(sa, sb):
    return _sw_engine.xaccSplitCompareOtherAccountFullNames(sa, sb)
xaccSplitCompareOtherAccountFullNames = _sw_engine.xaccSplitCompareOtherAccountFullNames

def xaccSplitCompareOtherAccountCodes(sa, sb):
    return _sw_engine.xaccSplitCompareOtherAccountCodes(sa, sb)
xaccSplitCompareOtherAccountCodes = _sw_engine.xaccSplitCompareOtherAccountCodes

def xaccSplitGetCorrAccountFullName(sa):
    return _sw_engine.xaccSplitGetCorrAccountFullName(sa)
xaccSplitGetCorrAccountFullName = _sw_engine.xaccSplitGetCorrAccountFullName

def xaccSplitGetCorrAccountName(sa):
    return _sw_engine.xaccSplitGetCorrAccountName(sa)
xaccSplitGetCorrAccountName = _sw_engine.xaccSplitGetCorrAccountName

def xaccSplitGetCorrAccountCode(sa):
    return _sw_engine.xaccSplitGetCorrAccountCode(sa)
xaccSplitGetCorrAccountCode = _sw_engine.xaccSplitGetCorrAccountCode

def xaccSplitSetSharePrice(split, price):
    return _sw_engine.xaccSplitSetSharePrice(split, price)
xaccSplitSetSharePrice = _sw_engine.xaccSplitSetSharePrice

def xaccSplitVoidFormerAmount(split):
    return _sw_engine.xaccSplitVoidFormerAmount(split)
xaccSplitVoidFormerAmount = _sw_engine.xaccSplitVoidFormerAmount

def xaccSplitVoidFormerValue(split):
    return _sw_engine.xaccSplitVoidFormerValue(split)
xaccSplitVoidFormerValue = _sw_engine.xaccSplitVoidFormerValue
SPLIT_DATE_RECONCILED = _sw_engine.SPLIT_DATE_RECONCILED
SPLIT_BALANCE = _sw_engine.SPLIT_BALANCE
SPLIT_CLEARED_BALANCE = _sw_engine.SPLIT_CLEARED_BALANCE
SPLIT_RECONCILED_BALANCE = _sw_engine.SPLIT_RECONCILED_BALANCE
SPLIT_MEMO = _sw_engine.SPLIT_MEMO
SPLIT_ACTION = _sw_engine.SPLIT_ACTION
SPLIT_RECONCILE = _sw_engine.SPLIT_RECONCILE
SPLIT_AMOUNT = _sw_engine.SPLIT_AMOUNT
SPLIT_SHARE_PRICE = _sw_engine.SPLIT_SHARE_PRICE
SPLIT_VALUE = _sw_engine.SPLIT_VALUE
SPLIT_TYPE = _sw_engine.SPLIT_TYPE
SPLIT_VOIDED_AMOUNT = _sw_engine.SPLIT_VOIDED_AMOUNT
SPLIT_VOIDED_VALUE = _sw_engine.SPLIT_VOIDED_VALUE
SPLIT_LOT = _sw_engine.SPLIT_LOT
SPLIT_TRANS = _sw_engine.SPLIT_TRANS
SPLIT_ACCOUNT = _sw_engine.SPLIT_ACCOUNT
SPLIT_ACCOUNT_GUID = _sw_engine.SPLIT_ACCOUNT_GUID
SPLIT_ACCT_FULLNAME = _sw_engine.SPLIT_ACCT_FULLNAME
SPLIT_CORR_ACCT_NAME = _sw_engine.SPLIT_CORR_ACCT_NAME
SPLIT_CORR_ACCT_CODE = _sw_engine.SPLIT_CORR_ACCT_CODE

def gnc_account_get_children(account):
    return _sw_engine.gnc_account_get_children(account)
gnc_account_get_children = _sw_engine.gnc_account_get_children

def gnc_account_get_children_sorted(account):
    return _sw_engine.gnc_account_get_children_sorted(account)
gnc_account_get_children_sorted = _sw_engine.gnc_account_get_children_sorted

def gnc_account_get_descendants(account):
    return _sw_engine.gnc_account_get_descendants(account)
gnc_account_get_descendants = _sw_engine.gnc_account_get_descendants

def gnc_account_get_descendants_sorted(account):
    return _sw_engine.gnc_account_get_descendants_sorted(account)
gnc_account_get_descendants_sorted = _sw_engine.gnc_account_get_descendants_sorted
class AccountClass(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, AccountClass, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, AccountClass, name)
    __repr__ = _swig_repr
    __swig_setmethods__["parent_class"] = _sw_engine.AccountClass_parent_class_set
    __swig_getmethods__["parent_class"] = _sw_engine.AccountClass_parent_class_get
    if _newclass:
        parent_class = _swig_property(_sw_engine.AccountClass_parent_class_get, _sw_engine.AccountClass_parent_class_set)

    def __init__(self):
        this = _sw_engine.new_AccountClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_engine.delete_AccountClass
    __del__ = lambda self: None
AccountClass_swigregister = _sw_engine.AccountClass_swigregister
AccountClass_swigregister(AccountClass)

class GncImportMatchMap(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncImportMatchMap, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncImportMatchMap, name)
    __repr__ = _swig_repr
    __swig_setmethods__["acc"] = _sw_engine.GncImportMatchMap_acc_set
    __swig_getmethods__["acc"] = _sw_engine.GncImportMatchMap_acc_get
    if _newclass:
        acc = _swig_property(_sw_engine.GncImportMatchMap_acc_get, _sw_engine.GncImportMatchMap_acc_set)
    __swig_setmethods__["book"] = _sw_engine.GncImportMatchMap_book_set
    __swig_getmethods__["book"] = _sw_engine.GncImportMatchMap_book_get
    if _newclass:
        book = _swig_property(_sw_engine.GncImportMatchMap_book_get, _sw_engine.GncImportMatchMap_book_set)

    def __init__(self):
        this = _sw_engine.new_GncImportMatchMap()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_engine.delete_GncImportMatchMap
    __del__ = lambda self: None
GncImportMatchMap_swigregister = _sw_engine.GncImportMatchMap_swigregister
GncImportMatchMap_swigregister(GncImportMatchMap)


def gnc_account_get_type():
    return _sw_engine.gnc_account_get_type()
gnc_account_get_type = _sw_engine.gnc_account_get_type
ACCT_TYPE_INVALID = _sw_engine.ACCT_TYPE_INVALID
ACCT_TYPE_NONE = _sw_engine.ACCT_TYPE_NONE
ACCT_TYPE_BANK = _sw_engine.ACCT_TYPE_BANK
ACCT_TYPE_CASH = _sw_engine.ACCT_TYPE_CASH
ACCT_TYPE_CREDIT = _sw_engine.ACCT_TYPE_CREDIT
ACCT_TYPE_ASSET = _sw_engine.ACCT_TYPE_ASSET
ACCT_TYPE_LIABILITY = _sw_engine.ACCT_TYPE_LIABILITY
ACCT_TYPE_STOCK = _sw_engine.ACCT_TYPE_STOCK
ACCT_TYPE_MUTUAL = _sw_engine.ACCT_TYPE_MUTUAL
ACCT_TYPE_CURRENCY = _sw_engine.ACCT_TYPE_CURRENCY
ACCT_TYPE_INCOME = _sw_engine.ACCT_TYPE_INCOME
ACCT_TYPE_EXPENSE = _sw_engine.ACCT_TYPE_EXPENSE
ACCT_TYPE_EQUITY = _sw_engine.ACCT_TYPE_EQUITY
ACCT_TYPE_RECEIVABLE = _sw_engine.ACCT_TYPE_RECEIVABLE
ACCT_TYPE_PAYABLE = _sw_engine.ACCT_TYPE_PAYABLE
ACCT_TYPE_ROOT = _sw_engine.ACCT_TYPE_ROOT
ACCT_TYPE_TRADING = _sw_engine.ACCT_TYPE_TRADING
NUM_ACCOUNT_TYPES = _sw_engine.NUM_ACCOUNT_TYPES
ACCT_TYPE_CHECKING = _sw_engine.ACCT_TYPE_CHECKING
ACCT_TYPE_SAVINGS = _sw_engine.ACCT_TYPE_SAVINGS
ACCT_TYPE_MONEYMRKT = _sw_engine.ACCT_TYPE_MONEYMRKT
ACCT_TYPE_CREDITLINE = _sw_engine.ACCT_TYPE_CREDITLINE
ACCT_TYPE_LAST = _sw_engine.ACCT_TYPE_LAST

def xaccMallocAccount(book):
    return _sw_engine.xaccMallocAccount(book)
xaccMallocAccount = _sw_engine.xaccMallocAccount

def gnc_account_create_root(book):
    return _sw_engine.gnc_account_create_root(book)
gnc_account_create_root = _sw_engine.gnc_account_create_root

def xaccCloneAccount(source, book):
    return _sw_engine.xaccCloneAccount(source, book)
xaccCloneAccount = _sw_engine.xaccCloneAccount

def xaccAccountBeginEdit(account):
    return _sw_engine.xaccAccountBeginEdit(account)
xaccAccountBeginEdit = _sw_engine.xaccAccountBeginEdit

def xaccAccountCommitEdit(account):
    return _sw_engine.xaccAccountCommitEdit(account)
xaccAccountCommitEdit = _sw_engine.xaccAccountCommitEdit

def xaccAccountDestroy(account):
    return _sw_engine.xaccAccountDestroy(account)
xaccAccountDestroy = _sw_engine.xaccAccountDestroy

def xaccAccountEqual(a, b, check_guids):
    return _sw_engine.xaccAccountEqual(a, b, check_guids)
xaccAccountEqual = _sw_engine.xaccAccountEqual

def xaccAccountOrder(account_1, account_2):
    return _sw_engine.xaccAccountOrder(account_1, account_2)
xaccAccountOrder = _sw_engine.xaccAccountOrder

def gnc_get_account_separator_string():
    return _sw_engine.gnc_get_account_separator_string()
gnc_get_account_separator_string = _sw_engine.gnc_get_account_separator_string

def gnc_get_account_separator():
    return _sw_engine.gnc_get_account_separator()
gnc_get_account_separator = _sw_engine.gnc_get_account_separator

def gnc_set_account_separator(separator):
    return _sw_engine.gnc_set_account_separator(separator)
gnc_set_account_separator = _sw_engine.gnc_set_account_separator

def gnc_book_get_root_account(book):
    return _sw_engine.gnc_book_get_root_account(book)
gnc_book_get_root_account = _sw_engine.gnc_book_get_root_account

def gnc_book_set_root_account(book, root):
    return _sw_engine.gnc_book_set_root_account(book, root)
gnc_book_set_root_account = _sw_engine.gnc_book_set_root_account

def xaccAccountLookup(guid, book):
    return _sw_engine.xaccAccountLookup(guid, book)
xaccAccountLookup = _sw_engine.xaccAccountLookup

def gnc_account_name_violations_errmsg(separator, invalid_account_names):
    return _sw_engine.gnc_account_name_violations_errmsg(separator, invalid_account_names)
gnc_account_name_violations_errmsg = _sw_engine.gnc_account_name_violations_errmsg

def gnc_account_list_name_violations(book, separator):
    return _sw_engine.gnc_account_list_name_violations(book, separator)
gnc_account_list_name_violations = _sw_engine.gnc_account_list_name_violations

def gnc_account_get_book(account):
    return _sw_engine.gnc_account_get_book(account)
gnc_account_get_book = _sw_engine.gnc_account_get_book

def xaccAccountSetType(account, arg2):
    return _sw_engine.xaccAccountSetType(account, arg2)
xaccAccountSetType = _sw_engine.xaccAccountSetType

def xaccAccountSetName(account, name):
    return _sw_engine.xaccAccountSetName(account, name)
xaccAccountSetName = _sw_engine.xaccAccountSetName

def xaccAccountSetCode(account, code):
    return _sw_engine.xaccAccountSetCode(account, code)
xaccAccountSetCode = _sw_engine.xaccAccountSetCode

def xaccAccountSetDescription(account, desc):
    return _sw_engine.xaccAccountSetDescription(account, desc)
xaccAccountSetDescription = _sw_engine.xaccAccountSetDescription

def xaccAccountSetColor(account, color):
    return _sw_engine.xaccAccountSetColor(account, color)
xaccAccountSetColor = _sw_engine.xaccAccountSetColor

def xaccAccountSetFilter(account, filter):
    return _sw_engine.xaccAccountSetFilter(account, filter)
xaccAccountSetFilter = _sw_engine.xaccAccountSetFilter

def xaccAccountSetSortOrder(account, sortorder):
    return _sw_engine.xaccAccountSetSortOrder(account, sortorder)
xaccAccountSetSortOrder = _sw_engine.xaccAccountSetSortOrder

def xaccAccountSetSortReversed(account, sortreversed):
    return _sw_engine.xaccAccountSetSortReversed(account, sortreversed)
xaccAccountSetSortReversed = _sw_engine.xaccAccountSetSortReversed

def xaccAccountSetNotes(account, notes):
    return _sw_engine.xaccAccountSetNotes(account, notes)
xaccAccountSetNotes = _sw_engine.xaccAccountSetNotes

def xaccAccountSetLastNum(account, num):
    return _sw_engine.xaccAccountSetLastNum(account, num)
xaccAccountSetLastNum = _sw_engine.xaccAccountSetLastNum

def gnc_account_set_policy(account, policy):
    return _sw_engine.gnc_account_set_policy(account, policy)
gnc_account_set_policy = _sw_engine.gnc_account_set_policy

def xaccAccountGetType(account):
    return _sw_engine.xaccAccountGetType(account)
xaccAccountGetType = _sw_engine.xaccAccountGetType

def xaccAccountIsPriced(acc):
    return _sw_engine.xaccAccountIsPriced(acc)
xaccAccountIsPriced = _sw_engine.xaccAccountIsPriced

def gnc_account_set_start_balance(acc, start_baln):
    return _sw_engine.gnc_account_set_start_balance(acc, start_baln)
gnc_account_set_start_balance = _sw_engine.gnc_account_set_start_balance

def gnc_account_set_start_cleared_balance(acc, start_baln):
    return _sw_engine.gnc_account_set_start_cleared_balance(acc, start_baln)
gnc_account_set_start_cleared_balance = _sw_engine.gnc_account_set_start_cleared_balance

def gnc_account_set_start_reconciled_balance(acc, start_baln):
    return _sw_engine.gnc_account_set_start_reconciled_balance(acc, start_baln)
gnc_account_set_start_reconciled_balance = _sw_engine.gnc_account_set_start_reconciled_balance

def gnc_account_set_balance_dirty(acc):
    return _sw_engine.gnc_account_set_balance_dirty(acc)
gnc_account_set_balance_dirty = _sw_engine.gnc_account_set_balance_dirty

def gnc_account_set_sort_dirty(acc):
    return _sw_engine.gnc_account_set_sort_dirty(acc)
gnc_account_set_sort_dirty = _sw_engine.gnc_account_set_sort_dirty

def gnc_account_insert_split(acc, s):
    return _sw_engine.gnc_account_insert_split(acc, s)
gnc_account_insert_split = _sw_engine.gnc_account_insert_split

def gnc_account_remove_split(acc, s):
    return _sw_engine.gnc_account_remove_split(acc, s)
gnc_account_remove_split = _sw_engine.gnc_account_remove_split

def xaccAccountGetName(account):
    return _sw_engine.xaccAccountGetName(account)
xaccAccountGetName = _sw_engine.xaccAccountGetName

def xaccAccountGetCode(account):
    return _sw_engine.xaccAccountGetCode(account)
xaccAccountGetCode = _sw_engine.xaccAccountGetCode

def xaccAccountGetDescription(account):
    return _sw_engine.xaccAccountGetDescription(account)
xaccAccountGetDescription = _sw_engine.xaccAccountGetDescription

def xaccAccountGetColor(account):
    return _sw_engine.xaccAccountGetColor(account)
xaccAccountGetColor = _sw_engine.xaccAccountGetColor

def xaccAccountGetFilter(account):
    return _sw_engine.xaccAccountGetFilter(account)
xaccAccountGetFilter = _sw_engine.xaccAccountGetFilter

def xaccAccountGetSortOrder(account):
    return _sw_engine.xaccAccountGetSortOrder(account)
xaccAccountGetSortOrder = _sw_engine.xaccAccountGetSortOrder

def xaccAccountGetSortReversed(account):
    return _sw_engine.xaccAccountGetSortReversed(account)
xaccAccountGetSortReversed = _sw_engine.xaccAccountGetSortReversed

def xaccAccountGetNotes(account):
    return _sw_engine.xaccAccountGetNotes(account)
xaccAccountGetNotes = _sw_engine.xaccAccountGetNotes

def xaccAccountGetLastNum(account):
    return _sw_engine.xaccAccountGetLastNum(account)
xaccAccountGetLastNum = _sw_engine.xaccAccountGetLastNum

def gnc_account_get_policy(account):
    return _sw_engine.gnc_account_get_policy(account)
gnc_account_get_policy = _sw_engine.gnc_account_get_policy

def xaccAccountRecomputeBalance(arg1):
    return _sw_engine.xaccAccountRecomputeBalance(arg1)
xaccAccountRecomputeBalance = _sw_engine.xaccAccountRecomputeBalance

def xaccAccountSortSplits(acc, force):
    return _sw_engine.xaccAccountSortSplits(acc, force)
xaccAccountSortSplits = _sw_engine.xaccAccountSortSplits

def gnc_account_get_full_name(account):
    return _sw_engine.gnc_account_get_full_name(account)
gnc_account_get_full_name = _sw_engine.gnc_account_get_full_name

def xaccAccountGainsAccount(acc, curr):
    return _sw_engine.xaccAccountGainsAccount(acc, curr)
xaccAccountGainsAccount = _sw_engine.xaccAccountGainsAccount

def dxaccAccountSetPriceSrc(account, src):
    return _sw_engine.dxaccAccountSetPriceSrc(account, src)
dxaccAccountSetPriceSrc = _sw_engine.dxaccAccountSetPriceSrc

def dxaccAccountGetPriceSrc(account):
    return _sw_engine.dxaccAccountGetPriceSrc(account)
dxaccAccountGetPriceSrc = _sw_engine.dxaccAccountGetPriceSrc

def xaccAccountGetAutoInterestXfer(account, default_value):
    return _sw_engine.xaccAccountGetAutoInterestXfer(account, default_value)
xaccAccountGetAutoInterestXfer = _sw_engine.xaccAccountGetAutoInterestXfer

def xaccAccountSetAutoInterestXfer(account, value):
    return _sw_engine.xaccAccountSetAutoInterestXfer(account, value)
xaccAccountSetAutoInterestXfer = _sw_engine.xaccAccountSetAutoInterestXfer

def xaccAccountSetCommodity(account, comm):
    return _sw_engine.xaccAccountSetCommodity(account, comm)
xaccAccountSetCommodity = _sw_engine.xaccAccountSetCommodity

def xaccAccountGetCommodity(account):
    return _sw_engine.xaccAccountGetCommodity(account)
xaccAccountGetCommodity = _sw_engine.xaccAccountGetCommodity

def gnc_account_get_currency_or_parent(account):
    return _sw_engine.gnc_account_get_currency_or_parent(account)
gnc_account_get_currency_or_parent = _sw_engine.gnc_account_get_currency_or_parent

def xaccAccountGetCommoditySCU(account):
    return _sw_engine.xaccAccountGetCommoditySCU(account)
xaccAccountGetCommoditySCU = _sw_engine.xaccAccountGetCommoditySCU

def xaccAccountGetCommoditySCUi(account):
    return _sw_engine.xaccAccountGetCommoditySCUi(account)
xaccAccountGetCommoditySCUi = _sw_engine.xaccAccountGetCommoditySCUi

def xaccAccountSetCommoditySCU(account, frac):
    return _sw_engine.xaccAccountSetCommoditySCU(account, frac)
xaccAccountSetCommoditySCU = _sw_engine.xaccAccountSetCommoditySCU

def xaccAccountSetNonStdSCU(account, flag):
    return _sw_engine.xaccAccountSetNonStdSCU(account, flag)
xaccAccountSetNonStdSCU = _sw_engine.xaccAccountSetNonStdSCU

def xaccAccountGetNonStdSCU(account):
    return _sw_engine.xaccAccountGetNonStdSCU(account)
xaccAccountGetNonStdSCU = _sw_engine.xaccAccountGetNonStdSCU

def xaccAccountGetBalance(account):
    return _sw_engine.xaccAccountGetBalance(account)
xaccAccountGetBalance = _sw_engine.xaccAccountGetBalance

def xaccAccountGetClearedBalance(account):
    return _sw_engine.xaccAccountGetClearedBalance(account)
xaccAccountGetClearedBalance = _sw_engine.xaccAccountGetClearedBalance

def xaccAccountGetReconciledBalance(account):
    return _sw_engine.xaccAccountGetReconciledBalance(account)
xaccAccountGetReconciledBalance = _sw_engine.xaccAccountGetReconciledBalance

def xaccAccountGetPresentBalance(account):
    return _sw_engine.xaccAccountGetPresentBalance(account)
xaccAccountGetPresentBalance = _sw_engine.xaccAccountGetPresentBalance

def xaccAccountGetProjectedMinimumBalance(account):
    return _sw_engine.xaccAccountGetProjectedMinimumBalance(account)
xaccAccountGetProjectedMinimumBalance = _sw_engine.xaccAccountGetProjectedMinimumBalance

def xaccAccountGetBalanceAsOfDate(account, date):
    return _sw_engine.xaccAccountGetBalanceAsOfDate(account, date)
xaccAccountGetBalanceAsOfDate = _sw_engine.xaccAccountGetBalanceAsOfDate

def xaccAccountConvertBalanceToCurrency(account, balance, balance_currency, new_currency):
    return _sw_engine.xaccAccountConvertBalanceToCurrency(account, balance, balance_currency, new_currency)
xaccAccountConvertBalanceToCurrency = _sw_engine.xaccAccountConvertBalanceToCurrency

def xaccAccountConvertBalanceToCurrencyAsOfDate(account, balance, balance_currency, new_currency, date):
    return _sw_engine.xaccAccountConvertBalanceToCurrencyAsOfDate(account, balance, balance_currency, new_currency, date)
xaccAccountConvertBalanceToCurrencyAsOfDate = _sw_engine.xaccAccountConvertBalanceToCurrencyAsOfDate

def xaccAccountGetBalanceInCurrency(account, report_commodity, include_children):
    return _sw_engine.xaccAccountGetBalanceInCurrency(account, report_commodity, include_children)
xaccAccountGetBalanceInCurrency = _sw_engine.xaccAccountGetBalanceInCurrency

def xaccAccountGetClearedBalanceInCurrency(account, report_commodity, include_children):
    return _sw_engine.xaccAccountGetClearedBalanceInCurrency(account, report_commodity, include_children)
xaccAccountGetClearedBalanceInCurrency = _sw_engine.xaccAccountGetClearedBalanceInCurrency

def xaccAccountGetReconciledBalanceInCurrency(account, report_commodity, include_children):
    return _sw_engine.xaccAccountGetReconciledBalanceInCurrency(account, report_commodity, include_children)
xaccAccountGetReconciledBalanceInCurrency = _sw_engine.xaccAccountGetReconciledBalanceInCurrency

def xaccAccountGetPresentBalanceInCurrency(account, report_commodity, include_children):
    return _sw_engine.xaccAccountGetPresentBalanceInCurrency(account, report_commodity, include_children)
xaccAccountGetPresentBalanceInCurrency = _sw_engine.xaccAccountGetPresentBalanceInCurrency

def xaccAccountGetProjectedMinimumBalanceInCurrency(account, report_commodity, include_children):
    return _sw_engine.xaccAccountGetProjectedMinimumBalanceInCurrency(account, report_commodity, include_children)
xaccAccountGetProjectedMinimumBalanceInCurrency = _sw_engine.xaccAccountGetProjectedMinimumBalanceInCurrency

def xaccAccountGetBalanceAsOfDateInCurrency(account, date, report_commodity, include_children):
    return _sw_engine.xaccAccountGetBalanceAsOfDateInCurrency(account, date, report_commodity, include_children)
xaccAccountGetBalanceAsOfDateInCurrency = _sw_engine.xaccAccountGetBalanceAsOfDateInCurrency

def xaccAccountGetBalanceChangeForPeriod(acc, date1, date2, recurse):
    return _sw_engine.xaccAccountGetBalanceChangeForPeriod(acc, date1, date2, recurse)
xaccAccountGetBalanceChangeForPeriod = _sw_engine.xaccAccountGetBalanceChangeForPeriod

def gnc_account_append_child(new_parent, child):
    return _sw_engine.gnc_account_append_child(new_parent, child)
gnc_account_append_child = _sw_engine.gnc_account_append_child

def gnc_account_remove_child(parent, child):
    return _sw_engine.gnc_account_remove_child(parent, child)
gnc_account_remove_child = _sw_engine.gnc_account_remove_child

def gnc_account_get_parent(account):
    return _sw_engine.gnc_account_get_parent(account)
gnc_account_get_parent = _sw_engine.gnc_account_get_parent

def gnc_account_get_root(account):
    return _sw_engine.gnc_account_get_root(account)
gnc_account_get_root = _sw_engine.gnc_account_get_root

def gnc_account_is_root(account):
    return _sw_engine.gnc_account_is_root(account)
gnc_account_is_root = _sw_engine.gnc_account_is_root

def gnc_account_n_children(account):
    return _sw_engine.gnc_account_n_children(account)
gnc_account_n_children = _sw_engine.gnc_account_n_children

def gnc_account_child_index(parent, child):
    return _sw_engine.gnc_account_child_index(parent, child)
gnc_account_child_index = _sw_engine.gnc_account_child_index

def gnc_account_nth_child(parent, num):
    return _sw_engine.gnc_account_nth_child(parent, num)
gnc_account_nth_child = _sw_engine.gnc_account_nth_child

def gnc_account_n_descendants(account):
    return _sw_engine.gnc_account_n_descendants(account)
gnc_account_n_descendants = _sw_engine.gnc_account_n_descendants

def gnc_account_get_current_depth(account):
    return _sw_engine.gnc_account_get_current_depth(account)
gnc_account_get_current_depth = _sw_engine.gnc_account_get_current_depth

def gnc_account_get_tree_depth(account):
    return _sw_engine.gnc_account_get_tree_depth(account)
gnc_account_get_tree_depth = _sw_engine.gnc_account_get_tree_depth

def gnc_account_foreach_child(account, func, user_data):
    return _sw_engine.gnc_account_foreach_child(account, func, user_data)
gnc_account_foreach_child = _sw_engine.gnc_account_foreach_child

def gnc_account_foreach_descendant(account, func, user_data):
    return _sw_engine.gnc_account_foreach_descendant(account, func, user_data)
gnc_account_foreach_descendant = _sw_engine.gnc_account_foreach_descendant

def gnc_account_foreach_descendant_until(account, func, user_data):
    return _sw_engine.gnc_account_foreach_descendant_until(account, func, user_data)
gnc_account_foreach_descendant_until = _sw_engine.gnc_account_foreach_descendant_until

def gnc_account_join_children(to_parent, from_parent):
    return _sw_engine.gnc_account_join_children(to_parent, from_parent)
gnc_account_join_children = _sw_engine.gnc_account_join_children

def gnc_account_merge_children(parent):
    return _sw_engine.gnc_account_merge_children(parent)
gnc_account_merge_children = _sw_engine.gnc_account_merge_children

def xaccAccountSetReconcileChildrenStatus(account, status):
    return _sw_engine.xaccAccountSetReconcileChildrenStatus(account, status)
xaccAccountSetReconcileChildrenStatus = _sw_engine.xaccAccountSetReconcileChildrenStatus

def xaccAccountGetReconcileChildrenStatus(account):
    return _sw_engine.xaccAccountGetReconcileChildrenStatus(account)
xaccAccountGetReconcileChildrenStatus = _sw_engine.xaccAccountGetReconcileChildrenStatus

def xaccAccountHasAncestor(acc, ancestor):
    return _sw_engine.xaccAccountHasAncestor(acc, ancestor)
xaccAccountHasAncestor = _sw_engine.xaccAccountHasAncestor

def gnc_account_lookup_by_name(parent, name):
    return _sw_engine.gnc_account_lookup_by_name(parent, name)
gnc_account_lookup_by_name = _sw_engine.gnc_account_lookup_by_name

def gnc_account_lookup_by_full_name(any_account, name):
    return _sw_engine.gnc_account_lookup_by_full_name(any_account, name)
gnc_account_lookup_by_full_name = _sw_engine.gnc_account_lookup_by_full_name

def gnc_account_lookup_by_code(parent, code):
    return _sw_engine.gnc_account_lookup_by_code(parent, code)
gnc_account_lookup_by_code = _sw_engine.gnc_account_lookup_by_code

def xaccAccountTypeEnumAsString(type):
    return _sw_engine.xaccAccountTypeEnumAsString(type)
xaccAccountTypeEnumAsString = _sw_engine.xaccAccountTypeEnumAsString

def xaccAccountStringToType(str, type):
    return _sw_engine.xaccAccountStringToType(str, type)
xaccAccountStringToType = _sw_engine.xaccAccountStringToType

def xaccAccountStringToEnum(str):
    return _sw_engine.xaccAccountStringToEnum(str)
xaccAccountStringToEnum = _sw_engine.xaccAccountStringToEnum

def xaccAccountGetTypeStr(type):
    return _sw_engine.xaccAccountGetTypeStr(type)
xaccAccountGetTypeStr = _sw_engine.xaccAccountGetTypeStr

def xaccAccountTypesCompatibleWith(type):
    return _sw_engine.xaccAccountTypesCompatibleWith(type)
xaccAccountTypesCompatibleWith = _sw_engine.xaccAccountTypesCompatibleWith

def xaccParentAccountTypesCompatibleWith(type):
    return _sw_engine.xaccParentAccountTypesCompatibleWith(type)
xaccParentAccountTypesCompatibleWith = _sw_engine.xaccParentAccountTypesCompatibleWith

def xaccAccountTypesCompatible(parent_type, child_type):
    return _sw_engine.xaccAccountTypesCompatible(parent_type, child_type)
xaccAccountTypesCompatible = _sw_engine.xaccAccountTypesCompatible

def xaccAccountTypesValid():
    return _sw_engine.xaccAccountTypesValid()
xaccAccountTypesValid = _sw_engine.xaccAccountTypesValid

def xaccAccountIsAssetLiabType(t):
    return _sw_engine.xaccAccountIsAssetLiabType(t)
xaccAccountIsAssetLiabType = _sw_engine.xaccAccountIsAssetLiabType

def xaccAccountIsAPARType(t):
    return _sw_engine.xaccAccountIsAPARType(t)
xaccAccountIsAPARType = _sw_engine.xaccAccountIsAPARType

def xaccAccountIsEquityType(t):
    return _sw_engine.xaccAccountIsEquityType(t)
xaccAccountIsEquityType = _sw_engine.xaccAccountIsEquityType

def xaccAccountGetSplitList(account):
    return _sw_engine.xaccAccountGetSplitList(account)
xaccAccountGetSplitList = _sw_engine.xaccAccountGetSplitList

def xaccAccountCountSplits(acc, include_children):
    return _sw_engine.xaccAccountCountSplits(acc, include_children)
xaccAccountCountSplits = _sw_engine.xaccAccountCountSplits

def xaccAccountMoveAllSplits(accfrom, accto):
    return _sw_engine.xaccAccountMoveAllSplits(accfrom, accto)
xaccAccountMoveAllSplits = _sw_engine.xaccAccountMoveAllSplits

def xaccAccountForEachTransaction(account, proc, data):
    return _sw_engine.xaccAccountForEachTransaction(account, proc, data)
xaccAccountForEachTransaction = _sw_engine.xaccAccountForEachTransaction

def xaccAccountFindTransByDesc(account, description):
    return _sw_engine.xaccAccountFindTransByDesc(account, description)
xaccAccountFindTransByDesc = _sw_engine.xaccAccountFindTransByDesc

def xaccAccountFindSplitByDesc(account, description):
    return _sw_engine.xaccAccountFindSplitByDesc(account, description)
xaccAccountFindSplitByDesc = _sw_engine.xaccAccountFindSplitByDesc

def xaccAccountInsertLot(arg1, arg2):
    return _sw_engine.xaccAccountInsertLot(arg1, arg2)
xaccAccountInsertLot = _sw_engine.xaccAccountInsertLot

def xaccAccountRemoveLot(arg1, arg2):
    return _sw_engine.xaccAccountRemoveLot(arg1, arg2)
xaccAccountRemoveLot = _sw_engine.xaccAccountRemoveLot

def xaccAccountGetLotList(account):
    return _sw_engine.xaccAccountGetLotList(account)
xaccAccountGetLotList = _sw_engine.xaccAccountGetLotList

def xaccAccountForEachLot(acc, proc, user_data):
    return _sw_engine.xaccAccountForEachLot(acc, proc, user_data)
xaccAccountForEachLot = _sw_engine.xaccAccountForEachLot

def xaccAccountFindOpenLots(acc, match_func, user_data, sort_func):
    return _sw_engine.xaccAccountFindOpenLots(acc, match_func, user_data, sort_func)
xaccAccountFindOpenLots = _sw_engine.xaccAccountFindOpenLots

def xaccAccountGetReconcileLastDate(account, last_date):
    return _sw_engine.xaccAccountGetReconcileLastDate(account, last_date)
xaccAccountGetReconcileLastDate = _sw_engine.xaccAccountGetReconcileLastDate

def xaccAccountSetReconcileLastDate(account, last_date):
    return _sw_engine.xaccAccountSetReconcileLastDate(account, last_date)
xaccAccountSetReconcileLastDate = _sw_engine.xaccAccountSetReconcileLastDate

def xaccAccountGetReconcileLastInterval(account, months, days):
    return _sw_engine.xaccAccountGetReconcileLastInterval(account, months, days)
xaccAccountGetReconcileLastInterval = _sw_engine.xaccAccountGetReconcileLastInterval

def xaccAccountSetReconcileLastInterval(account, months, days):
    return _sw_engine.xaccAccountSetReconcileLastInterval(account, months, days)
xaccAccountSetReconcileLastInterval = _sw_engine.xaccAccountSetReconcileLastInterval

def xaccAccountGetReconcilePostponeDate(account, postpone_date):
    return _sw_engine.xaccAccountGetReconcilePostponeDate(account, postpone_date)
xaccAccountGetReconcilePostponeDate = _sw_engine.xaccAccountGetReconcilePostponeDate

def xaccAccountSetReconcilePostponeDate(account, postpone_date):
    return _sw_engine.xaccAccountSetReconcilePostponeDate(account, postpone_date)
xaccAccountSetReconcilePostponeDate = _sw_engine.xaccAccountSetReconcilePostponeDate

def xaccAccountGetReconcilePostponeBalance(account, balance):
    return _sw_engine.xaccAccountGetReconcilePostponeBalance(account, balance)
xaccAccountGetReconcilePostponeBalance = _sw_engine.xaccAccountGetReconcilePostponeBalance

def xaccAccountSetReconcilePostponeBalance(account, balance):
    return _sw_engine.xaccAccountSetReconcilePostponeBalance(account, balance)
xaccAccountSetReconcilePostponeBalance = _sw_engine.xaccAccountSetReconcilePostponeBalance

def xaccAccountClearReconcilePostpone(account):
    return _sw_engine.xaccAccountClearReconcilePostpone(account)
xaccAccountClearReconcilePostpone = _sw_engine.xaccAccountClearReconcilePostpone
PLACEHOLDER_NONE = _sw_engine.PLACEHOLDER_NONE
PLACEHOLDER_THIS = _sw_engine.PLACEHOLDER_THIS
PLACEHOLDER_CHILD = _sw_engine.PLACEHOLDER_CHILD

def xaccAccountGetPlaceholder(account):
    return _sw_engine.xaccAccountGetPlaceholder(account)
xaccAccountGetPlaceholder = _sw_engine.xaccAccountGetPlaceholder

def xaccAccountSetPlaceholder(account, val):
    return _sw_engine.xaccAccountSetPlaceholder(account, val)
xaccAccountSetPlaceholder = _sw_engine.xaccAccountSetPlaceholder

def xaccAccountGetDescendantPlaceholder(account):
    return _sw_engine.xaccAccountGetDescendantPlaceholder(account)
xaccAccountGetDescendantPlaceholder = _sw_engine.xaccAccountGetDescendantPlaceholder

def xaccAccountGetHidden(acc):
    return _sw_engine.xaccAccountGetHidden(acc)
xaccAccountGetHidden = _sw_engine.xaccAccountGetHidden

def xaccAccountSetHidden(acc, val):
    return _sw_engine.xaccAccountSetHidden(acc, val)
xaccAccountSetHidden = _sw_engine.xaccAccountSetHidden

def xaccAccountIsHidden(acc):
    return _sw_engine.xaccAccountIsHidden(acc)
xaccAccountIsHidden = _sw_engine.xaccAccountIsHidden

def xaccAccountGetTaxRelated(account):
    return _sw_engine.xaccAccountGetTaxRelated(account)
xaccAccountGetTaxRelated = _sw_engine.xaccAccountGetTaxRelated

def xaccAccountSetTaxRelated(account, tax_related):
    return _sw_engine.xaccAccountSetTaxRelated(account, tax_related)
xaccAccountSetTaxRelated = _sw_engine.xaccAccountSetTaxRelated

def xaccAccountGetTaxUSCode(account):
    return _sw_engine.xaccAccountGetTaxUSCode(account)
xaccAccountGetTaxUSCode = _sw_engine.xaccAccountGetTaxUSCode

def xaccAccountSetTaxUSCode(account, code):
    return _sw_engine.xaccAccountSetTaxUSCode(account, code)
xaccAccountSetTaxUSCode = _sw_engine.xaccAccountSetTaxUSCode

def xaccAccountGetTaxUSPayerNameSource(account):
    return _sw_engine.xaccAccountGetTaxUSPayerNameSource(account)
xaccAccountGetTaxUSPayerNameSource = _sw_engine.xaccAccountGetTaxUSPayerNameSource

def xaccAccountSetTaxUSPayerNameSource(account, source):
    return _sw_engine.xaccAccountSetTaxUSPayerNameSource(account, source)
xaccAccountSetTaxUSPayerNameSource = _sw_engine.xaccAccountSetTaxUSPayerNameSource

def xaccAccountGetTaxUSCopyNumber(account):
    return _sw_engine.xaccAccountGetTaxUSCopyNumber(account)
xaccAccountGetTaxUSCopyNumber = _sw_engine.xaccAccountGetTaxUSCopyNumber

def xaccAccountSetTaxUSCopyNumber(account, copy_number):
    return _sw_engine.xaccAccountSetTaxUSCopyNumber(account, copy_number)
xaccAccountSetTaxUSCopyNumber = _sw_engine.xaccAccountSetTaxUSCopyNumber

def xaccAccountSetMark(account, mark):
    return _sw_engine.xaccAccountSetMark(account, mark)
xaccAccountSetMark = _sw_engine.xaccAccountSetMark

def xaccClearMark(account, val):
    return _sw_engine.xaccClearMark(account, val)
xaccClearMark = _sw_engine.xaccClearMark

def xaccClearMarkDown(account, val):
    return _sw_engine.xaccClearMarkDown(account, val)
xaccClearMarkDown = _sw_engine.xaccClearMarkDown

def gnc_account_tree_begin_staged_transaction_traversals(acc):
    return _sw_engine.gnc_account_tree_begin_staged_transaction_traversals(acc)
gnc_account_tree_begin_staged_transaction_traversals = _sw_engine.gnc_account_tree_begin_staged_transaction_traversals

def xaccSplitsBeginStagedTransactionTraversals(splits):
    return _sw_engine.xaccSplitsBeginStagedTransactionTraversals(splits)
xaccSplitsBeginStagedTransactionTraversals = _sw_engine.xaccSplitsBeginStagedTransactionTraversals

def xaccAccountBeginStagedTransactionTraversals(account):
    return _sw_engine.xaccAccountBeginStagedTransactionTraversals(account)
xaccAccountBeginStagedTransactionTraversals = _sw_engine.xaccAccountBeginStagedTransactionTraversals

def xaccTransactionTraverse(trans, stage):
    return _sw_engine.xaccTransactionTraverse(trans, stage)
xaccTransactionTraverse = _sw_engine.xaccTransactionTraverse

def xaccAccountStagedTransactionTraversal(a, stage, thunk, data):
    return _sw_engine.xaccAccountStagedTransactionTraversal(a, stage, thunk, data)
xaccAccountStagedTransactionTraversal = _sw_engine.xaccAccountStagedTransactionTraversal

def gnc_account_tree_staged_transaction_traversal(account, stage, thunk, data):
    return _sw_engine.gnc_account_tree_staged_transaction_traversal(account, stage, thunk, data)
gnc_account_tree_staged_transaction_traversal = _sw_engine.gnc_account_tree_staged_transaction_traversal

def xaccAccountTreeForEachTransaction(acc, proc, data):
    return _sw_engine.xaccAccountTreeForEachTransaction(acc, proc, data)
xaccAccountTreeForEachTransaction = _sw_engine.xaccAccountTreeForEachTransaction

def gnc_account_imap_create_imap(acc):
    return _sw_engine.gnc_account_imap_create_imap(acc)
gnc_account_imap_create_imap = _sw_engine.gnc_account_imap_create_imap

def gnc_account_imap_find_account(imap, category, key):
    return _sw_engine.gnc_account_imap_find_account(imap, category, key)
gnc_account_imap_find_account = _sw_engine.gnc_account_imap_find_account

def gnc_account_imap_add_account(imap, category, key, acc):
    return _sw_engine.gnc_account_imap_add_account(imap, category, key, acc)
gnc_account_imap_add_account = _sw_engine.gnc_account_imap_add_account

def gnc_account_imap_delete_account(imap, category, key):
    return _sw_engine.gnc_account_imap_delete_account(imap, category, key)
gnc_account_imap_delete_account = _sw_engine.gnc_account_imap_delete_account

def gnc_account_imap_find_account_bayes(imap, tokens):
    return _sw_engine.gnc_account_imap_find_account_bayes(imap, tokens)
gnc_account_imap_find_account_bayes = _sw_engine.gnc_account_imap_find_account_bayes

def gnc_account_imap_add_account_bayes(imap, tokens, acc):
    return _sw_engine.gnc_account_imap_add_account_bayes(imap, tokens, acc)
gnc_account_imap_add_account_bayes = _sw_engine.gnc_account_imap_add_account_bayes
class GncImapInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncImapInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncImapInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["source_account"] = _sw_engine.GncImapInfo_source_account_set
    __swig_getmethods__["source_account"] = _sw_engine.GncImapInfo_source_account_get
    if _newclass:
        source_account = _swig_property(_sw_engine.GncImapInfo_source_account_get, _sw_engine.GncImapInfo_source_account_set)
    __swig_setmethods__["map_account"] = _sw_engine.GncImapInfo_map_account_set
    __swig_getmethods__["map_account"] = _sw_engine.GncImapInfo_map_account_get
    if _newclass:
        map_account = _swig_property(_sw_engine.GncImapInfo_map_account_get, _sw_engine.GncImapInfo_map_account_set)
    __swig_setmethods__["list"] = _sw_engine.GncImapInfo_list_set
    __swig_getmethods__["list"] = _sw_engine.GncImapInfo_list_get
    if _newclass:
        list = _swig_property(_sw_engine.GncImapInfo_list_get, _sw_engine.GncImapInfo_list_set)
    __swig_setmethods__["head"] = _sw_engine.GncImapInfo_head_set
    __swig_getmethods__["head"] = _sw_engine.GncImapInfo_head_get
    if _newclass:
        head = _swig_property(_sw_engine.GncImapInfo_head_get, _sw_engine.GncImapInfo_head_set)
    __swig_setmethods__["category"] = _sw_engine.GncImapInfo_category_set
    __swig_getmethods__["category"] = _sw_engine.GncImapInfo_category_get
    if _newclass:
        category = _swig_property(_sw_engine.GncImapInfo_category_get, _sw_engine.GncImapInfo_category_set)
    __swig_setmethods__["match_string"] = _sw_engine.GncImapInfo_match_string_set
    __swig_getmethods__["match_string"] = _sw_engine.GncImapInfo_match_string_get
    if _newclass:
        match_string = _swig_property(_sw_engine.GncImapInfo_match_string_get, _sw_engine.GncImapInfo_match_string_set)
    __swig_setmethods__["count"] = _sw_engine.GncImapInfo_count_set
    __swig_getmethods__["count"] = _sw_engine.GncImapInfo_count_get
    if _newclass:
        count = _swig_property(_sw_engine.GncImapInfo_count_get, _sw_engine.GncImapInfo_count_set)

    def __init__(self):
        this = _sw_engine.new_GncImapInfo()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_engine.delete_GncImapInfo
    __del__ = lambda self: None
GncImapInfo_swigregister = _sw_engine.GncImapInfo_swigregister
GncImapInfo_swigregister(GncImapInfo)


def gnc_account_imap_get_info_bayes(acc):
    return _sw_engine.gnc_account_imap_get_info_bayes(acc)
gnc_account_imap_get_info_bayes = _sw_engine.gnc_account_imap_get_info_bayes

def gnc_account_imap_get_info(acc, category):
    return _sw_engine.gnc_account_imap_get_info(acc, category)
gnc_account_imap_get_info = _sw_engine.gnc_account_imap_get_info

def gnc_account_get_map_entry(acc, full_category):
    return _sw_engine.gnc_account_get_map_entry(acc, full_category)
gnc_account_get_map_entry = _sw_engine.gnc_account_get_map_entry

def gnc_account_delete_map_entry(acc, head, category, match_string, empty):
    return _sw_engine.gnc_account_delete_map_entry(acc, head, category, match_string, empty)
gnc_account_delete_map_entry = _sw_engine.gnc_account_delete_map_entry

def gnc_account_delete_all_bayes_maps(acc):
    return _sw_engine.gnc_account_delete_all_bayes_maps(acc)
gnc_account_delete_all_bayes_maps = _sw_engine.gnc_account_delete_all_bayes_maps

def DxaccAccountSetCurrency(account, currency):
    return _sw_engine.DxaccAccountSetCurrency(account, currency)
DxaccAccountSetCurrency = _sw_engine.DxaccAccountSetCurrency

def DxaccAccountGetCurrency(account):
    return _sw_engine.DxaccAccountGetCurrency(account)
DxaccAccountGetCurrency = _sw_engine.DxaccAccountGetCurrency

def dxaccAccountSetQuoteTZ(account, tz):
    return _sw_engine.dxaccAccountSetQuoteTZ(account, tz)
dxaccAccountSetQuoteTZ = _sw_engine.dxaccAccountSetQuoteTZ

def dxaccAccountGetQuoteTZ(account):
    return _sw_engine.dxaccAccountGetQuoteTZ(account)
dxaccAccountGetQuoteTZ = _sw_engine.dxaccAccountGetQuoteTZ
ACCOUNT_KVP = _sw_engine.ACCOUNT_KVP
ACCOUNT_NAME_ = _sw_engine.ACCOUNT_NAME_
ACCOUNT_CODE_ = _sw_engine.ACCOUNT_CODE_
ACCOUNT_DESCRIPTION_ = _sw_engine.ACCOUNT_DESCRIPTION_
ACCOUNT_COLOR_ = _sw_engine.ACCOUNT_COLOR_
ACCOUNT_FILTER_ = _sw_engine.ACCOUNT_FILTER_
ACCOUNT_SORT_ORDER_ = _sw_engine.ACCOUNT_SORT_ORDER_
ACCOUNT_SORT_REVERSED_ = _sw_engine.ACCOUNT_SORT_REVERSED_
ACCOUNT_NOTES_ = _sw_engine.ACCOUNT_NOTES_
ACCOUNT_BALANCE_ = _sw_engine.ACCOUNT_BALANCE_
ACCOUNT_CLEARED_ = _sw_engine.ACCOUNT_CLEARED_
ACCOUNT_RECONCILED_ = _sw_engine.ACCOUNT_RECONCILED_
ACCOUNT_PRESENT_ = _sw_engine.ACCOUNT_PRESENT_
ACCOUNT_FUTURE_MINIMUM_ = _sw_engine.ACCOUNT_FUTURE_MINIMUM_
ACCOUNT_TAX_RELATED = _sw_engine.ACCOUNT_TAX_RELATED
ACCOUNT_TYPE_ = _sw_engine.ACCOUNT_TYPE_
ACCOUNT_SCU = _sw_engine.ACCOUNT_SCU
ACCOUNT_NSCU = _sw_engine.ACCOUNT_NSCU
ACCOUNT_PARENT = _sw_engine.ACCOUNT_PARENT
ACCOUNT_MATCH_ALL_TYPE = _sw_engine.ACCOUNT_MATCH_ALL_TYPE

def gnc_transaction_get_type():
    return _sw_engine.gnc_transaction_get_type()
gnc_transaction_get_type = _sw_engine.gnc_transaction_get_type
TXN_TYPE_NONE = _sw_engine.TXN_TYPE_NONE
TXN_TYPE_INVOICE = _sw_engine.TXN_TYPE_INVOICE
TXN_TYPE_PAYMENT = _sw_engine.TXN_TYPE_PAYMENT
TXN_TYPE_LINK = _sw_engine.TXN_TYPE_LINK

def xaccMallocTransaction(book):
    return _sw_engine.xaccMallocTransaction(book)
xaccMallocTransaction = _sw_engine.xaccMallocTransaction

def xaccTransDestroy(trans):
    return _sw_engine.xaccTransDestroy(trans)
xaccTransDestroy = _sw_engine.xaccTransDestroy

def xaccTransClone(t):
    return _sw_engine.xaccTransClone(t)
xaccTransClone = _sw_engine.xaccTransClone

def xaccTransCloneNoKvp(t):
    return _sw_engine.xaccTransCloneNoKvp(t)
xaccTransCloneNoKvp = _sw_engine.xaccTransCloneNoKvp

def xaccTransEqual(ta, tb, check_guids, check_splits, check_balances, assume_ordered):
    return _sw_engine.xaccTransEqual(ta, tb, check_guids, check_splits, check_balances, assume_ordered)
xaccTransEqual = _sw_engine.xaccTransEqual

def xaccTransBeginEdit(trans):
    return _sw_engine.xaccTransBeginEdit(trans)
xaccTransBeginEdit = _sw_engine.xaccTransBeginEdit

def xaccTransCommitEdit(trans):
    return _sw_engine.xaccTransCommitEdit(trans)
xaccTransCommitEdit = _sw_engine.xaccTransCommitEdit

def xaccTransRollbackEdit(trans):
    return _sw_engine.xaccTransRollbackEdit(trans)
xaccTransRollbackEdit = _sw_engine.xaccTransRollbackEdit

def xaccTransIsOpen(trans):
    return _sw_engine.xaccTransIsOpen(trans)
xaccTransIsOpen = _sw_engine.xaccTransIsOpen

def xaccTransLookup(guid, book):
    return _sw_engine.xaccTransLookup(guid, book)
xaccTransLookup = _sw_engine.xaccTransLookup

def xaccTransCopyToClipBoard(from_trans):
    return _sw_engine.xaccTransCopyToClipBoard(from_trans)
xaccTransCopyToClipBoard = _sw_engine.xaccTransCopyToClipBoard

def xaccTransCopyOnto(from_trans, to_trans):
    return _sw_engine.xaccTransCopyOnto(from_trans, to_trans)
xaccTransCopyOnto = _sw_engine.xaccTransCopyOnto

def xaccTransCopyFromClipBoard(from_trans, to_trans, from_acc, to_acc, no_date):
    return _sw_engine.xaccTransCopyFromClipBoard(from_trans, to_trans, from_acc, to_acc, no_date)
xaccTransCopyFromClipBoard = _sw_engine.xaccTransCopyFromClipBoard

def xaccTransFindSplitByAccount(trans, acc):
    return _sw_engine.xaccTransFindSplitByAccount(trans, acc)
xaccTransFindSplitByAccount = _sw_engine.xaccTransFindSplitByAccount

def xaccTransScrubGains(trans, gain_acc):
    return _sw_engine.xaccTransScrubGains(trans, gain_acc)
xaccTransScrubGains = _sw_engine.xaccTransScrubGains

def gnc_book_count_transactions(book):
    return _sw_engine.gnc_book_count_transactions(book)
gnc_book_count_transactions = _sw_engine.gnc_book_count_transactions

def xaccTransUseTradingAccounts(trans):
    return _sw_engine.xaccTransUseTradingAccounts(trans)
xaccTransUseTradingAccounts = _sw_engine.xaccTransUseTradingAccounts

def xaccTransSortSplits(trans):
    return _sw_engine.xaccTransSortSplits(trans)
xaccTransSortSplits = _sw_engine.xaccTransSortSplits

def xaccTransSetTxnType(trans, type):
    return _sw_engine.xaccTransSetTxnType(trans, type)
xaccTransSetTxnType = _sw_engine.xaccTransSetTxnType

def xaccTransGetTxnType(trans):
    return _sw_engine.xaccTransGetTxnType(trans)
xaccTransGetTxnType = _sw_engine.xaccTransGetTxnType

def xaccTransSetNum(trans, num):
    return _sw_engine.xaccTransSetNum(trans, num)
xaccTransSetNum = _sw_engine.xaccTransSetNum

def xaccTransSetDescription(trans, desc):
    return _sw_engine.xaccTransSetDescription(trans, desc)
xaccTransSetDescription = _sw_engine.xaccTransSetDescription

def xaccTransSetAssociation(trans, assoc):
    return _sw_engine.xaccTransSetAssociation(trans, assoc)
xaccTransSetAssociation = _sw_engine.xaccTransSetAssociation

def xaccTransSetNotes(trans, notes):
    return _sw_engine.xaccTransSetNotes(trans, notes)
xaccTransSetNotes = _sw_engine.xaccTransSetNotes

def xaccTransGetNum(trans):
    return _sw_engine.xaccTransGetNum(trans)
xaccTransGetNum = _sw_engine.xaccTransGetNum

def xaccTransGetDescription(trans):
    return _sw_engine.xaccTransGetDescription(trans)
xaccTransGetDescription = _sw_engine.xaccTransGetDescription

def xaccTransGetAssociation(trans):
    return _sw_engine.xaccTransGetAssociation(trans)
xaccTransGetAssociation = _sw_engine.xaccTransGetAssociation

def xaccTransGetNotes(trans):
    return _sw_engine.xaccTransGetNotes(trans)
xaccTransGetNotes = _sw_engine.xaccTransGetNotes

def xaccTransSetIsClosingTxn(trans, is_closing):
    return _sw_engine.xaccTransSetIsClosingTxn(trans, is_closing)
xaccTransSetIsClosingTxn = _sw_engine.xaccTransSetIsClosingTxn

def xaccTransGetIsClosingTxn(trans):
    return _sw_engine.xaccTransGetIsClosingTxn(trans)
xaccTransGetIsClosingTxn = _sw_engine.xaccTransGetIsClosingTxn

def xaccTransGetSplit(trans, i):
    return _sw_engine.xaccTransGetSplit(trans, i)
xaccTransGetSplit = _sw_engine.xaccTransGetSplit

def xaccTransGetSplitIndex(trans, split):
    return _sw_engine.xaccTransGetSplitIndex(trans, split)
xaccTransGetSplitIndex = _sw_engine.xaccTransGetSplitIndex

def xaccTransGetSplitList(trans):
    return _sw_engine.xaccTransGetSplitList(trans)
xaccTransGetSplitList = _sw_engine.xaccTransGetSplitList

def xaccTransGetPaymentAcctSplitList(trans):
    return _sw_engine.xaccTransGetPaymentAcctSplitList(trans)
xaccTransGetPaymentAcctSplitList = _sw_engine.xaccTransGetPaymentAcctSplitList

def xaccTransGetAPARAcctSplitList(trans, strict):
    return _sw_engine.xaccTransGetAPARAcctSplitList(trans, strict)
xaccTransGetAPARAcctSplitList = _sw_engine.xaccTransGetAPARAcctSplitList

def xaccTransStillHasSplit(trans, s):
    return _sw_engine.xaccTransStillHasSplit(trans, s)
xaccTransStillHasSplit = _sw_engine.xaccTransStillHasSplit

def xaccTransGetFirstPaymentAcctSplit(trans):
    return _sw_engine.xaccTransGetFirstPaymentAcctSplit(trans)
xaccTransGetFirstPaymentAcctSplit = _sw_engine.xaccTransGetFirstPaymentAcctSplit

def xaccTransGetFirstAPARAcctSplit(trans, strict):
    return _sw_engine.xaccTransGetFirstAPARAcctSplit(trans, strict)
xaccTransGetFirstAPARAcctSplit = _sw_engine.xaccTransGetFirstAPARAcctSplit

def xaccTransSetReadOnly(trans, reason):
    return _sw_engine.xaccTransSetReadOnly(trans, reason)
xaccTransSetReadOnly = _sw_engine.xaccTransSetReadOnly

def xaccTransClearReadOnly(trans):
    return _sw_engine.xaccTransClearReadOnly(trans)
xaccTransClearReadOnly = _sw_engine.xaccTransClearReadOnly

def xaccTransGetReadOnly(trans):
    return _sw_engine.xaccTransGetReadOnly(trans)
xaccTransGetReadOnly = _sw_engine.xaccTransGetReadOnly

def xaccTransIsReadonlyByPostedDate(trans):
    return _sw_engine.xaccTransIsReadonlyByPostedDate(trans)
xaccTransIsReadonlyByPostedDate = _sw_engine.xaccTransIsReadonlyByPostedDate

def xaccTransInFutureByPostedDate(trans):
    return _sw_engine.xaccTransInFutureByPostedDate(trans)
xaccTransInFutureByPostedDate = _sw_engine.xaccTransInFutureByPostedDate

def xaccTransCountSplits(trans):
    return _sw_engine.xaccTransCountSplits(trans)
xaccTransCountSplits = _sw_engine.xaccTransCountSplits

def xaccTransHasReconciledSplits(trans):
    return _sw_engine.xaccTransHasReconciledSplits(trans)
xaccTransHasReconciledSplits = _sw_engine.xaccTransHasReconciledSplits

def xaccTransHasReconciledSplitsByAccount(trans, account):
    return _sw_engine.xaccTransHasReconciledSplitsByAccount(trans, account)
xaccTransHasReconciledSplitsByAccount = _sw_engine.xaccTransHasReconciledSplitsByAccount

def xaccTransHasSplitsInState(trans, state):
    return _sw_engine.xaccTransHasSplitsInState(trans, state)
xaccTransHasSplitsInState = _sw_engine.xaccTransHasSplitsInState

def xaccTransHasSplitsInStateByAccount(trans, state, account):
    return _sw_engine.xaccTransHasSplitsInStateByAccount(trans, state, account)
xaccTransHasSplitsInStateByAccount = _sw_engine.xaccTransHasSplitsInStateByAccount

def xaccTransGetCurrency(trans):
    return _sw_engine.xaccTransGetCurrency(trans)
xaccTransGetCurrency = _sw_engine.xaccTransGetCurrency

def xaccTransSetCurrency(trans, curr):
    return _sw_engine.xaccTransSetCurrency(trans, curr)
xaccTransSetCurrency = _sw_engine.xaccTransSetCurrency

def xaccTransGetImbalanceValue(trans):
    return _sw_engine.xaccTransGetImbalanceValue(trans)
xaccTransGetImbalanceValue = _sw_engine.xaccTransGetImbalanceValue

def xaccTransGetImbalance(trans):
    return _sw_engine.xaccTransGetImbalance(trans)
xaccTransGetImbalance = _sw_engine.xaccTransGetImbalance

def xaccTransIsBalanced(trans):
    return _sw_engine.xaccTransIsBalanced(trans)
xaccTransIsBalanced = _sw_engine.xaccTransIsBalanced

def xaccTransGetAccountValue(trans, account):
    return _sw_engine.xaccTransGetAccountValue(trans, account)
xaccTransGetAccountValue = _sw_engine.xaccTransGetAccountValue

def xaccTransGetAccountAmount(trans, account):
    return _sw_engine.xaccTransGetAccountAmount(trans, account)
xaccTransGetAccountAmount = _sw_engine.xaccTransGetAccountAmount

def xaccTransGetRateForCommodity(trans, split_com, split_to_exclude, rate):
    return _sw_engine.xaccTransGetRateForCommodity(trans, split_com, split_to_exclude, rate)
xaccTransGetRateForCommodity = _sw_engine.xaccTransGetRateForCommodity

def xaccTransGetAccountConvRate(txn, acc):
    return _sw_engine.xaccTransGetAccountConvRate(txn, acc)
xaccTransGetAccountConvRate = _sw_engine.xaccTransGetAccountConvRate

def xaccTransGetAccountBalance(trans, account):
    return _sw_engine.xaccTransGetAccountBalance(trans, account)
xaccTransGetAccountBalance = _sw_engine.xaccTransGetAccountBalance

def xaccTransOrder(ta, tb):
    return _sw_engine.xaccTransOrder(ta, tb)
xaccTransOrder = _sw_engine.xaccTransOrder

def xaccTransOrder_num_action(ta, actna, tb, actnb):
    return _sw_engine.xaccTransOrder_num_action(ta, actna, tb, actnb)
xaccTransOrder_num_action = _sw_engine.xaccTransOrder_num_action

def xaccTransSetDate(trans, day, mon, year):
    return _sw_engine.xaccTransSetDate(trans, day, mon, year)
xaccTransSetDate = _sw_engine.xaccTransSetDate

def xaccTransSetDatePostedGDate(trans, date):
    return _sw_engine.xaccTransSetDatePostedGDate(trans, date)
xaccTransSetDatePostedGDate = _sw_engine.xaccTransSetDatePostedGDate

def xaccTransSetDatePostedSecs(trans, time):
    return _sw_engine.xaccTransSetDatePostedSecs(trans, time)
xaccTransSetDatePostedSecs = _sw_engine.xaccTransSetDatePostedSecs

def xaccTransSetDatePostedSecsNormalized(trans, time):
    return _sw_engine.xaccTransSetDatePostedSecsNormalized(trans, time)
xaccTransSetDatePostedSecsNormalized = _sw_engine.xaccTransSetDatePostedSecsNormalized

def xaccTransSetDateEnteredSecs(trans, time):
    return _sw_engine.xaccTransSetDateEnteredSecs(trans, time)
xaccTransSetDateEnteredSecs = _sw_engine.xaccTransSetDateEnteredSecs

def xaccTransSetDateDue(trans, time):
    return _sw_engine.xaccTransSetDateDue(trans, time)
xaccTransSetDateDue = _sw_engine.xaccTransSetDateDue

def xaccTransGetDate(trans):
    return _sw_engine.xaccTransGetDate(trans)
xaccTransGetDate = _sw_engine.xaccTransGetDate

def xaccTransRetDatePosted(trans):
    return _sw_engine.xaccTransRetDatePosted(trans)
xaccTransRetDatePosted = _sw_engine.xaccTransRetDatePosted

def xaccTransGetDatePostedGDate(trans):
    return _sw_engine.xaccTransGetDatePostedGDate(trans)
xaccTransGetDatePostedGDate = _sw_engine.xaccTransGetDatePostedGDate

def xaccTransGetDateEntered(trans):
    return _sw_engine.xaccTransGetDateEntered(trans)
xaccTransGetDateEntered = _sw_engine.xaccTransGetDateEntered

def xaccTransRetDateEntered(trans):
    return _sw_engine.xaccTransRetDateEntered(trans)
xaccTransRetDateEntered = _sw_engine.xaccTransRetDateEntered

def xaccTransRetDateDue(trans):
    return _sw_engine.xaccTransRetDateDue(trans)
xaccTransRetDateDue = _sw_engine.xaccTransRetDateDue

def xaccTransVoid(transaction, reason):
    return _sw_engine.xaccTransVoid(transaction, reason)
xaccTransVoid = _sw_engine.xaccTransVoid

def xaccTransUnvoid(transaction):
    return _sw_engine.xaccTransUnvoid(transaction)
xaccTransUnvoid = _sw_engine.xaccTransUnvoid

def xaccTransReverse(transaction):
    return _sw_engine.xaccTransReverse(transaction)
xaccTransReverse = _sw_engine.xaccTransReverse

def xaccTransGetReversedBy(trans):
    return _sw_engine.xaccTransGetReversedBy(trans)
xaccTransGetReversedBy = _sw_engine.xaccTransGetReversedBy

def xaccTransGetVoidStatus(transaction):
    return _sw_engine.xaccTransGetVoidStatus(transaction)
xaccTransGetVoidStatus = _sw_engine.xaccTransGetVoidStatus

def xaccTransGetVoidReason(transaction):
    return _sw_engine.xaccTransGetVoidReason(transaction)
xaccTransGetVoidReason = _sw_engine.xaccTransGetVoidReason

def xaccTransGetVoidTime(tr):
    return _sw_engine.xaccTransGetVoidTime(tr)
xaccTransGetVoidTime = _sw_engine.xaccTransGetVoidTime
TRANS_KVP = _sw_engine.TRANS_KVP
TRANS_NUM = _sw_engine.TRANS_NUM
TRANS_DESCRIPTION = _sw_engine.TRANS_DESCRIPTION
TRANS_DATE_ENTERED = _sw_engine.TRANS_DATE_ENTERED
TRANS_DATE_POSTED = _sw_engine.TRANS_DATE_POSTED
TRANS_DATE_DUE = _sw_engine.TRANS_DATE_DUE
TRANS_IMBALANCE = _sw_engine.TRANS_IMBALANCE
TRANS_IS_BALANCED = _sw_engine.TRANS_IS_BALANCED
TRANS_IS_CLOSING = _sw_engine.TRANS_IS_CLOSING
TRANS_NOTES = _sw_engine.TRANS_NOTES
TRANS_ASSOCIATION = _sw_engine.TRANS_ASSOCIATION
TRANS_TYPE = _sw_engine.TRANS_TYPE
TRANS_VOID_STATUS = _sw_engine.TRANS_VOID_STATUS
TRANS_VOID_REASON = _sw_engine.TRANS_VOID_REASON
TRANS_VOID_TIME = _sw_engine.TRANS_VOID_TIME
TRANS_SPLITLIST = _sw_engine.TRANS_SPLITLIST
RECONCILED_MATCH_TYPE = _sw_engine.RECONCILED_MATCH_TYPE
class GncLotClass(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncLotClass, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncLotClass, name)
    __repr__ = _swig_repr
    __swig_setmethods__["parent_class"] = _sw_engine.GncLotClass_parent_class_set
    __swig_getmethods__["parent_class"] = _sw_engine.GncLotClass_parent_class_get
    if _newclass:
        parent_class = _swig_property(_sw_engine.GncLotClass_parent_class_get, _sw_engine.GncLotClass_parent_class_set)

    def __init__(self):
        this = _sw_engine.new_GncLotClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_engine.delete_GncLotClass
    __del__ = lambda self: None
GncLotClass_swigregister = _sw_engine.GncLotClass_swigregister
GncLotClass_swigregister(GncLotClass)


def gnc_lot_get_type():
    return _sw_engine.gnc_lot_get_type()
gnc_lot_get_type = _sw_engine.gnc_lot_get_type

def gnc_lot_new(arg1):
    return _sw_engine.gnc_lot_new(arg1)
gnc_lot_new = _sw_engine.gnc_lot_new

def gnc_lot_destroy(arg1):
    return _sw_engine.gnc_lot_destroy(arg1)
gnc_lot_destroy = _sw_engine.gnc_lot_destroy

def gnc_lot_lookup(guid, book):
    return _sw_engine.gnc_lot_lookup(guid, book)
gnc_lot_lookup = _sw_engine.gnc_lot_lookup

def gnc_lot_get_book(arg1):
    return _sw_engine.gnc_lot_get_book(arg1)
gnc_lot_get_book = _sw_engine.gnc_lot_get_book

def gnc_lot_begin_edit(lot):
    return _sw_engine.gnc_lot_begin_edit(lot)
gnc_lot_begin_edit = _sw_engine.gnc_lot_begin_edit

def gnc_lot_commit_edit(lot):
    return _sw_engine.gnc_lot_commit_edit(lot)
gnc_lot_commit_edit = _sw_engine.gnc_lot_commit_edit

def gnc_lot_add_split(arg1, arg2):
    return _sw_engine.gnc_lot_add_split(arg1, arg2)
gnc_lot_add_split = _sw_engine.gnc_lot_add_split

def gnc_lot_remove_split(arg1, arg2):
    return _sw_engine.gnc_lot_remove_split(arg1, arg2)
gnc_lot_remove_split = _sw_engine.gnc_lot_remove_split

def gnc_lot_get_split_list(arg1):
    return _sw_engine.gnc_lot_get_split_list(arg1)
gnc_lot_get_split_list = _sw_engine.gnc_lot_get_split_list

def gnc_lot_count_splits(arg1):
    return _sw_engine.gnc_lot_count_splits(arg1)
gnc_lot_count_splits = _sw_engine.gnc_lot_count_splits

def gnc_lot_get_account(arg1):
    return _sw_engine.gnc_lot_get_account(arg1)
gnc_lot_get_account = _sw_engine.gnc_lot_get_account

def gnc_lot_set_account(arg1, arg2):
    return _sw_engine.gnc_lot_set_account(arg1, arg2)
gnc_lot_set_account = _sw_engine.gnc_lot_set_account

def gnc_lot_get_balance(arg1):
    return _sw_engine.gnc_lot_get_balance(arg1)
gnc_lot_get_balance = _sw_engine.gnc_lot_get_balance

def gnc_lot_get_balance_before(arg1, arg2, arg3, arg4):
    return _sw_engine.gnc_lot_get_balance_before(arg1, arg2, arg3, arg4)
gnc_lot_get_balance_before = _sw_engine.gnc_lot_get_balance_before

def gnc_lot_is_closed(arg1):
    return _sw_engine.gnc_lot_is_closed(arg1)
gnc_lot_is_closed = _sw_engine.gnc_lot_is_closed

def gnc_lot_get_earliest_split(lot):
    return _sw_engine.gnc_lot_get_earliest_split(lot)
gnc_lot_get_earliest_split = _sw_engine.gnc_lot_get_earliest_split

def gnc_lot_get_latest_split(lot):
    return _sw_engine.gnc_lot_get_latest_split(lot)
gnc_lot_get_latest_split = _sw_engine.gnc_lot_get_latest_split

def gnc_lot_set_closed_unknown(arg1):
    return _sw_engine.gnc_lot_set_closed_unknown(arg1)
gnc_lot_set_closed_unknown = _sw_engine.gnc_lot_set_closed_unknown

def gnc_lot_get_title(arg1):
    return _sw_engine.gnc_lot_get_title(arg1)
gnc_lot_get_title = _sw_engine.gnc_lot_get_title

def gnc_lot_get_notes(arg1):
    return _sw_engine.gnc_lot_get_notes(arg1)
gnc_lot_get_notes = _sw_engine.gnc_lot_get_notes

def gnc_lot_set_title(arg1, arg2):
    return _sw_engine.gnc_lot_set_title(arg1, arg2)
gnc_lot_set_title = _sw_engine.gnc_lot_set_title

def gnc_lot_set_notes(arg1, arg2):
    return _sw_engine.gnc_lot_set_notes(arg1, arg2)
gnc_lot_set_notes = _sw_engine.gnc_lot_set_notes

def gnc_lot_make_default(acc):
    return _sw_engine.gnc_lot_make_default(acc)
gnc_lot_make_default = _sw_engine.gnc_lot_make_default
LOT_IS_CLOSED = _sw_engine.LOT_IS_CLOSED
LOT_BALANCE = _sw_engine.LOT_BALANCE
LOT_TITLE = _sw_engine.LOT_TITLE
LOT_NOTES = _sw_engine.LOT_NOTES

def gncPriceGetGUID(x):
    return _sw_engine.gncPriceGetGUID(x)
gncPriceGetGUID = _sw_engine.gncPriceGetGUID

def gncBudgetGetGUID(x):
    return _sw_engine.gncBudgetGetGUID(x)
gncBudgetGetGUID = _sw_engine.gncBudgetGetGUID

def QOF_ID_BOOK_SCM():
    return _sw_engine.QOF_ID_BOOK_SCM()
QOF_ID_BOOK_SCM = _sw_engine.QOF_ID_BOOK_SCM

def gnc_transaction_get_date_posted(t):
    return _sw_engine.gnc_transaction_get_date_posted(t)
gnc_transaction_get_date_posted = _sw_engine.gnc_transaction_get_date_posted

def gnc_transaction_get_date_entered(t):
    return _sw_engine.gnc_transaction_get_date_entered(t)
gnc_transaction_get_date_entered = _sw_engine.gnc_transaction_get_date_entered

def gnc_split_get_date_reconciled(s):
    return _sw_engine.gnc_split_get_date_reconciled(s)
gnc_split_get_date_reconciled = _sw_engine.gnc_split_get_date_reconciled

def gnc_transaction_set_date(t, ts):
    return _sw_engine.gnc_transaction_set_date(t, ts)
gnc_transaction_set_date = _sw_engine.gnc_transaction_set_date

def gnc_get_num_action(trans, split):
    return _sw_engine.gnc_get_num_action(trans, split)
gnc_get_num_action = _sw_engine.gnc_get_num_action

def gnc_get_action_num(trans, split):
    return _sw_engine.gnc_get_action_num(trans, split)
gnc_get_action_num = _sw_engine.gnc_get_action_num

def gnc_set_num_action(trans, split, num, action):
    return _sw_engine.gnc_set_num_action(trans, split, num, action)
gnc_set_num_action = _sw_engine.gnc_set_num_action

def gnc_book_option_num_field_source_change(num_action):
    return _sw_engine.gnc_book_option_num_field_source_change(num_action)
gnc_book_option_num_field_source_change = _sw_engine.gnc_book_option_num_field_source_change

def gnc_book_option_book_currency_selected(use_book_currency):
    return _sw_engine.gnc_book_option_book_currency_selected(use_book_currency)
gnc_book_option_book_currency_selected = _sw_engine.gnc_book_option_book_currency_selected

def gnc_book_option_register_cb(key, func, user_data):
    return _sw_engine.gnc_book_option_register_cb(key, func, user_data)
gnc_book_option_register_cb = _sw_engine.gnc_book_option_register_cb

def gnc_book_option_remove_cb(key, func, user_data):
    return _sw_engine.gnc_book_option_remove_cb(key, func, user_data)
gnc_book_option_remove_cb = _sw_engine.gnc_book_option_remove_cb

def gnc_timespec2timepair(t):
    return _sw_engine.gnc_timespec2timepair(t)
gnc_timespec2timepair = _sw_engine.gnc_timespec2timepair

def gnc_timepair2timespec(x):
    return _sw_engine.gnc_timepair2timespec(x)
gnc_timepair2timespec = _sw_engine.gnc_timepair2timespec

def gnc_time64_to_GDate(x):
    return _sw_engine.gnc_time64_to_GDate(x)
gnc_time64_to_GDate = _sw_engine.gnc_time64_to_GDate

def gnc_timepair_p(x):
    return _sw_engine.gnc_timepair_p(x)
gnc_timepair_p = _sw_engine.gnc_timepair_p

def gnc_guid2scm(guid):
    return _sw_engine.gnc_guid2scm(guid)
gnc_guid2scm = _sw_engine.gnc_guid2scm

def gnc_scm2guid(guid_scm):
    return _sw_engine.gnc_scm2guid(guid_scm)
gnc_scm2guid = _sw_engine.gnc_scm2guid

def gnc_guid_p(guid_scm):
    return _sw_engine.gnc_guid_p(guid_scm)
gnc_guid_p = _sw_engine.gnc_guid_p

def gnc_query_scm2path(path_scm):
    return _sw_engine.gnc_query_scm2path(path_scm)
gnc_query_scm2path = _sw_engine.gnc_query_scm2path

def gnc_query2scm(q):
    return _sw_engine.gnc_query2scm(q)
gnc_query2scm = _sw_engine.gnc_query2scm

def gnc_scm2query(query_scm):
    return _sw_engine.gnc_scm2query(query_scm)
gnc_scm2query = _sw_engine.gnc_scm2query

def gnc_numeric_to_scm(arg):
    return _sw_engine.gnc_numeric_to_scm(arg)
gnc_numeric_to_scm = _sw_engine.gnc_numeric_to_scm

def gnc_scm_to_numeric(arg):
    return _sw_engine.gnc_scm_to_numeric(arg)
gnc_scm_to_numeric = _sw_engine.gnc_scm_to_numeric

def gnc_scm_to_commodity(scm):
    return _sw_engine.gnc_scm_to_commodity(scm)
gnc_scm_to_commodity = _sw_engine.gnc_scm_to_commodity

def gnc_commodity_to_scm(commodity):
    return _sw_engine.gnc_commodity_to_scm(commodity)
gnc_commodity_to_scm = _sw_engine.gnc_commodity_to_scm

def gnc_book_to_scm(book):
    return _sw_engine.gnc_book_to_scm(book)
gnc_book_to_scm = _sw_engine.gnc_book_to_scm

def gnc_get_valid_policy_list():
    return _sw_engine.gnc_get_valid_policy_list()
gnc_get_valid_policy_list = _sw_engine.gnc_get_valid_policy_list

def gnc_valid_policy_name(policy_name):
    return _sw_engine.gnc_valid_policy_name(policy_name)
gnc_valid_policy_name = _sw_engine.gnc_valid_policy_name

def PolicyGetName(pcy):
    return _sw_engine.PolicyGetName(pcy)
PolicyGetName = _sw_engine.PolicyGetName

def PolicyGetDescription(pcy):
    return _sw_engine.PolicyGetDescription(pcy)
PolicyGetDescription = _sw_engine.PolicyGetDescription

def PolicyGetHint(pcy):
    return _sw_engine.PolicyGetHint(pcy)
PolicyGetHint = _sw_engine.PolicyGetHint

def xaccGetFIFOPolicy():
    return _sw_engine.xaccGetFIFOPolicy()
xaccGetFIFOPolicy = _sw_engine.xaccGetFIFOPolicy

def xaccGetLIFOPolicy():
    return _sw_engine.xaccGetLIFOPolicy()
xaccGetLIFOPolicy = _sw_engine.xaccGetLIFOPolicy

def gnc_price_get_type():
    return _sw_engine.gnc_price_get_type()
gnc_price_get_type = _sw_engine.gnc_price_get_type

def gnc_pricedb_get_type():
    return _sw_engine.gnc_pricedb_get_type()
gnc_pricedb_get_type = _sw_engine.gnc_pricedb_get_type
PRICE_SOURCE_EDIT_DLG = _sw_engine.PRICE_SOURCE_EDIT_DLG
PRICE_SOURCE_FQ = _sw_engine.PRICE_SOURCE_FQ
PRICE_SOURCE_USER_PRICE = _sw_engine.PRICE_SOURCE_USER_PRICE
PRICE_SOURCE_XFER_DLG_VAL = _sw_engine.PRICE_SOURCE_XFER_DLG_VAL
PRICE_SOURCE_SPLIT_REG = _sw_engine.PRICE_SOURCE_SPLIT_REG
PRICE_SOURCE_STOCK_SPLIT = _sw_engine.PRICE_SOURCE_STOCK_SPLIT
PRICE_SOURCE_INVOICE = _sw_engine.PRICE_SOURCE_INVOICE
PRICE_SOURCE_TEMP = _sw_engine.PRICE_SOURCE_TEMP
PRICE_SOURCE_INVALID = _sw_engine.PRICE_SOURCE_INVALID
PRICE_TYPE_LAST = _sw_engine.PRICE_TYPE_LAST
PRICE_TYPE_UNK = _sw_engine.PRICE_TYPE_UNK
PRICE_TYPE_TRN = _sw_engine.PRICE_TYPE_TRN

def gnc_price_create(book):
    return _sw_engine.gnc_price_create(book)
gnc_price_create = _sw_engine.gnc_price_create

def gnc_price_clone(p, book):
    return _sw_engine.gnc_price_clone(p, book)
gnc_price_clone = _sw_engine.gnc_price_clone

def gnc_price_invert(p):
    return _sw_engine.gnc_price_invert(p)
gnc_price_invert = _sw_engine.gnc_price_invert

def gnc_price_ref(p):
    return _sw_engine.gnc_price_ref(p)
gnc_price_ref = _sw_engine.gnc_price_ref

def gnc_price_unref(p):
    return _sw_engine.gnc_price_unref(p)
gnc_price_unref = _sw_engine.gnc_price_unref

def gnc_price_begin_edit(p):
    return _sw_engine.gnc_price_begin_edit(p)
gnc_price_begin_edit = _sw_engine.gnc_price_begin_edit

def gnc_price_commit_edit(p):
    return _sw_engine.gnc_price_commit_edit(p)
gnc_price_commit_edit = _sw_engine.gnc_price_commit_edit

def gnc_price_set_commodity(p, c):
    return _sw_engine.gnc_price_set_commodity(p, c)
gnc_price_set_commodity = _sw_engine.gnc_price_set_commodity

def gnc_price_set_currency(p, c):
    return _sw_engine.gnc_price_set_currency(p, c)
gnc_price_set_currency = _sw_engine.gnc_price_set_currency

def gnc_price_set_time(p, t):
    return _sw_engine.gnc_price_set_time(p, t)
gnc_price_set_time = _sw_engine.gnc_price_set_time

def gnc_price_set_time64(p, t64):
    return _sw_engine.gnc_price_set_time64(p, t64)
gnc_price_set_time64 = _sw_engine.gnc_price_set_time64

def gnc_price_set_source(p, source):
    return _sw_engine.gnc_price_set_source(p, source)
gnc_price_set_source = _sw_engine.gnc_price_set_source

def gnc_price_set_source_string(p, s):
    return _sw_engine.gnc_price_set_source_string(p, s)
gnc_price_set_source_string = _sw_engine.gnc_price_set_source_string

def gnc_price_set_typestr(p, type):
    return _sw_engine.gnc_price_set_typestr(p, type)
gnc_price_set_typestr = _sw_engine.gnc_price_set_typestr

def gnc_price_set_value(p, value):
    return _sw_engine.gnc_price_set_value(p, value)
gnc_price_set_value = _sw_engine.gnc_price_set_value

def gnc_price_lookup(guid, book):
    return _sw_engine.gnc_price_lookup(guid, book)
gnc_price_lookup = _sw_engine.gnc_price_lookup

def gnc_price_get_commodity(p):
    return _sw_engine.gnc_price_get_commodity(p)
gnc_price_get_commodity = _sw_engine.gnc_price_get_commodity

def gnc_price_get_currency(p):
    return _sw_engine.gnc_price_get_currency(p)
gnc_price_get_currency = _sw_engine.gnc_price_get_currency

def gnc_price_get_time(p):
    return _sw_engine.gnc_price_get_time(p)
gnc_price_get_time = _sw_engine.gnc_price_get_time

def gnc_price_get_time64(p):
    return _sw_engine.gnc_price_get_time64(p)
gnc_price_get_time64 = _sw_engine.gnc_price_get_time64

def gnc_price_get_source(p):
    return _sw_engine.gnc_price_get_source(p)
gnc_price_get_source = _sw_engine.gnc_price_get_source

def gnc_price_get_source_string(p):
    return _sw_engine.gnc_price_get_source_string(p)
gnc_price_get_source_string = _sw_engine.gnc_price_get_source_string

def gnc_price_get_typestr(p):
    return _sw_engine.gnc_price_get_typestr(p)
gnc_price_get_typestr = _sw_engine.gnc_price_get_typestr

def gnc_price_get_value(p):
    return _sw_engine.gnc_price_get_value(p)
gnc_price_get_value = _sw_engine.gnc_price_get_value

def gnc_price_equal(p1, p2):
    return _sw_engine.gnc_price_equal(p1, p2)
gnc_price_equal = _sw_engine.gnc_price_equal

def gnc_price_print(db, f, indent):
    return _sw_engine.gnc_price_print(db, f, indent)
gnc_price_print = _sw_engine.gnc_price_print
CURRENCY_DENOM = _sw_engine.CURRENCY_DENOM
COMMODITY_DENOM_MULT = _sw_engine.COMMODITY_DENOM_MULT

def gnc_price_list_insert(prices, p, check_dupl):
    return _sw_engine.gnc_price_list_insert(prices, p, check_dupl)
gnc_price_list_insert = _sw_engine.gnc_price_list_insert

def gnc_price_list_remove(prices, p):
    return _sw_engine.gnc_price_list_remove(prices, p)
gnc_price_list_remove = _sw_engine.gnc_price_list_remove

def gnc_price_list_destroy(prices):
    return _sw_engine.gnc_price_list_destroy(prices)
gnc_price_list_destroy = _sw_engine.gnc_price_list_destroy

def gnc_price_list_equal(prices1, prices2):
    return _sw_engine.gnc_price_list_equal(prices1, prices2)
gnc_price_list_equal = _sw_engine.gnc_price_list_equal

def gnc_pricedb_get_db(book):
    return _sw_engine.gnc_pricedb_get_db(book)
gnc_pricedb_get_db = _sw_engine.gnc_pricedb_get_db

def gnc_collection_get_pricedb(col):
    return _sw_engine.gnc_collection_get_pricedb(col)
gnc_collection_get_pricedb = _sw_engine.gnc_collection_get_pricedb

def gnc_pricedb_destroy(db):
    return _sw_engine.gnc_pricedb_destroy(db)
gnc_pricedb_destroy = _sw_engine.gnc_pricedb_destroy

def gnc_pricedb_begin_edit(arg1):
    return _sw_engine.gnc_pricedb_begin_edit(arg1)
gnc_pricedb_begin_edit = _sw_engine.gnc_pricedb_begin_edit

def gnc_pricedb_commit_edit(arg1):
    return _sw_engine.gnc_pricedb_commit_edit(arg1)
gnc_pricedb_commit_edit = _sw_engine.gnc_pricedb_commit_edit

def gnc_pricedb_set_bulk_update(db, bulk_update):
    return _sw_engine.gnc_pricedb_set_bulk_update(db, bulk_update)
gnc_pricedb_set_bulk_update = _sw_engine.gnc_pricedb_set_bulk_update

def gnc_pricedb_add_price(db, p):
    return _sw_engine.gnc_pricedb_add_price(db, p)
gnc_pricedb_add_price = _sw_engine.gnc_pricedb_add_price

def gnc_pricedb_remove_price(db, p):
    return _sw_engine.gnc_pricedb_remove_price(db, p)
gnc_pricedb_remove_price = _sw_engine.gnc_pricedb_remove_price
PRICE_REMOVE_SOURCE_FQ = _sw_engine.PRICE_REMOVE_SOURCE_FQ
PRICE_REMOVE_SOURCE_USER = _sw_engine.PRICE_REMOVE_SOURCE_USER
PRICE_REMOVE_SOURCE_APP = _sw_engine.PRICE_REMOVE_SOURCE_APP
PRICE_REMOVE_SOURCE_COMM = _sw_engine.PRICE_REMOVE_SOURCE_COMM
PRICE_REMOVE_KEEP_NONE = _sw_engine.PRICE_REMOVE_KEEP_NONE
PRICE_REMOVE_KEEP_LAST_WEEKLY = _sw_engine.PRICE_REMOVE_KEEP_LAST_WEEKLY
PRICE_REMOVE_KEEP_LAST_MONTHLY = _sw_engine.PRICE_REMOVE_KEEP_LAST_MONTHLY
PRICE_REMOVE_KEEP_LAST_QUARTERLY = _sw_engine.PRICE_REMOVE_KEEP_LAST_QUARTERLY
PRICE_REMOVE_KEEP_LAST_PERIOD = _sw_engine.PRICE_REMOVE_KEEP_LAST_PERIOD
PRICE_REMOVE_KEEP_SCALED = _sw_engine.PRICE_REMOVE_KEEP_SCALED

def gnc_pricedb_remove_old_prices(db, comm_list, fiscal_end_date, cutoff, source, keep):
    return _sw_engine.gnc_pricedb_remove_old_prices(db, comm_list, fiscal_end_date, cutoff, source, keep)
gnc_pricedb_remove_old_prices = _sw_engine.gnc_pricedb_remove_old_prices

def gnc_pricedb_lookup_latest(db, commodity, currency):
    return _sw_engine.gnc_pricedb_lookup_latest(db, commodity, currency)
gnc_pricedb_lookup_latest = _sw_engine.gnc_pricedb_lookup_latest

def gnc_pricedb_lookup_latest_any_currency(db, commodity):
    return _sw_engine.gnc_pricedb_lookup_latest_any_currency(db, commodity)
gnc_pricedb_lookup_latest_any_currency = _sw_engine.gnc_pricedb_lookup_latest_any_currency

def gnc_pricedb_has_prices(db, commodity, currency):
    return _sw_engine.gnc_pricedb_has_prices(db, commodity, currency)
gnc_pricedb_has_prices = _sw_engine.gnc_pricedb_has_prices

def gnc_pricedb_get_prices(db, commodity, currency):
    return _sw_engine.gnc_pricedb_get_prices(db, commodity, currency)
gnc_pricedb_get_prices = _sw_engine.gnc_pricedb_get_prices

def gnc_pricedb_lookup_at_time(db, commodity, currency, t):
    return _sw_engine.gnc_pricedb_lookup_at_time(db, commodity, currency, t)
gnc_pricedb_lookup_at_time = _sw_engine.gnc_pricedb_lookup_at_time

def gnc_pricedb_lookup_day(db, commodity, currency, t):
    return _sw_engine.gnc_pricedb_lookup_day(db, commodity, currency, t)
gnc_pricedb_lookup_day = _sw_engine.gnc_pricedb_lookup_day

def gnc_pricedb_lookup_day_t64(db, commodity, currency, t64):
    return _sw_engine.gnc_pricedb_lookup_day_t64(db, commodity, currency, t64)
gnc_pricedb_lookup_day_t64 = _sw_engine.gnc_pricedb_lookup_day_t64

def gnc_pricedb_lookup_nearest_in_time(db, c, currency, t):
    return _sw_engine.gnc_pricedb_lookup_nearest_in_time(db, c, currency, t)
gnc_pricedb_lookup_nearest_in_time = _sw_engine.gnc_pricedb_lookup_nearest_in_time

def gnc_pricedb_lookup_nearest_in_time64(db, c, currency, t):
    return _sw_engine.gnc_pricedb_lookup_nearest_in_time64(db, c, currency, t)
gnc_pricedb_lookup_nearest_in_time64 = _sw_engine.gnc_pricedb_lookup_nearest_in_time64

def gnc_pricedb_lookup_nearest_in_time_any_currency(db, c, t):
    return _sw_engine.gnc_pricedb_lookup_nearest_in_time_any_currency(db, c, t)
gnc_pricedb_lookup_nearest_in_time_any_currency = _sw_engine.gnc_pricedb_lookup_nearest_in_time_any_currency

def gnc_pricedb_lookup_nearest_in_time_any_currency_t64(db, c, t64):
    return _sw_engine.gnc_pricedb_lookup_nearest_in_time_any_currency_t64(db, c, t64)
gnc_pricedb_lookup_nearest_in_time_any_currency_t64 = _sw_engine.gnc_pricedb_lookup_nearest_in_time_any_currency_t64

def gnc_pricedb_lookup_latest_before(db, c, currency, t):
    return _sw_engine.gnc_pricedb_lookup_latest_before(db, c, currency, t)
gnc_pricedb_lookup_latest_before = _sw_engine.gnc_pricedb_lookup_latest_before

def gnc_pricedb_lookup_latest_before_any_currency(db, c, t):
    return _sw_engine.gnc_pricedb_lookup_latest_before_any_currency(db, c, t)
gnc_pricedb_lookup_latest_before_any_currency = _sw_engine.gnc_pricedb_lookup_latest_before_any_currency

def gnc_pricedb_convert_balance_latest_price(pdb, balance, balance_currency, new_currency):
    return _sw_engine.gnc_pricedb_convert_balance_latest_price(pdb, balance, balance_currency, new_currency)
gnc_pricedb_convert_balance_latest_price = _sw_engine.gnc_pricedb_convert_balance_latest_price

def gnc_pricedb_convert_balance_nearest_price(pdb, balance, balance_currency, new_currency, t):
    return _sw_engine.gnc_pricedb_convert_balance_nearest_price(pdb, balance, balance_currency, new_currency, t)
gnc_pricedb_convert_balance_nearest_price = _sw_engine.gnc_pricedb_convert_balance_nearest_price

def gnc_pricedb_foreach_price(db, f, user_data, stable_order):
    return _sw_engine.gnc_pricedb_foreach_price(db, f, user_data, stable_order)
gnc_pricedb_foreach_price = _sw_engine.gnc_pricedb_foreach_price

def gnc_pricedb_num_prices(db, c):
    return _sw_engine.gnc_pricedb_num_prices(db, c)
gnc_pricedb_num_prices = _sw_engine.gnc_pricedb_num_prices

def gnc_pricedb_nth_price(db, c, n):
    return _sw_engine.gnc_pricedb_nth_price(db, c, n)
gnc_pricedb_nth_price = _sw_engine.gnc_pricedb_nth_price

def gnc_pricedb_get_num_prices(db):
    return _sw_engine.gnc_pricedb_get_num_prices(db)
gnc_pricedb_get_num_prices = _sw_engine.gnc_pricedb_get_num_prices

def gnc_pricedb_equal(db1, db2):
    return _sw_engine.gnc_pricedb_equal(db1, db2)
gnc_pricedb_equal = _sw_engine.gnc_pricedb_equal

def gnc_pricedb_print_contents(db, f):
    return _sw_engine.gnc_pricedb_print_contents(db, f)
gnc_pricedb_print_contents = _sw_engine.gnc_pricedb_print_contents
PRICE_COMMODITY = _sw_engine.PRICE_COMMODITY
PRICE_CURRENCY = _sw_engine.PRICE_CURRENCY
PRICE_DATE = _sw_engine.PRICE_DATE
PRICE_SOURCE = _sw_engine.PRICE_SOURCE
PRICE_TYPE = _sw_engine.PRICE_TYPE
PRICE_VALUE = _sw_engine.PRICE_VALUE

def qof_session_new():
    return _sw_engine.qof_session_new()
qof_session_new = _sw_engine.qof_session_new

def qof_session_get_book(session):
    return _sw_engine.qof_session_get_book(session)
qof_session_get_book = _sw_engine.qof_session_get_book

def qof_session_get_url(session):
    return _sw_engine.qof_session_get_url(session)
qof_session_get_url = _sw_engine.qof_session_get_url

def timespec_get_type():
    return _sw_engine.timespec_get_type()
timespec_get_type = _sw_engine.timespec_get_type
MAX_DATE_LENGTH = _sw_engine.MAX_DATE_LENGTH
QOF_UTC_DATE_FORMAT = _sw_engine.QOF_UTC_DATE_FORMAT
QOF_DATE_FORMAT_US = _sw_engine.QOF_DATE_FORMAT_US
QOF_DATE_FORMAT_UK = _sw_engine.QOF_DATE_FORMAT_UK
QOF_DATE_FORMAT_CE = _sw_engine.QOF_DATE_FORMAT_CE
QOF_DATE_FORMAT_ISO = _sw_engine.QOF_DATE_FORMAT_ISO
QOF_DATE_FORMAT_LOCALE = _sw_engine.QOF_DATE_FORMAT_LOCALE
QOF_DATE_FORMAT_UTC = _sw_engine.QOF_DATE_FORMAT_UTC
QOF_DATE_FORMAT_CUSTOM = _sw_engine.QOF_DATE_FORMAT_CUSTOM
QOF_DATE_FORMAT_UNSET = _sw_engine.QOF_DATE_FORMAT_UNSET
QOF_DATE_COMPLETION_THISYEAR = _sw_engine.QOF_DATE_COMPLETION_THISYEAR
QOF_DATE_COMPLETION_SLIDING = _sw_engine.QOF_DATE_COMPLETION_SLIDING
GNCDATE_MONTH_NUMBER = _sw_engine.GNCDATE_MONTH_NUMBER
GNCDATE_MONTH_ABBREV = _sw_engine.GNCDATE_MONTH_ABBREV
GNCDATE_MONTH_NAME = _sw_engine.GNCDATE_MONTH_NAME

def gnc_localtime(secs):
    return _sw_engine.gnc_localtime(secs)
gnc_localtime = _sw_engine.gnc_localtime

def gnc_localtime_r(secs, time):
    return _sw_engine.gnc_localtime_r(secs, time)
gnc_localtime_r = _sw_engine.gnc_localtime_r

def gnc_gmtime(secs):
    return _sw_engine.gnc_gmtime(secs)
gnc_gmtime = _sw_engine.gnc_gmtime

def gnc_mktime(time):
    return _sw_engine.gnc_mktime(time)
gnc_mktime = _sw_engine.gnc_mktime

def gnc_timegm(time):
    return _sw_engine.gnc_timegm(time)
gnc_timegm = _sw_engine.gnc_timegm

def gnc_ctime(secs):
    return _sw_engine.gnc_ctime(secs)
gnc_ctime = _sw_engine.gnc_ctime

def gnc_time(tbuf):
    return _sw_engine.gnc_time(tbuf)
gnc_time = _sw_engine.gnc_time

def gnc_difftime(secs1, secs2):
    return _sw_engine.gnc_difftime(secs1, secs2)
gnc_difftime = _sw_engine.gnc_difftime

def gnc_date_dateformat_to_string(format):
    return _sw_engine.gnc_date_dateformat_to_string(format)
gnc_date_dateformat_to_string = _sw_engine.gnc_date_dateformat_to_string

def gnc_date_string_to_dateformat(format_string, format):
    return _sw_engine.gnc_date_string_to_dateformat(format_string, format)
gnc_date_string_to_dateformat = _sw_engine.gnc_date_string_to_dateformat

def gnc_date_monthformat_to_string(format):
    return _sw_engine.gnc_date_monthformat_to_string(format)
gnc_date_monthformat_to_string = _sw_engine.gnc_date_monthformat_to_string

def gnc_date_string_to_monthformat(format_string, format):
    return _sw_engine.gnc_date_string_to_monthformat(format_string, format)
gnc_date_string_to_monthformat = _sw_engine.gnc_date_string_to_monthformat

def gnc_print_time64(time, format):
    return _sw_engine.gnc_print_time64(time, format)
gnc_print_time64 = _sw_engine.gnc_print_time64

def gnc_g_date_new_today():
    return _sw_engine.gnc_g_date_new_today()
gnc_g_date_new_today = _sw_engine.gnc_g_date_new_today

def gnc_gdate_set_today(gd):
    return _sw_engine.gnc_gdate_set_today(gd)
gnc_gdate_set_today = _sw_engine.gnc_gdate_set_today

def gnc_gdate_set_time64(gd, time):
    return _sw_engine.gnc_gdate_set_time64(gd, time)
gnc_gdate_set_time64 = _sw_engine.gnc_gdate_set_time64

def timespec_equal(ta, tb):
    return _sw_engine.timespec_equal(ta, tb)
timespec_equal = _sw_engine.timespec_equal

def timespec_cmp(ta, tb):
    return _sw_engine.timespec_cmp(ta, tb)
timespec_cmp = _sw_engine.timespec_cmp

def timespec_diff(ta, tb):
    return _sw_engine.timespec_diff(ta, tb)
timespec_diff = _sw_engine.timespec_diff

def timespec_abs(t):
    return _sw_engine.timespec_abs(t)
timespec_abs = _sw_engine.timespec_abs

def timespecCanonicalDayTime(t):
    return _sw_engine.timespecCanonicalDayTime(t)
timespecCanonicalDayTime = _sw_engine.timespecCanonicalDayTime

def time64CanonicalDayTime(t):
    return _sw_engine.time64CanonicalDayTime(t)
time64CanonicalDayTime = _sw_engine.time64CanonicalDayTime

def timespec_now():
    return _sw_engine.timespec_now()
timespec_now = _sw_engine.timespec_now

def timespecFromTime64(ts, t):
    return _sw_engine.timespecFromTime64(ts, t)
timespecFromTime64 = _sw_engine.timespecFromTime64

def timespecToTime64(ts):
    return _sw_engine.timespecToTime64(ts)
timespecToTime64 = _sw_engine.timespecToTime64

def time64_to_gdate(t):
    return _sw_engine.time64_to_gdate(t)
time64_to_gdate = _sw_engine.time64_to_gdate

def timespec_to_gdate(ts):
    return _sw_engine.timespec_to_gdate(ts)
timespec_to_gdate = _sw_engine.timespec_to_gdate

def gdate_to_timespec(d):
    return _sw_engine.gdate_to_timespec(d)
gdate_to_timespec = _sw_engine.gdate_to_timespec

def gdate_to_time64(d):
    return _sw_engine.gdate_to_time64(d)
gdate_to_time64 = _sw_engine.gdate_to_time64

def gnc_dmy2time64(day, month, year):
    return _sw_engine.gnc_dmy2time64(day, month, year)
gnc_dmy2time64 = _sw_engine.gnc_dmy2time64

def gnc_dmy2time64_neutral(day, month, year):
    return _sw_engine.gnc_dmy2time64_neutral(day, month, year)
gnc_dmy2time64_neutral = _sw_engine.gnc_dmy2time64_neutral

def gnc_dmy2time64_end(day, month, year):
    return _sw_engine.gnc_dmy2time64_end(day, month, year)
gnc_dmy2time64_end = _sw_engine.gnc_dmy2time64_end

def gnc_dmy2timespec(day, month, year):
    return _sw_engine.gnc_dmy2timespec(day, month, year)
gnc_dmy2timespec = _sw_engine.gnc_dmy2timespec

def gnc_dmy2timespec_end(day, month, year):
    return _sw_engine.gnc_dmy2timespec_end(day, month, year)
gnc_dmy2timespec_end = _sw_engine.gnc_dmy2timespec_end

def gnc_dmy2timespec_neutral(day, month, year):
    return _sw_engine.gnc_dmy2timespec_neutral(day, month, year)
gnc_dmy2timespec_neutral = _sw_engine.gnc_dmy2timespec_neutral

def gnc_iso8601_to_time64_gmt(arg1):
    return _sw_engine.gnc_iso8601_to_time64_gmt(arg1)
gnc_iso8601_to_time64_gmt = _sw_engine.gnc_iso8601_to_time64_gmt

def gnc_timespec_to_iso8601_buff(ts, buff):
    return _sw_engine.gnc_timespec_to_iso8601_buff(ts, buff)
gnc_timespec_to_iso8601_buff = _sw_engine.gnc_timespec_to_iso8601_buff

def gnc_time64_to_iso8601_buff(arg1, buff):
    return _sw_engine.gnc_time64_to_iso8601_buff(arg1, buff)
gnc_time64_to_iso8601_buff = _sw_engine.gnc_time64_to_iso8601_buff

def gnc_timespec2dmy(ts, day, month, year):
    return _sw_engine.gnc_timespec2dmy(ts, day, month, year)
gnc_timespec2dmy = _sw_engine.gnc_timespec2dmy

def qof_date_format_get():
    return _sw_engine.qof_date_format_get()
qof_date_format_get = _sw_engine.qof_date_format_get

def qof_date_format_set(df):
    return _sw_engine.qof_date_format_set(df)
qof_date_format_set = _sw_engine.qof_date_format_set

def qof_date_format_get_string(df):
    return _sw_engine.qof_date_format_get_string(df)
qof_date_format_get_string = _sw_engine.qof_date_format_get_string

def qof_date_text_format_get_string(df):
    return _sw_engine.qof_date_text_format_get_string(df)
qof_date_text_format_get_string = _sw_engine.qof_date_text_format_get_string

def qof_date_completion_set(dc, backmonths):
    return _sw_engine.qof_date_completion_set(dc, backmonths)
qof_date_completion_set = _sw_engine.qof_date_completion_set

def dateSeparator():
    return _sw_engine.dateSeparator()
dateSeparator = _sw_engine.dateSeparator

def qof_strftime(buf, max, format, tm):
    return _sw_engine.qof_strftime(buf, max, format, tm)
qof_strftime = _sw_engine.qof_strftime

def qof_print_date_dmy_buff(buff, buflen, day, month, year):
    return _sw_engine.qof_print_date_dmy_buff(buff, buflen, day, month, year)
qof_print_date_dmy_buff = _sw_engine.qof_print_date_dmy_buff

def qof_print_date_buff(buff, buflen, secs):
    return _sw_engine.qof_print_date_buff(buff, buflen, secs)
qof_print_date_buff = _sw_engine.qof_print_date_buff

def qof_print_gdate(buf, bufflen, gd):
    return _sw_engine.qof_print_gdate(buf, bufflen, gd)
qof_print_gdate = _sw_engine.qof_print_gdate

def qof_print_date(secs):
    return _sw_engine.qof_print_date(secs)
qof_print_date = _sw_engine.qof_print_date

def gnc_print_date(ts):
    return _sw_engine.gnc_print_date(ts)
gnc_print_date = _sw_engine.gnc_print_date

def qof_scan_date(buff, day, month, year):
    return _sw_engine.qof_scan_date(buff, day, month, year)
qof_scan_date = _sw_engine.qof_scan_date

def gnc_tm_set_day_start(tm):
    return _sw_engine.gnc_tm_set_day_start(tm)
gnc_tm_set_day_start = _sw_engine.gnc_tm_set_day_start

def gnc_tm_set_day_middle(tm):
    return _sw_engine.gnc_tm_set_day_middle(tm)
gnc_tm_set_day_middle = _sw_engine.gnc_tm_set_day_middle

def gnc_tm_set_day_end(tm):
    return _sw_engine.gnc_tm_set_day_end(tm)
gnc_tm_set_day_end = _sw_engine.gnc_tm_set_day_end

def gnc_time64_get_day_start(time_val):
    return _sw_engine.gnc_time64_get_day_start(time_val)
gnc_time64_get_day_start = _sw_engine.gnc_time64_get_day_start

def gnc_time64_get_day_end(time_val):
    return _sw_engine.gnc_time64_get_day_end(time_val)
gnc_time64_get_day_end = _sw_engine.gnc_time64_get_day_end

def gnc_date_get_last_mday(month, year):
    return _sw_engine.gnc_date_get_last_mday(month, year)
gnc_date_get_last_mday = _sw_engine.gnc_date_get_last_mday

def gnc_tm_get_today_start(tm):
    return _sw_engine.gnc_tm_get_today_start(tm)
gnc_tm_get_today_start = _sw_engine.gnc_tm_get_today_start

def gnc_tm_get_today_end(tm):
    return _sw_engine.gnc_tm_get_today_end(tm)
gnc_tm_get_today_end = _sw_engine.gnc_tm_get_today_end

def gnc_time64_get_today_start():
    return _sw_engine.gnc_time64_get_today_start()
gnc_time64_get_today_start = _sw_engine.gnc_time64_get_today_start

def gnc_time64_get_today_end():
    return _sw_engine.gnc_time64_get_today_end()
gnc_time64_get_today_end = _sw_engine.gnc_time64_get_today_end

def gnc_date_timestamp():
    return _sw_engine.gnc_date_timestamp()
gnc_date_timestamp = _sw_engine.gnc_date_timestamp
MIN_BUF_LEN = _sw_engine.MIN_BUF_LEN

def gnc_dow_abbrev(buf, buf_len, dow):
    return _sw_engine.gnc_dow_abbrev(buf, buf_len, dow)
gnc_dow_abbrev = _sw_engine.gnc_dow_abbrev

def gnc_gdate_equal(gda, gdb):
    return _sw_engine.gnc_gdate_equal(gda, gdb)
gnc_gdate_equal = _sw_engine.gnc_gdate_equal

def gnc_gdate_hash(gd):
    return _sw_engine.gnc_gdate_hash(gd)
gnc_gdate_hash = _sw_engine.gnc_gdate_hash

def gnc_time64_get_day_start_gdate(date):
    return _sw_engine.gnc_time64_get_day_start_gdate(date)
gnc_time64_get_day_start_gdate = _sw_engine.gnc_time64_get_day_start_gdate

def gnc_time64_get_day_end_gdate(date):
    return _sw_engine.gnc_time64_get_day_end_gdate(date)
gnc_time64_get_day_end_gdate = _sw_engine.gnc_time64_get_day_end_gdate

def gnc_gdate_set_month_start(date):
    return _sw_engine.gnc_gdate_set_month_start(date)
gnc_gdate_set_month_start = _sw_engine.gnc_gdate_set_month_start

def gnc_gdate_set_month_end(date):
    return _sw_engine.gnc_gdate_set_month_end(date)
gnc_gdate_set_month_end = _sw_engine.gnc_gdate_set_month_end

def gnc_gdate_set_prev_month_start(date):
    return _sw_engine.gnc_gdate_set_prev_month_start(date)
gnc_gdate_set_prev_month_start = _sw_engine.gnc_gdate_set_prev_month_start

def gnc_gdate_set_prev_month_end(date):
    return _sw_engine.gnc_gdate_set_prev_month_end(date)
gnc_gdate_set_prev_month_end = _sw_engine.gnc_gdate_set_prev_month_end

def gnc_gdate_set_quarter_start(date):
    return _sw_engine.gnc_gdate_set_quarter_start(date)
gnc_gdate_set_quarter_start = _sw_engine.gnc_gdate_set_quarter_start

def gnc_gdate_set_quarter_end(date):
    return _sw_engine.gnc_gdate_set_quarter_end(date)
gnc_gdate_set_quarter_end = _sw_engine.gnc_gdate_set_quarter_end

def gnc_gdate_set_prev_quarter_start(date):
    return _sw_engine.gnc_gdate_set_prev_quarter_start(date)
gnc_gdate_set_prev_quarter_start = _sw_engine.gnc_gdate_set_prev_quarter_start

def gnc_gdate_set_prev_quarter_end(date):
    return _sw_engine.gnc_gdate_set_prev_quarter_end(date)
gnc_gdate_set_prev_quarter_end = _sw_engine.gnc_gdate_set_prev_quarter_end

def gnc_gdate_set_year_start(date):
    return _sw_engine.gnc_gdate_set_year_start(date)
gnc_gdate_set_year_start = _sw_engine.gnc_gdate_set_year_start

def gnc_gdate_set_year_end(date):
    return _sw_engine.gnc_gdate_set_year_end(date)
gnc_gdate_set_year_end = _sw_engine.gnc_gdate_set_year_end

def gnc_gdate_set_prev_year_start(date):
    return _sw_engine.gnc_gdate_set_prev_year_start(date)
gnc_gdate_set_prev_year_start = _sw_engine.gnc_gdate_set_prev_year_start

def gnc_gdate_set_prev_year_end(date):
    return _sw_engine.gnc_gdate_set_prev_year_end(date)
gnc_gdate_set_prev_year_end = _sw_engine.gnc_gdate_set_prev_year_end

def gnc_gdate_set_fiscal_year_start(date, year_end):
    return _sw_engine.gnc_gdate_set_fiscal_year_start(date, year_end)
gnc_gdate_set_fiscal_year_start = _sw_engine.gnc_gdate_set_fiscal_year_start

def gnc_gdate_set_fiscal_year_end(date, year_end):
    return _sw_engine.gnc_gdate_set_fiscal_year_end(date, year_end)
gnc_gdate_set_fiscal_year_end = _sw_engine.gnc_gdate_set_fiscal_year_end

def gnc_gdate_set_prev_fiscal_year_start(date, year_end):
    return _sw_engine.gnc_gdate_set_prev_fiscal_year_start(date, year_end)
gnc_gdate_set_prev_fiscal_year_start = _sw_engine.gnc_gdate_set_prev_fiscal_year_start

def gnc_gdate_set_prev_fiscal_year_end(date, year_end):
    return _sw_engine.gnc_gdate_set_prev_fiscal_year_end(date, year_end)
gnc_gdate_set_prev_fiscal_year_end = _sw_engine.gnc_gdate_set_prev_fiscal_year_end

def guid_new_return():
    return _sw_engine.guid_new_return()
guid_new_return = _sw_engine.guid_new_return

def qof_query_create_for_splits():
    return _sw_engine.qof_query_create_for_splits()
qof_query_create_for_splits = _sw_engine.qof_query_create_for_splits

def qof_query_run(q):
    return _sw_engine.qof_query_run(q)
qof_query_run = _sw_engine.qof_query_run

def qof_query_last_run(q):
    return _sw_engine.qof_query_last_run(q)
qof_query_last_run = _sw_engine.qof_query_last_run

def qof_query_run_subquery(arg1, arg2):
    return _sw_engine.qof_query_run_subquery(arg1, arg2)
qof_query_run_subquery = _sw_engine.qof_query_run_subquery

def gnc_get_current_session():
    return _sw_engine.gnc_get_current_session()
gnc_get_current_session = _sw_engine.gnc_get_current_session

def gnc_clear_current_session():
    return _sw_engine.gnc_clear_current_session()
gnc_clear_current_session = _sw_engine.gnc_clear_current_session

def gnc_set_current_session(session):
    return _sw_engine.gnc_set_current_session(session)
gnc_set_current_session = _sw_engine.gnc_set_current_session

def gnc_current_session_exist():
    return _sw_engine.gnc_current_session_exist()
gnc_current_session_exist = _sw_engine.gnc_current_session_exist
QUERY_TXN_MATCH_ALL = _sw_engine.QUERY_TXN_MATCH_ALL
QUERY_TXN_MATCH_ANY = _sw_engine.QUERY_TXN_MATCH_ANY

def xaccQueryGetSplitsUniqueTrans(q):
    return _sw_engine.xaccQueryGetSplitsUniqueTrans(q)
xaccQueryGetSplitsUniqueTrans = _sw_engine.xaccQueryGetSplitsUniqueTrans

def xaccQueryGetTransactions(q, type):
    return _sw_engine.xaccQueryGetTransactions(q, type)
xaccQueryGetTransactions = _sw_engine.xaccQueryGetTransactions

def xaccQueryGetLots(q, type):
    return _sw_engine.xaccQueryGetLots(q, type)
xaccQueryGetLots = _sw_engine.xaccQueryGetLots

def xaccQueryAddAccountMatch(arg1, arg2, how, op):
    return _sw_engine.xaccQueryAddAccountMatch(arg1, arg2, how, op)
xaccQueryAddAccountMatch = _sw_engine.xaccQueryAddAccountMatch

def xaccQueryAddAccountGUIDMatch(arg1, arg2, arg3, arg4):
    return _sw_engine.xaccQueryAddAccountGUIDMatch(arg1, arg2, arg3, arg4)
xaccQueryAddAccountGUIDMatch = _sw_engine.xaccQueryAddAccountGUIDMatch

def xaccQueryAddSingleAccountMatch(arg1, arg2, arg3):
    return _sw_engine.xaccQueryAddSingleAccountMatch(arg1, arg2, arg3)
xaccQueryAddSingleAccountMatch = _sw_engine.xaccQueryAddSingleAccountMatch

def xaccQueryAddStringMatch(q, matchstring, case_sens, use_regexp, how, op, path):
    return _sw_engine.xaccQueryAddStringMatch(q, matchstring, case_sens, use_regexp, how, op, path)
xaccQueryAddStringMatch = _sw_engine.xaccQueryAddStringMatch

def xaccQueryAddDescriptionMatch(q, m, c, r, how, o):
    return _sw_engine.xaccQueryAddDescriptionMatch(q, m, c, r, how, o)
xaccQueryAddDescriptionMatch = _sw_engine.xaccQueryAddDescriptionMatch

def xaccQueryAddNotesMatch(q, m, c, r, how, o):
    return _sw_engine.xaccQueryAddNotesMatch(q, m, c, r, how, o)
xaccQueryAddNotesMatch = _sw_engine.xaccQueryAddNotesMatch

def xaccQueryAddNumberMatch(q, m, c, r, how, o):
    return _sw_engine.xaccQueryAddNumberMatch(q, m, c, r, how, o)
xaccQueryAddNumberMatch = _sw_engine.xaccQueryAddNumberMatch

def xaccQueryAddActionMatch(q, m, c, r, how, o):
    return _sw_engine.xaccQueryAddActionMatch(q, m, c, r, how, o)
xaccQueryAddActionMatch = _sw_engine.xaccQueryAddActionMatch

def xaccQueryAddMemoMatch(q, m, c, r, how, o):
    return _sw_engine.xaccQueryAddMemoMatch(q, m, c, r, how, o)
xaccQueryAddMemoMatch = _sw_engine.xaccQueryAddMemoMatch

def xaccQueryAddValueMatch(q, amt, sgn, how, op):
    return _sw_engine.xaccQueryAddValueMatch(q, amt, sgn, how, op)
xaccQueryAddValueMatch = _sw_engine.xaccQueryAddValueMatch

def xaccQueryAddSharePriceMatch(q, amt, how, op):
    return _sw_engine.xaccQueryAddSharePriceMatch(q, amt, how, op)
xaccQueryAddSharePriceMatch = _sw_engine.xaccQueryAddSharePriceMatch

def xaccQueryAddSharesMatch(q, amt, how, op):
    return _sw_engine.xaccQueryAddSharesMatch(q, amt, how, op)
xaccQueryAddSharesMatch = _sw_engine.xaccQueryAddSharesMatch

def xaccQueryAddBalanceMatch(q, bal, op):
    return _sw_engine.xaccQueryAddBalanceMatch(q, bal, op)
xaccQueryAddBalanceMatch = _sw_engine.xaccQueryAddBalanceMatch

def xaccQueryAddNumericMatch(q, amount, sign, how, op, path):
    return _sw_engine.xaccQueryAddNumericMatch(q, amount, sign, how, op, path)
xaccQueryAddNumericMatch = _sw_engine.xaccQueryAddNumericMatch

def xaccQueryAddDateMatch(q, use_start, sday, smonth, syear, use_end, eday, emonth, eyear, op):
    return _sw_engine.xaccQueryAddDateMatch(q, use_start, sday, smonth, syear, use_end, eday, emonth, eyear, op)
xaccQueryAddDateMatch = _sw_engine.xaccQueryAddDateMatch

def xaccQueryAddDateMatchTT(q, use_start, stt, use_end, ett, op):
    return _sw_engine.xaccQueryAddDateMatchTT(q, use_start, stt, use_end, ett, op)
xaccQueryAddDateMatchTT = _sw_engine.xaccQueryAddDateMatchTT

def xaccQueryGetDateMatchTT(q, stt, ett):
    return _sw_engine.xaccQueryGetDateMatchTT(q, stt, ett)
xaccQueryGetDateMatchTT = _sw_engine.xaccQueryGetDateMatchTT

def xaccQueryAddClosingTransMatch(q, value, op):
    return _sw_engine.xaccQueryAddClosingTransMatch(q, value, op)
xaccQueryAddClosingTransMatch = _sw_engine.xaccQueryAddClosingTransMatch
CLEARED_NONE = _sw_engine.CLEARED_NONE
CLEARED_NO = _sw_engine.CLEARED_NO
CLEARED_CLEARED = _sw_engine.CLEARED_CLEARED
CLEARED_RECONCILED = _sw_engine.CLEARED_RECONCILED
CLEARED_FROZEN = _sw_engine.CLEARED_FROZEN
CLEARED_VOIDED = _sw_engine.CLEARED_VOIDED
CLEARED_ALL = _sw_engine.CLEARED_ALL

def xaccQueryAddClearedMatch(q, how, op):
    return _sw_engine.xaccQueryAddClearedMatch(q, how, op)
xaccQueryAddClearedMatch = _sw_engine.xaccQueryAddClearedMatch

def xaccQueryAddGUIDMatch(q, guid, id_type, op):
    return _sw_engine.xaccQueryAddGUIDMatch(q, guid, id_type, op)
xaccQueryAddGUIDMatch = _sw_engine.xaccQueryAddGUIDMatch

def xaccQueryGetEarliestDateFound(q):
    return _sw_engine.xaccQueryGetEarliestDateFound(q)
xaccQueryGetEarliestDateFound = _sw_engine.xaccQueryGetEarliestDateFound

def xaccQueryGetLatestDateFound(q):
    return _sw_engine.xaccQueryGetLatestDateFound(q)
xaccQueryGetLatestDateFound = _sw_engine.xaccQueryGetLatestDateFound
QOF_MOD_QUERY = _sw_engine.QOF_MOD_QUERY
QOF_QUERY_AND = _sw_engine.QOF_QUERY_AND
QOF_QUERY_OR = _sw_engine.QOF_QUERY_OR
QOF_QUERY_NAND = _sw_engine.QOF_QUERY_NAND
QOF_QUERY_NOR = _sw_engine.QOF_QUERY_NOR
QOF_QUERY_XOR = _sw_engine.QOF_QUERY_XOR
QUERY_DEFAULT_SORT = _sw_engine.QUERY_DEFAULT_SORT
QOF_PARAM_BOOK = _sw_engine.QOF_PARAM_BOOK
QOF_PARAM_GUID = _sw_engine.QOF_PARAM_GUID
QOF_PARAM_KVP = _sw_engine.QOF_PARAM_KVP
QOF_PARAM_ACTIVE = _sw_engine.QOF_PARAM_ACTIVE
QOF_PARAM_VERSION = _sw_engine.QOF_PARAM_VERSION

def qof_query_init():
    return _sw_engine.qof_query_init()
qof_query_init = _sw_engine.qof_query_init

def qof_query_shutdown():
    return _sw_engine.qof_query_shutdown()
qof_query_shutdown = _sw_engine.qof_query_shutdown

def qof_query_build_param_list(param):
    return _sw_engine.qof_query_build_param_list(param)
qof_query_build_param_list = _sw_engine.qof_query_build_param_list

def qof_query_create():
    return _sw_engine.qof_query_create()
qof_query_create = _sw_engine.qof_query_create

def qof_query_create_for(obj_type):
    return _sw_engine.qof_query_create_for(obj_type)
qof_query_create_for = _sw_engine.qof_query_create_for

def qof_query_destroy(q):
    return _sw_engine.qof_query_destroy(q)
qof_query_destroy = _sw_engine.qof_query_destroy

def qof_query_search_for(query, obj_type):
    return _sw_engine.qof_query_search_for(query, obj_type)
qof_query_search_for = _sw_engine.qof_query_search_for

def qof_query_set_book(q, book):
    return _sw_engine.qof_query_set_book(q, book)
qof_query_set_book = _sw_engine.qof_query_set_book

def qof_query_add_term(query, param_list, pred_data, op):
    return _sw_engine.qof_query_add_term(query, param_list, pred_data, op)
qof_query_add_term = _sw_engine.qof_query_add_term

def qof_query_add_guid_match(q, param_list, guid, op):
    return _sw_engine.qof_query_add_guid_match(q, param_list, guid, op)
qof_query_add_guid_match = _sw_engine.qof_query_add_guid_match

def qof_query_add_guid_list_match(q, param_list, guid_list, options, op):
    return _sw_engine.qof_query_add_guid_list_match(q, param_list, guid_list, options, op)
qof_query_add_guid_list_match = _sw_engine.qof_query_add_guid_list_match

def qof_query_add_boolean_match(q, param_list, value, op):
    return _sw_engine.qof_query_add_boolean_match(q, param_list, value, op)
qof_query_add_boolean_match = _sw_engine.qof_query_add_boolean_match

def qof_query_clear(query):
    return _sw_engine.qof_query_clear(query)
qof_query_clear = _sw_engine.qof_query_clear

def qof_query_purge_terms(q, param_list):
    return _sw_engine.qof_query_purge_terms(q, param_list)
qof_query_purge_terms = _sw_engine.qof_query_purge_terms

def qof_query_has_terms(q):
    return _sw_engine.qof_query_has_terms(q)
qof_query_has_terms = _sw_engine.qof_query_has_terms

def qof_query_num_terms(q):
    return _sw_engine.qof_query_num_terms(q)
qof_query_num_terms = _sw_engine.qof_query_num_terms

def qof_query_has_term_type(q, term_param):
    return _sw_engine.qof_query_has_term_type(q, term_param)
qof_query_has_term_type = _sw_engine.qof_query_has_term_type

def qof_query_get_term_type(q, term_param):
    return _sw_engine.qof_query_get_term_type(q, term_param)
qof_query_get_term_type = _sw_engine.qof_query_get_term_type

def qof_query_copy(q):
    return _sw_engine.qof_query_copy(q)
qof_query_copy = _sw_engine.qof_query_copy

def qof_query_invert(q):
    return _sw_engine.qof_query_invert(q)
qof_query_invert = _sw_engine.qof_query_invert

def qof_query_merge(q1, q2, op):
    return _sw_engine.qof_query_merge(q1, q2, op)
qof_query_merge = _sw_engine.qof_query_merge

def qof_query_merge_in_place(q1, q2, op):
    return _sw_engine.qof_query_merge_in_place(q1, q2, op)
qof_query_merge_in_place = _sw_engine.qof_query_merge_in_place

def qof_query_set_sort_order(q, primary_sort_params, secondary_sort_params, tertiary_sort_params):
    return _sw_engine.qof_query_set_sort_order(q, primary_sort_params, secondary_sort_params, tertiary_sort_params)
qof_query_set_sort_order = _sw_engine.qof_query_set_sort_order

def qof_query_set_sort_options(q, prim_op, sec_op, tert_op):
    return _sw_engine.qof_query_set_sort_options(q, prim_op, sec_op, tert_op)
qof_query_set_sort_options = _sw_engine.qof_query_set_sort_options

def qof_query_set_sort_increasing(q, prim_inc, sec_inc, tert_inc):
    return _sw_engine.qof_query_set_sort_increasing(q, prim_inc, sec_inc, tert_inc)
qof_query_set_sort_increasing = _sw_engine.qof_query_set_sort_increasing

def qof_query_set_max_results(q, n):
    return _sw_engine.qof_query_set_max_results(q, n)
qof_query_set_max_results = _sw_engine.qof_query_set_max_results

def qof_query_equal(q1, q2):
    return _sw_engine.qof_query_equal(q1, q2)
qof_query_equal = _sw_engine.qof_query_equal

def qof_query_print(query):
    return _sw_engine.qof_query_print(query)
qof_query_print = _sw_engine.qof_query_print

def qof_query_get_search_for(q):
    return _sw_engine.qof_query_get_search_for(q)
qof_query_get_search_for = _sw_engine.qof_query_get_search_for

def qof_query_get_books(q):
    return _sw_engine.qof_query_get_books(q)
qof_query_get_books = _sw_engine.qof_query_get_books
QOF_COMPARE_LT = _sw_engine.QOF_COMPARE_LT
QOF_COMPARE_LTE = _sw_engine.QOF_COMPARE_LTE
QOF_COMPARE_EQUAL = _sw_engine.QOF_COMPARE_EQUAL
QOF_COMPARE_GT = _sw_engine.QOF_COMPARE_GT
QOF_COMPARE_GTE = _sw_engine.QOF_COMPARE_GTE
QOF_COMPARE_NEQ = _sw_engine.QOF_COMPARE_NEQ
QOF_COMPARE_CONTAINS = _sw_engine.QOF_COMPARE_CONTAINS
QOF_COMPARE_NCONTAINS = _sw_engine.QOF_COMPARE_NCONTAINS
QOF_STRING_MATCH_NORMAL = _sw_engine.QOF_STRING_MATCH_NORMAL
QOF_STRING_MATCH_CASEINSENSITIVE = _sw_engine.QOF_STRING_MATCH_CASEINSENSITIVE
QOF_DATE_MATCH_NORMAL = _sw_engine.QOF_DATE_MATCH_NORMAL
QOF_DATE_MATCH_DAY = _sw_engine.QOF_DATE_MATCH_DAY
QOF_NUMERIC_MATCH_DEBIT = _sw_engine.QOF_NUMERIC_MATCH_DEBIT
QOF_NUMERIC_MATCH_CREDIT = _sw_engine.QOF_NUMERIC_MATCH_CREDIT
QOF_NUMERIC_MATCH_ANY = _sw_engine.QOF_NUMERIC_MATCH_ANY
QOF_GUID_MATCH_ANY = _sw_engine.QOF_GUID_MATCH_ANY
QOF_GUID_MATCH_NONE = _sw_engine.QOF_GUID_MATCH_NONE
QOF_GUID_MATCH_NULL = _sw_engine.QOF_GUID_MATCH_NULL
QOF_GUID_MATCH_ALL = _sw_engine.QOF_GUID_MATCH_ALL
QOF_GUID_MATCH_LIST_ANY = _sw_engine.QOF_GUID_MATCH_LIST_ANY
QOF_CHAR_MATCH_ANY = _sw_engine.QOF_CHAR_MATCH_ANY
QOF_CHAR_MATCH_NONE = _sw_engine.QOF_CHAR_MATCH_NONE
class _QofQueryPredData(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _QofQueryPredData, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _QofQueryPredData, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type_name"] = _sw_engine._QofQueryPredData_type_name_set
    __swig_getmethods__["type_name"] = _sw_engine._QofQueryPredData_type_name_get
    if _newclass:
        type_name = _swig_property(_sw_engine._QofQueryPredData_type_name_get, _sw_engine._QofQueryPredData_type_name_set)
    __swig_setmethods__["how"] = _sw_engine._QofQueryPredData_how_set
    __swig_getmethods__["how"] = _sw_engine._QofQueryPredData_how_get
    if _newclass:
        how = _swig_property(_sw_engine._QofQueryPredData_how_get, _sw_engine._QofQueryPredData_how_set)

    def __init__(self):
        this = _sw_engine.new__QofQueryPredData()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_engine.delete__QofQueryPredData
    __del__ = lambda self: None
_QofQueryPredData_swigregister = _sw_engine._QofQueryPredData_swigregister
_QofQueryPredData_swigregister(_QofQueryPredData)
cvar = _sw_engine.cvar


def qof_query_string_predicate(how, str, options, is_regex):
    return _sw_engine.qof_query_string_predicate(how, str, options, is_regex)
qof_query_string_predicate = _sw_engine.qof_query_string_predicate

def qof_query_date_predicate(how, options, date):
    return _sw_engine.qof_query_date_predicate(how, options, date)
qof_query_date_predicate = _sw_engine.qof_query_date_predicate

def qof_query_numeric_predicate(how, options, value):
    return _sw_engine.qof_query_numeric_predicate(how, options, value)
qof_query_numeric_predicate = _sw_engine.qof_query_numeric_predicate

def qof_query_guid_predicate(options, guids):
    return _sw_engine.qof_query_guid_predicate(options, guids)
qof_query_guid_predicate = _sw_engine.qof_query_guid_predicate

def qof_query_int32_predicate(how, val):
    return _sw_engine.qof_query_int32_predicate(how, val)
qof_query_int32_predicate = _sw_engine.qof_query_int32_predicate

def qof_query_int64_predicate(how, val):
    return _sw_engine.qof_query_int64_predicate(how, val)
qof_query_int64_predicate = _sw_engine.qof_query_int64_predicate

def qof_query_double_predicate(how, val):
    return _sw_engine.qof_query_double_predicate(how, val)
qof_query_double_predicate = _sw_engine.qof_query_double_predicate

def qof_query_boolean_predicate(how, val):
    return _sw_engine.qof_query_boolean_predicate(how, val)
qof_query_boolean_predicate = _sw_engine.qof_query_boolean_predicate

def qof_query_char_predicate(options, chars):
    return _sw_engine.qof_query_char_predicate(options, chars)
qof_query_char_predicate = _sw_engine.qof_query_char_predicate

def qof_query_collect_predicate(options, coll):
    return _sw_engine.qof_query_collect_predicate(options, coll)
qof_query_collect_predicate = _sw_engine.qof_query_collect_predicate

def qof_query_choice_predicate(options, guids):
    return _sw_engine.qof_query_choice_predicate(options, guids)
qof_query_choice_predicate = _sw_engine.qof_query_choice_predicate

def qof_query_core_predicate_copy(pdata):
    return _sw_engine.qof_query_core_predicate_copy(pdata)
qof_query_core_predicate_copy = _sw_engine.qof_query_core_predicate_copy

def qof_query_core_predicate_free(pdata):
    return _sw_engine.qof_query_core_predicate_free(pdata)
qof_query_core_predicate_free = _sw_engine.qof_query_core_predicate_free

def qof_query_date_predicate_get_date(pd, date):
    return _sw_engine.qof_query_date_predicate_get_date(pd, date)
qof_query_date_predicate_get_date = _sw_engine.qof_query_date_predicate_get_date

def qof_query_core_to_string(arg1, object, getter):
    return _sw_engine.qof_query_core_to_string(arg1, object, getter)
qof_query_core_to_string = _sw_engine.qof_query_core_to_string

def qof_string_number_compare_func(a, b, options, this_param):
    return _sw_engine.qof_string_number_compare_func(a, b, options, this_param)
qof_string_number_compare_func = _sw_engine.qof_string_number_compare_func
KVP_OPTION_PATH = _sw_engine.KVP_OPTION_PATH
OPTION_SECTION_ACCOUNTS = _sw_engine.OPTION_SECTION_ACCOUNTS
OPTION_NAME_TRADING_ACCOUNTS = _sw_engine.OPTION_NAME_TRADING_ACCOUNTS
OPTION_NAME_CURRENCY_ACCOUNTING = _sw_engine.OPTION_NAME_CURRENCY_ACCOUNTING
OPTION_NAME_BOOK_CURRENCY = _sw_engine.OPTION_NAME_BOOK_CURRENCY
OPTION_NAME_DEFAULT_GAINS_POLICY = _sw_engine.OPTION_NAME_DEFAULT_GAINS_POLICY
OPTION_NAME_DEFAULT_GAINS_LOSS_ACCT_GUID = _sw_engine.OPTION_NAME_DEFAULT_GAINS_LOSS_ACCT_GUID
OPTION_NAME_AUTO_READONLY_DAYS = _sw_engine.OPTION_NAME_AUTO_READONLY_DAYS
OPTION_NAME_NUM_FIELD_SOURCE = _sw_engine.OPTION_NAME_NUM_FIELD_SOURCE
OPTION_SECTION_BUDGETING = _sw_engine.OPTION_SECTION_BUDGETING
OPTION_NAME_DEFAULT_BUDGET = _sw_engine.OPTION_NAME_DEFAULT_BUDGET

def qof_book_use_trading_accounts(book):
    return _sw_engine.qof_book_use_trading_accounts(book)
qof_book_use_trading_accounts = _sw_engine.qof_book_use_trading_accounts

def qof_book_get_book_currency_name(book):
    return _sw_engine.qof_book_get_book_currency_name(book)
qof_book_get_book_currency_name = _sw_engine.qof_book_get_book_currency_name

def qof_book_get_default_gains_policy(book):
    return _sw_engine.qof_book_get_default_gains_policy(book)
qof_book_get_default_gains_policy = _sw_engine.qof_book_get_default_gains_policy

def qof_book_get_default_gain_loss_acct_guid(book):
    return _sw_engine.qof_book_get_default_gain_loss_acct_guid(book)
qof_book_get_default_gain_loss_acct_guid = _sw_engine.qof_book_get_default_gain_loss_acct_guid

def qof_book_uses_autoreadonly(book):
    return _sw_engine.qof_book_uses_autoreadonly(book)
qof_book_uses_autoreadonly = _sw_engine.qof_book_uses_autoreadonly

def qof_book_get_num_days_autoreadonly(book):
    return _sw_engine.qof_book_get_num_days_autoreadonly(book)
qof_book_get_num_days_autoreadonly = _sw_engine.qof_book_get_num_days_autoreadonly

def qof_book_get_autoreadonly_gdate(book):
    return _sw_engine.qof_book_get_autoreadonly_gdate(book)
qof_book_get_autoreadonly_gdate = _sw_engine.qof_book_get_autoreadonly_gdate

def qof_book_use_split_action_for_num_field(book):
    return _sw_engine.qof_book_use_split_action_for_num_field(book)
qof_book_use_split_action_for_num_field = _sw_engine.qof_book_use_split_action_for_num_field

def qof_book_shutting_down(book):
    return _sw_engine.qof_book_shutting_down(book)
qof_book_shutting_down = _sw_engine.qof_book_shutting_down

def qof_book_session_not_saved(book):
    return _sw_engine.qof_book_session_not_saved(book)
qof_book_session_not_saved = _sw_engine.qof_book_session_not_saved
class _gnc_numeric(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _gnc_numeric, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _gnc_numeric, name)
    __repr__ = _swig_repr
    __swig_setmethods__["num"] = _sw_engine._gnc_numeric_num_set
    __swig_getmethods__["num"] = _sw_engine._gnc_numeric_num_get
    if _newclass:
        num = _swig_property(_sw_engine._gnc_numeric_num_get, _sw_engine._gnc_numeric_num_set)
    __swig_setmethods__["denom"] = _sw_engine._gnc_numeric_denom_set
    __swig_getmethods__["denom"] = _sw_engine._gnc_numeric_denom_get
    if _newclass:
        denom = _swig_property(_sw_engine._gnc_numeric_denom_get, _sw_engine._gnc_numeric_denom_set)

    def __init__(self):
        this = _sw_engine.new__gnc_numeric()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_engine.delete__gnc_numeric
    __del__ = lambda self: None
_gnc_numeric_swigregister = _sw_engine._gnc_numeric_swigregister
_gnc_numeric_swigregister(_gnc_numeric)

GNC_NUMERIC_RND_MASK = _sw_engine.GNC_NUMERIC_RND_MASK
GNC_NUMERIC_DENOM_MASK = _sw_engine.GNC_NUMERIC_DENOM_MASK
GNC_NUMERIC_SIGFIGS_MASK = _sw_engine.GNC_NUMERIC_SIGFIGS_MASK
GNC_HOW_RND_FLOOR = _sw_engine.GNC_HOW_RND_FLOOR
GNC_HOW_RND_CEIL = _sw_engine.GNC_HOW_RND_CEIL
GNC_HOW_RND_TRUNC = _sw_engine.GNC_HOW_RND_TRUNC
GNC_HOW_RND_PROMOTE = _sw_engine.GNC_HOW_RND_PROMOTE
GNC_HOW_RND_ROUND_HALF_DOWN = _sw_engine.GNC_HOW_RND_ROUND_HALF_DOWN
GNC_HOW_RND_ROUND_HALF_UP = _sw_engine.GNC_HOW_RND_ROUND_HALF_UP
GNC_HOW_RND_ROUND = _sw_engine.GNC_HOW_RND_ROUND
GNC_HOW_RND_NEVER = _sw_engine.GNC_HOW_RND_NEVER
GNC_HOW_DENOM_EXACT = _sw_engine.GNC_HOW_DENOM_EXACT
GNC_HOW_DENOM_REDUCE = _sw_engine.GNC_HOW_DENOM_REDUCE
GNC_HOW_DENOM_LCD = _sw_engine.GNC_HOW_DENOM_LCD
GNC_HOW_DENOM_FIXED = _sw_engine.GNC_HOW_DENOM_FIXED
GNC_HOW_DENOM_SIGFIG = _sw_engine.GNC_HOW_DENOM_SIGFIG

def gnc_numeric_create(num, denom):
    return _sw_engine.gnc_numeric_create(num, denom)
gnc_numeric_create = _sw_engine.gnc_numeric_create

def gnc_numeric_zero():
    return _sw_engine.gnc_numeric_zero()
gnc_numeric_zero = _sw_engine.gnc_numeric_zero

def double_to_gnc_numeric(n, denom, how):
    return _sw_engine.double_to_gnc_numeric(n, denom, how)
double_to_gnc_numeric = _sw_engine.double_to_gnc_numeric

def string_to_gnc_numeric(str, n):
    return _sw_engine.string_to_gnc_numeric(str, n)
string_to_gnc_numeric = _sw_engine.string_to_gnc_numeric

def gnc_numeric_error(error_code):
    return _sw_engine.gnc_numeric_error(error_code)
gnc_numeric_error = _sw_engine.gnc_numeric_error

def gnc_numeric_errorCode_to_string(error_code):
    return _sw_engine.gnc_numeric_errorCode_to_string(error_code)
gnc_numeric_errorCode_to_string = _sw_engine.gnc_numeric_errorCode_to_string

def gnc_numeric_num(a):
    return _sw_engine.gnc_numeric_num(a)
gnc_numeric_num = _sw_engine.gnc_numeric_num

def gnc_numeric_denom(a):
    return _sw_engine.gnc_numeric_denom(a)
gnc_numeric_denom = _sw_engine.gnc_numeric_denom

def gnc_numeric_to_double(n):
    return _sw_engine.gnc_numeric_to_double(n)
gnc_numeric_to_double = _sw_engine.gnc_numeric_to_double

def gnc_numeric_to_string(n):
    return _sw_engine.gnc_numeric_to_string(n)
gnc_numeric_to_string = _sw_engine.gnc_numeric_to_string

def gnc_num_dbg_to_string(n):
    return _sw_engine.gnc_num_dbg_to_string(n)
gnc_num_dbg_to_string = _sw_engine.gnc_num_dbg_to_string

def gnc_numeric_check(a):
    return _sw_engine.gnc_numeric_check(a)
gnc_numeric_check = _sw_engine.gnc_numeric_check

def gnc_numeric_compare(a, b):
    return _sw_engine.gnc_numeric_compare(a, b)
gnc_numeric_compare = _sw_engine.gnc_numeric_compare

def gnc_numeric_zero_p(a):
    return _sw_engine.gnc_numeric_zero_p(a)
gnc_numeric_zero_p = _sw_engine.gnc_numeric_zero_p

def gnc_numeric_negative_p(a):
    return _sw_engine.gnc_numeric_negative_p(a)
gnc_numeric_negative_p = _sw_engine.gnc_numeric_negative_p

def gnc_numeric_positive_p(a):
    return _sw_engine.gnc_numeric_positive_p(a)
gnc_numeric_positive_p = _sw_engine.gnc_numeric_positive_p

def gnc_numeric_eq(a, b):
    return _sw_engine.gnc_numeric_eq(a, b)
gnc_numeric_eq = _sw_engine.gnc_numeric_eq

def gnc_numeric_equal(a, b):
    return _sw_engine.gnc_numeric_equal(a, b)
gnc_numeric_equal = _sw_engine.gnc_numeric_equal

def gnc_numeric_same(a, b, denom, how):
    return _sw_engine.gnc_numeric_same(a, b, denom, how)
gnc_numeric_same = _sw_engine.gnc_numeric_same

def gnc_numeric_add(a, b, denom, how):
    return _sw_engine.gnc_numeric_add(a, b, denom, how)
gnc_numeric_add = _sw_engine.gnc_numeric_add

def gnc_numeric_sub(a, b, denom, how):
    return _sw_engine.gnc_numeric_sub(a, b, denom, how)
gnc_numeric_sub = _sw_engine.gnc_numeric_sub

def gnc_numeric_mul(a, b, denom, how):
    return _sw_engine.gnc_numeric_mul(a, b, denom, how)
gnc_numeric_mul = _sw_engine.gnc_numeric_mul

def gnc_numeric_div(x, y, denom, how):
    return _sw_engine.gnc_numeric_div(x, y, denom, how)
gnc_numeric_div = _sw_engine.gnc_numeric_div

def gnc_numeric_neg(a):
    return _sw_engine.gnc_numeric_neg(a)
gnc_numeric_neg = _sw_engine.gnc_numeric_neg

def gnc_numeric_abs(a):
    return _sw_engine.gnc_numeric_abs(a)
gnc_numeric_abs = _sw_engine.gnc_numeric_abs

def gnc_numeric_add_fixed(a, b):
    return _sw_engine.gnc_numeric_add_fixed(a, b)
gnc_numeric_add_fixed = _sw_engine.gnc_numeric_add_fixed

def gnc_numeric_sub_fixed(a, b):
    return _sw_engine.gnc_numeric_sub_fixed(a, b)
gnc_numeric_sub_fixed = _sw_engine.gnc_numeric_sub_fixed

def gnc_numeric_convert(n, denom, how):
    return _sw_engine.gnc_numeric_convert(n, denom, how)
gnc_numeric_convert = _sw_engine.gnc_numeric_convert

def gnc_numeric_reduce(n):
    return _sw_engine.gnc_numeric_reduce(n)
gnc_numeric_reduce = _sw_engine.gnc_numeric_reduce

def gnc_numeric_to_decimal(a, max_decimal_places):
    return _sw_engine.gnc_numeric_to_decimal(a, max_decimal_places)
gnc_numeric_to_decimal = _sw_engine.gnc_numeric_to_decimal

def gnc_numeric_invert(num):
    return _sw_engine.gnc_numeric_invert(num)
gnc_numeric_invert = _sw_engine.gnc_numeric_invert

def gnc_numeric_get_type():
    return _sw_engine.gnc_numeric_get_type()
gnc_numeric_get_type = _sw_engine.gnc_numeric_get_type

def gnc_budget_get_type():
    return _sw_engine.gnc_budget_get_type()
gnc_budget_get_type = _sw_engine.gnc_budget_get_type
GNC_BUDGET_MAX_NUM_PERIODS_DIGITS = _sw_engine.GNC_BUDGET_MAX_NUM_PERIODS_DIGITS

def gnc_budget_register():
    return _sw_engine.gnc_budget_register()
gnc_budget_register = _sw_engine.gnc_budget_register

def gnc_budget_new(book):
    return _sw_engine.gnc_budget_new(book)
gnc_budget_new = _sw_engine.gnc_budget_new

def gnc_budget_destroy(budget):
    return _sw_engine.gnc_budget_destroy(budget)
gnc_budget_destroy = _sw_engine.gnc_budget_destroy

def gnc_budget_begin_edit(bgt):
    return _sw_engine.gnc_budget_begin_edit(bgt)
gnc_budget_begin_edit = _sw_engine.gnc_budget_begin_edit

def gnc_budget_commit_edit(bgt):
    return _sw_engine.gnc_budget_commit_edit(bgt)
gnc_budget_commit_edit = _sw_engine.gnc_budget_commit_edit

def gnc_budget_clone(budget):
    return _sw_engine.gnc_budget_clone(budget)
gnc_budget_clone = _sw_engine.gnc_budget_clone

def gnc_budget_get_guid(budget):
    return _sw_engine.gnc_budget_get_guid(budget)
gnc_budget_get_guid = _sw_engine.gnc_budget_get_guid

def gnc_budget_set_name(budget, name):
    return _sw_engine.gnc_budget_set_name(budget, name)
gnc_budget_set_name = _sw_engine.gnc_budget_set_name

def gnc_budget_get_name(budget):
    return _sw_engine.gnc_budget_get_name(budget)
gnc_budget_get_name = _sw_engine.gnc_budget_get_name

def gnc_budget_set_description(budget, description):
    return _sw_engine.gnc_budget_set_description(budget, description)
gnc_budget_set_description = _sw_engine.gnc_budget_set_description

def gnc_budget_get_description(budget):
    return _sw_engine.gnc_budget_get_description(budget)
gnc_budget_get_description = _sw_engine.gnc_budget_get_description

def gnc_budget_set_num_periods(budget, num_periods):
    return _sw_engine.gnc_budget_set_num_periods(budget, num_periods)
gnc_budget_set_num_periods = _sw_engine.gnc_budget_set_num_periods

def gnc_budget_get_num_periods(budget):
    return _sw_engine.gnc_budget_get_num_periods(budget)
gnc_budget_get_num_periods = _sw_engine.gnc_budget_get_num_periods

def gnc_budget_set_recurrence(budget, r):
    return _sw_engine.gnc_budget_set_recurrence(budget, r)
gnc_budget_set_recurrence = _sw_engine.gnc_budget_set_recurrence

def gnc_budget_get_recurrence(budget):
    return _sw_engine.gnc_budget_get_recurrence(budget)
gnc_budget_get_recurrence = _sw_engine.gnc_budget_get_recurrence

def gnc_budget_get_period_start_date(budget, period_num):
    return _sw_engine.gnc_budget_get_period_start_date(budget, period_num)
gnc_budget_get_period_start_date = _sw_engine.gnc_budget_get_period_start_date

def gnc_budget_get_period_end_date(budget, period_num):
    return _sw_engine.gnc_budget_get_period_end_date(budget, period_num)
gnc_budget_get_period_end_date = _sw_engine.gnc_budget_get_period_end_date

def gnc_budget_set_account_period_value(budget, account, period_num, val):
    return _sw_engine.gnc_budget_set_account_period_value(budget, account, period_num, val)
gnc_budget_set_account_period_value = _sw_engine.gnc_budget_set_account_period_value

def gnc_budget_unset_account_period_value(budget, account, period_num):
    return _sw_engine.gnc_budget_unset_account_period_value(budget, account, period_num)
gnc_budget_unset_account_period_value = _sw_engine.gnc_budget_unset_account_period_value

def gnc_budget_is_account_period_value_set(budget, account, period_num):
    return _sw_engine.gnc_budget_is_account_period_value_set(budget, account, period_num)
gnc_budget_is_account_period_value_set = _sw_engine.gnc_budget_is_account_period_value_set

def gnc_budget_get_account_period_value(budget, account, period_num):
    return _sw_engine.gnc_budget_get_account_period_value(budget, account, period_num)
gnc_budget_get_account_period_value = _sw_engine.gnc_budget_get_account_period_value

def gnc_budget_get_account_period_actual_value(budget, account, period_num):
    return _sw_engine.gnc_budget_get_account_period_actual_value(budget, account, period_num)
gnc_budget_get_account_period_actual_value = _sw_engine.gnc_budget_get_account_period_actual_value

def gnc_budget_get_default(book):
    return _sw_engine.gnc_budget_get_default(book)
gnc_budget_get_default = _sw_engine.gnc_budget_get_default

def gnc_budget_lookup(guid, book):
    return _sw_engine.gnc_budget_lookup(guid, book)
gnc_budget_lookup = _sw_engine.gnc_budget_lookup

def gnc_quote_source_set_fq_installed(version_string, sources_list):
    return _sw_engine.gnc_quote_source_set_fq_installed(version_string, sources_list)
gnc_quote_source_set_fq_installed = _sw_engine.gnc_quote_source_set_fq_installed

def gnc_commodity_get_type():
    return _sw_engine.gnc_commodity_get_type()
gnc_commodity_get_type = _sw_engine.gnc_commodity_get_type

def gnc_commodity_namespace_get_type():
    return _sw_engine.gnc_commodity_namespace_get_type()
gnc_commodity_namespace_get_type = _sw_engine.gnc_commodity_namespace_get_type
GNC_COMMODITY_TABLE = _sw_engine.GNC_COMMODITY_TABLE
GNC_COMMODITY_NS_LEGACY = _sw_engine.GNC_COMMODITY_NS_LEGACY
GNC_COMMODITY_NS_TEMPLATE = _sw_engine.GNC_COMMODITY_NS_TEMPLATE
GNC_COMMODITY_NS_ISO = _sw_engine.GNC_COMMODITY_NS_ISO
GNC_COMMODITY_NS_CURRENCY = _sw_engine.GNC_COMMODITY_NS_CURRENCY
GNC_COMMODITY_NS_NASDAQ = _sw_engine.GNC_COMMODITY_NS_NASDAQ
GNC_COMMODITY_NS_NYSE = _sw_engine.GNC_COMMODITY_NS_NYSE
GNC_COMMODITY_NS_EUREX = _sw_engine.GNC_COMMODITY_NS_EUREX
GNC_COMMODITY_NS_MUTUAL = _sw_engine.GNC_COMMODITY_NS_MUTUAL
GNC_COMMODITY_NS_AMEX = _sw_engine.GNC_COMMODITY_NS_AMEX
GNC_COMMODITY_NS_ASX = _sw_engine.GNC_COMMODITY_NS_ASX
GNC_COMMODITY_NS_ISO_GUI = _sw_engine.GNC_COMMODITY_NS_ISO_GUI
SOURCE_SINGLE = _sw_engine.SOURCE_SINGLE
SOURCE_MULTI = _sw_engine.SOURCE_MULTI
SOURCE_UNKNOWN = _sw_engine.SOURCE_UNKNOWN
SOURCE_MAX = _sw_engine.SOURCE_MAX
SOURCE_CURRENCY = _sw_engine.SOURCE_CURRENCY

def gnc_quote_source_fq_installed():
    return _sw_engine.gnc_quote_source_fq_installed()
gnc_quote_source_fq_installed = _sw_engine.gnc_quote_source_fq_installed

def gnc_quote_source_fq_version():
    return _sw_engine.gnc_quote_source_fq_version()
gnc_quote_source_fq_version = _sw_engine.gnc_quote_source_fq_version

def gnc_quote_source_num_entries(type):
    return _sw_engine.gnc_quote_source_num_entries(type)
gnc_quote_source_num_entries = _sw_engine.gnc_quote_source_num_entries

def gnc_quote_source_add_new(name, supported):
    return _sw_engine.gnc_quote_source_add_new(name, supported)
gnc_quote_source_add_new = _sw_engine.gnc_quote_source_add_new

def gnc_quote_source_lookup_by_internal(internal_name):
    return _sw_engine.gnc_quote_source_lookup_by_internal(internal_name)
gnc_quote_source_lookup_by_internal = _sw_engine.gnc_quote_source_lookup_by_internal

def gnc_quote_source_lookup_by_ti(type, index):
    return _sw_engine.gnc_quote_source_lookup_by_ti(type, index)
gnc_quote_source_lookup_by_ti = _sw_engine.gnc_quote_source_lookup_by_ti

def gnc_quote_source_get_supported(source):
    return _sw_engine.gnc_quote_source_get_supported(source)
gnc_quote_source_get_supported = _sw_engine.gnc_quote_source_get_supported

def gnc_quote_source_get_type(source):
    return _sw_engine.gnc_quote_source_get_type(source)
gnc_quote_source_get_type = _sw_engine.gnc_quote_source_get_type

def gnc_quote_source_get_index(source):
    return _sw_engine.gnc_quote_source_get_index(source)
gnc_quote_source_get_index = _sw_engine.gnc_quote_source_get_index

def gnc_quote_source_get_user_name(source):
    return _sw_engine.gnc_quote_source_get_user_name(source)
gnc_quote_source_get_user_name = _sw_engine.gnc_quote_source_get_user_name

def gnc_quote_source_get_internal_name(source):
    return _sw_engine.gnc_quote_source_get_internal_name(source)
gnc_quote_source_get_internal_name = _sw_engine.gnc_quote_source_get_internal_name

def gnc_commodity_new(book, fullname, commodity_namespace, mnemonic, cusip, fraction):
    return _sw_engine.gnc_commodity_new(book, fullname, commodity_namespace, mnemonic, cusip, fraction)
gnc_commodity_new = _sw_engine.gnc_commodity_new

def gnc_commodity_destroy(cm):
    return _sw_engine.gnc_commodity_destroy(cm)
gnc_commodity_destroy = _sw_engine.gnc_commodity_destroy

def gnc_commodity_copy(dest, src):
    return _sw_engine.gnc_commodity_copy(dest, src)
gnc_commodity_copy = _sw_engine.gnc_commodity_copy

def gnc_commodity_clone(src, dest_book):
    return _sw_engine.gnc_commodity_clone(src, dest_book)
gnc_commodity_clone = _sw_engine.gnc_commodity_clone

def gnc_commodity_get_mnemonic(cm):
    return _sw_engine.gnc_commodity_get_mnemonic(cm)
gnc_commodity_get_mnemonic = _sw_engine.gnc_commodity_get_mnemonic

def gnc_commodity_get_namespace(cm):
    return _sw_engine.gnc_commodity_get_namespace(cm)
gnc_commodity_get_namespace = _sw_engine.gnc_commodity_get_namespace

def gnc_commodity_get_namespace_ds(cm):
    return _sw_engine.gnc_commodity_get_namespace_ds(cm)
gnc_commodity_get_namespace_ds = _sw_engine.gnc_commodity_get_namespace_ds

def gnc_commodity_get_fullname(cm):
    return _sw_engine.gnc_commodity_get_fullname(cm)
gnc_commodity_get_fullname = _sw_engine.gnc_commodity_get_fullname

def gnc_commodity_get_printname(cm):
    return _sw_engine.gnc_commodity_get_printname(cm)
gnc_commodity_get_printname = _sw_engine.gnc_commodity_get_printname

def gnc_commodity_get_cusip(cm):
    return _sw_engine.gnc_commodity_get_cusip(cm)
gnc_commodity_get_cusip = _sw_engine.gnc_commodity_get_cusip

def gnc_commodity_get_unique_name(cm):
    return _sw_engine.gnc_commodity_get_unique_name(cm)
gnc_commodity_get_unique_name = _sw_engine.gnc_commodity_get_unique_name

def gnc_commodity_get_fraction(cm):
    return _sw_engine.gnc_commodity_get_fraction(cm)
gnc_commodity_get_fraction = _sw_engine.gnc_commodity_get_fraction

def gnc_commodity_get_quote_flag(cm):
    return _sw_engine.gnc_commodity_get_quote_flag(cm)
gnc_commodity_get_quote_flag = _sw_engine.gnc_commodity_get_quote_flag

def gnc_commodity_get_quote_source(cm):
    return _sw_engine.gnc_commodity_get_quote_source(cm)
gnc_commodity_get_quote_source = _sw_engine.gnc_commodity_get_quote_source

def gnc_commodity_get_default_quote_source(cm):
    return _sw_engine.gnc_commodity_get_default_quote_source(cm)
gnc_commodity_get_default_quote_source = _sw_engine.gnc_commodity_get_default_quote_source

def gnc_commodity_get_quote_tz(cm):
    return _sw_engine.gnc_commodity_get_quote_tz(cm)
gnc_commodity_get_quote_tz = _sw_engine.gnc_commodity_get_quote_tz

def gnc_commodity_get_user_symbol(cm):
    return _sw_engine.gnc_commodity_get_user_symbol(cm)
gnc_commodity_get_user_symbol = _sw_engine.gnc_commodity_get_user_symbol

def gnc_commodity_get_default_symbol(cm):
    return _sw_engine.gnc_commodity_get_default_symbol(cm)
gnc_commodity_get_default_symbol = _sw_engine.gnc_commodity_get_default_symbol

def gnc_commodity_get_nice_symbol(cm):
    return _sw_engine.gnc_commodity_get_nice_symbol(cm)
gnc_commodity_get_nice_symbol = _sw_engine.gnc_commodity_get_nice_symbol

def gnc_commodity_set_mnemonic(cm, mnemonic):
    return _sw_engine.gnc_commodity_set_mnemonic(cm, mnemonic)
gnc_commodity_set_mnemonic = _sw_engine.gnc_commodity_set_mnemonic

def gnc_commodity_set_namespace(cm, new_namespace):
    return _sw_engine.gnc_commodity_set_namespace(cm, new_namespace)
gnc_commodity_set_namespace = _sw_engine.gnc_commodity_set_namespace

def gnc_commodity_set_fullname(cm, fullname):
    return _sw_engine.gnc_commodity_set_fullname(cm, fullname)
gnc_commodity_set_fullname = _sw_engine.gnc_commodity_set_fullname

def gnc_commodity_set_cusip(cm, cusip):
    return _sw_engine.gnc_commodity_set_cusip(cm, cusip)
gnc_commodity_set_cusip = _sw_engine.gnc_commodity_set_cusip

def gnc_commodity_set_fraction(cm, smallest_fraction):
    return _sw_engine.gnc_commodity_set_fraction(cm, smallest_fraction)
gnc_commodity_set_fraction = _sw_engine.gnc_commodity_set_fraction

def gnc_commodity_user_set_quote_flag(cm, flag):
    return _sw_engine.gnc_commodity_user_set_quote_flag(cm, flag)
gnc_commodity_user_set_quote_flag = _sw_engine.gnc_commodity_user_set_quote_flag

def gnc_commodity_set_quote_flag(cm, flag):
    return _sw_engine.gnc_commodity_set_quote_flag(cm, flag)
gnc_commodity_set_quote_flag = _sw_engine.gnc_commodity_set_quote_flag

def gnc_commodity_set_quote_source(cm, src):
    return _sw_engine.gnc_commodity_set_quote_source(cm, src)
gnc_commodity_set_quote_source = _sw_engine.gnc_commodity_set_quote_source

def gnc_commodity_set_quote_tz(cm, tz):
    return _sw_engine.gnc_commodity_set_quote_tz(cm, tz)
gnc_commodity_set_quote_tz = _sw_engine.gnc_commodity_set_quote_tz

def gnc_commodity_set_user_symbol(cm, user_symbol):
    return _sw_engine.gnc_commodity_set_user_symbol(cm, user_symbol)
gnc_commodity_set_user_symbol = _sw_engine.gnc_commodity_set_user_symbol

def gnc_commodity_increment_usage_count(cm):
    return _sw_engine.gnc_commodity_increment_usage_count(cm)
gnc_commodity_increment_usage_count = _sw_engine.gnc_commodity_increment_usage_count

def gnc_commodity_decrement_usage_count(cm):
    return _sw_engine.gnc_commodity_decrement_usage_count(cm)
gnc_commodity_decrement_usage_count = _sw_engine.gnc_commodity_decrement_usage_count

def gnc_commodity_equiv(a, b):
    return _sw_engine.gnc_commodity_equiv(a, b)
gnc_commodity_equiv = _sw_engine.gnc_commodity_equiv

def gnc_commodity_equal(a, b):
    return _sw_engine.gnc_commodity_equal(a, b)
gnc_commodity_equal = _sw_engine.gnc_commodity_equal

def gnc_commodity_compare(a, b):
    return _sw_engine.gnc_commodity_compare(a, b)
gnc_commodity_compare = _sw_engine.gnc_commodity_compare

def gnc_commodity_compare_void(a, b):
    return _sw_engine.gnc_commodity_compare_void(a, b)
gnc_commodity_compare_void = _sw_engine.gnc_commodity_compare_void

def gnc_commodity_namespace_is_iso(commodity_namespace):
    return _sw_engine.gnc_commodity_namespace_is_iso(commodity_namespace)
gnc_commodity_namespace_is_iso = _sw_engine.gnc_commodity_namespace_is_iso

def gnc_commodity_is_iso(cm):
    return _sw_engine.gnc_commodity_is_iso(cm)
gnc_commodity_is_iso = _sw_engine.gnc_commodity_is_iso

def gnc_commodity_is_currency(cm):
    return _sw_engine.gnc_commodity_is_currency(cm)
gnc_commodity_is_currency = _sw_engine.gnc_commodity_is_currency

def gnc_commodity_table_get_table(book):
    return _sw_engine.gnc_commodity_table_get_table(book)
gnc_commodity_table_get_table = _sw_engine.gnc_commodity_table_get_table

def gnc_commodity_table_lookup(table, commodity_namespace, mnemonic):
    return _sw_engine.gnc_commodity_table_lookup(table, commodity_namespace, mnemonic)
gnc_commodity_table_lookup = _sw_engine.gnc_commodity_table_lookup

def gnc_commodity_table_lookup_unique(table, unique_name):
    return _sw_engine.gnc_commodity_table_lookup_unique(table, unique_name)
gnc_commodity_table_lookup_unique = _sw_engine.gnc_commodity_table_lookup_unique

def gnc_commodity_table_find_full(t, commodity_namespace, fullname):
    return _sw_engine.gnc_commodity_table_find_full(t, commodity_namespace, fullname)
gnc_commodity_table_find_full = _sw_engine.gnc_commodity_table_find_full

def gnc_commodity_find_commodity_by_guid(guid, book):
    return _sw_engine.gnc_commodity_find_commodity_by_guid(guid, book)
gnc_commodity_find_commodity_by_guid = _sw_engine.gnc_commodity_find_commodity_by_guid

def gnc_commodity_table_insert(table, comm):
    return _sw_engine.gnc_commodity_table_insert(table, comm)
gnc_commodity_table_insert = _sw_engine.gnc_commodity_table_insert

def gnc_commodity_table_remove(table, comm):
    return _sw_engine.gnc_commodity_table_remove(table, comm)
gnc_commodity_table_remove = _sw_engine.gnc_commodity_table_remove

def gnc_commodity_table_add_default_data(table, book):
    return _sw_engine.gnc_commodity_table_add_default_data(table, book)
gnc_commodity_table_add_default_data = _sw_engine.gnc_commodity_table_add_default_data

def gnc_commodity_namespace_get_name(ns):
    return _sw_engine.gnc_commodity_namespace_get_name(ns)
gnc_commodity_namespace_get_name = _sw_engine.gnc_commodity_namespace_get_name

def gnc_commodity_namespace_get_gui_name(ns):
    return _sw_engine.gnc_commodity_namespace_get_gui_name(ns)
gnc_commodity_namespace_get_gui_name = _sw_engine.gnc_commodity_namespace_get_gui_name

def gnc_commodity_namespace_get_commodity_list(ns):
    return _sw_engine.gnc_commodity_namespace_get_commodity_list(ns)
gnc_commodity_namespace_get_commodity_list = _sw_engine.gnc_commodity_namespace_get_commodity_list

def gnc_commodity_table_has_namespace(table, commodity_namespace):
    return _sw_engine.gnc_commodity_table_has_namespace(table, commodity_namespace)
gnc_commodity_table_has_namespace = _sw_engine.gnc_commodity_table_has_namespace

def gnc_commodity_table_get_namespaces(t):
    return _sw_engine.gnc_commodity_table_get_namespaces(t)
gnc_commodity_table_get_namespaces = _sw_engine.gnc_commodity_table_get_namespaces

def gnc_commodity_table_get_namespaces_list(t):
    return _sw_engine.gnc_commodity_table_get_namespaces_list(t)
gnc_commodity_table_get_namespaces_list = _sw_engine.gnc_commodity_table_get_namespaces_list

def gnc_commodity_table_add_namespace(table, commodity_namespace, book):
    return _sw_engine.gnc_commodity_table_add_namespace(table, commodity_namespace, book)
gnc_commodity_table_add_namespace = _sw_engine.gnc_commodity_table_add_namespace

def gnc_commodity_table_find_namespace(table, commodity_namespace):
    return _sw_engine.gnc_commodity_table_find_namespace(table, commodity_namespace)
gnc_commodity_table_find_namespace = _sw_engine.gnc_commodity_table_find_namespace

def gnc_commodity_table_delete_namespace(table, commodity_namespace):
    return _sw_engine.gnc_commodity_table_delete_namespace(table, commodity_namespace)
gnc_commodity_table_delete_namespace = _sw_engine.gnc_commodity_table_delete_namespace

def gnc_commodity_table_get_size(tbl):
    return _sw_engine.gnc_commodity_table_get_size(tbl)
gnc_commodity_table_get_size = _sw_engine.gnc_commodity_table_get_size

def gnc_commodity_table_get_commodities(table, commodity_namespace):
    return _sw_engine.gnc_commodity_table_get_commodities(table, commodity_namespace)
gnc_commodity_table_get_commodities = _sw_engine.gnc_commodity_table_get_commodities

def gnc_commodity_table_foreach_commodity(table, f, user_data):
    return _sw_engine.gnc_commodity_table_foreach_commodity(table, f, user_data)
gnc_commodity_table_foreach_commodity = _sw_engine.gnc_commodity_table_foreach_commodity

def gnc_commodity_table_new():
    return _sw_engine.gnc_commodity_table_new()
gnc_commodity_table_new = _sw_engine.gnc_commodity_table_new

def gnc_commodity_table_destroy(table):
    return _sw_engine.gnc_commodity_table_destroy(table)
gnc_commodity_table_destroy = _sw_engine.gnc_commodity_table_destroy

def gnc_commodity_obtain_twin(findlike, book):
    return _sw_engine.gnc_commodity_obtain_twin(findlike, book)
gnc_commodity_obtain_twin = _sw_engine.gnc_commodity_obtain_twin

def gnc_commodity_table_register():
    return _sw_engine.gnc_commodity_table_register()
gnc_commodity_table_register = _sw_engine.gnc_commodity_table_register

def gnc_commodity_begin_edit(cm):
    return _sw_engine.gnc_commodity_begin_edit(cm)
gnc_commodity_begin_edit = _sw_engine.gnc_commodity_begin_edit

def gnc_commodity_commit_edit(cm):
    return _sw_engine.gnc_commodity_commit_edit(cm)
gnc_commodity_commit_edit = _sw_engine.gnc_commodity_commit_edit
class _gnc_monetary(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _gnc_monetary, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _gnc_monetary, name)
    __repr__ = _swig_repr
    __swig_setmethods__["commodity"] = _sw_engine._gnc_monetary_commodity_set
    __swig_getmethods__["commodity"] = _sw_engine._gnc_monetary_commodity_get
    if _newclass:
        commodity = _swig_property(_sw_engine._gnc_monetary_commodity_get, _sw_engine._gnc_monetary_commodity_set)
    __swig_setmethods__["value"] = _sw_engine._gnc_monetary_value_set
    __swig_getmethods__["value"] = _sw_engine._gnc_monetary_value_get
    if _newclass:
        value = _swig_property(_sw_engine._gnc_monetary_value_get, _sw_engine._gnc_monetary_value_set)

    def __init__(self):
        this = _sw_engine.new__gnc_monetary()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_engine.delete__gnc_monetary
    __del__ = lambda self: None
_gnc_monetary_swigregister = _sw_engine._gnc_monetary_swigregister
_gnc_monetary_swigregister(_gnc_monetary)


def gnc_monetary_create(commod, val):
    return _sw_engine.gnc_monetary_create(commod, val)
gnc_monetary_create = _sw_engine.gnc_monetary_create

def gnc_monetary_commodity(a):
    return _sw_engine.gnc_monetary_commodity(a)
gnc_monetary_commodity = _sw_engine.gnc_monetary_commodity

def gnc_monetary_value(a):
    return _sw_engine.gnc_monetary_value(a)
gnc_monetary_value = _sw_engine.gnc_monetary_value

def gnc_monetary_list_add_monetary(list, mon):
    return _sw_engine.gnc_monetary_list_add_monetary(list, mon)
gnc_monetary_list_add_monetary = _sw_engine.gnc_monetary_list_add_monetary

def gnc_monetary_list_add_value(list, commod, value):
    return _sw_engine.gnc_monetary_list_add_value(list, commod, value)
gnc_monetary_list_add_value = _sw_engine.gnc_monetary_list_add_value

def gnc_monetary_list_delete_zeros(list):
    return _sw_engine.gnc_monetary_list_delete_zeros(list)
gnc_monetary_list_delete_zeros = _sw_engine.gnc_monetary_list_delete_zeros

def gnc_monetary_list_free(list):
    return _sw_engine.gnc_monetary_list_free(list)
gnc_monetary_list_free = _sw_engine.gnc_monetary_list_free

def gnc_hook_run(name, data):
    return _sw_engine.gnc_hook_run(name, data)
gnc_hook_run = _sw_engine.gnc_hook_run

def gnc_hook_create(name, num_args, desc):
    return _sw_engine.gnc_hook_create(name, num_args, desc)
gnc_hook_create = _sw_engine.gnc_hook_create

def gnc_hook_add_dangler(name, callback, cb_data):
    return _sw_engine.gnc_hook_add_dangler(name, callback, cb_data)
gnc_hook_add_dangler = _sw_engine.gnc_hook_add_dangler

def gnc_hook_remove_dangler(name, callback):
    return _sw_engine.gnc_hook_remove_dangler(name, callback)
gnc_hook_remove_dangler = _sw_engine.gnc_hook_remove_dangler

def gnc_hooks_init():
    return _sw_engine.gnc_hooks_init()
gnc_hooks_init = _sw_engine.gnc_hooks_init
HOOK_STARTUP = _sw_engine.HOOK_STARTUP
HOOK_SHUTDOWN = _sw_engine.HOOK_SHUTDOWN
HOOK_UI_STARTUP = _sw_engine.HOOK_UI_STARTUP
HOOK_UI_POST_STARTUP = _sw_engine.HOOK_UI_POST_STARTUP
HOOK_UI_SHUTDOWN = _sw_engine.HOOK_UI_SHUTDOWN
HOOK_NEW_BOOK = _sw_engine.HOOK_NEW_BOOK
HOOK_REPORT = _sw_engine.HOOK_REPORT
HOOK_CURRENCY_CHANGED = _sw_engine.HOOK_CURRENCY_CHANGED
HOOK_SAVE_OPTIONS = _sw_engine.HOOK_SAVE_OPTIONS
HOOK_ADD_EXTENSION = _sw_engine.HOOK_ADD_EXTENSION
HOOK_BOOK_OPENED = _sw_engine.HOOK_BOOK_OPENED
HOOK_BOOK_CLOSED = _sw_engine.HOOK_BOOK_CLOSED
HOOK_BOOK_SAVED = _sw_engine.HOOK_BOOK_SAVED

def gnc_book_get_template_root(book):
    return _sw_engine.gnc_book_get_template_root(book)
gnc_book_get_template_root = _sw_engine.gnc_book_get_template_root

def qof_book_options_delete(book, key_path):
    return _sw_engine.qof_book_options_delete(book, key_path)
qof_book_options_delete = _sw_engine.qof_book_options_delete

def qof_book_set_option(book, new_value, key_path):
    return _sw_engine.qof_book_set_option(book, new_value, key_path)
qof_book_set_option = _sw_engine.qof_book_set_option

def qof_book_get_option(book, key_path):
    return _sw_engine.qof_book_get_option(book, key_path)
qof_book_get_option = _sw_engine.qof_book_get_option

def qof_book_get_string_option(book, opt_name):
    return _sw_engine.qof_book_get_string_option(book, opt_name)
qof_book_get_string_option = _sw_engine.qof_book_get_string_option

def qof_book_set_string_option(book, opt_name, opt_val):
    return _sw_engine.qof_book_set_string_option(book, opt_name, opt_val)
qof_book_set_string_option = _sw_engine.qof_book_set_string_option

def gncTaxTableReturnGUID(x):
    return _sw_engine.gncTaxTableReturnGUID(x)
gncTaxTableReturnGUID = _sw_engine.gncTaxTableReturnGUID

def gncInvoiceReturnGUID(x):
    return _sw_engine.gncInvoiceReturnGUID(x)
gncInvoiceReturnGUID = _sw_engine.gncInvoiceReturnGUID

def gncJobReturnGUID(x):
    return _sw_engine.gncJobReturnGUID(x)
gncJobReturnGUID = _sw_engine.gncJobReturnGUID

def gncVendorReturnGUID(x):
    return _sw_engine.gncVendorReturnGUID(x)
gncVendorReturnGUID = _sw_engine.gncVendorReturnGUID

def gncCustomerReturnGUID(x):
    return _sw_engine.gncCustomerReturnGUID(x)
gncCustomerReturnGUID = _sw_engine.gncCustomerReturnGUID

def gncEmployeeReturnGUID(x):
    return _sw_engine.gncEmployeeReturnGUID(x)
gncEmployeeReturnGUID = _sw_engine.gncEmployeeReturnGUID

def gncTaxTableLookupFlip(g, b):
    return _sw_engine.gncTaxTableLookupFlip(g, b)
gncTaxTableLookupFlip = _sw_engine.gncTaxTableLookupFlip

def gncInvoiceLookupFlip(g, b):
    return _sw_engine.gncInvoiceLookupFlip(g, b)
gncInvoiceLookupFlip = _sw_engine.gncInvoiceLookupFlip

def gncJobLookupFlip(g, b):
    return _sw_engine.gncJobLookupFlip(g, b)
gncJobLookupFlip = _sw_engine.gncJobLookupFlip

def gncVendorLookupFlip(g, b):
    return _sw_engine.gncVendorLookupFlip(g, b)
gncVendorLookupFlip = _sw_engine.gncVendorLookupFlip

def gncCustomerLookupFlip(g, b):
    return _sw_engine.gncCustomerLookupFlip(g, b)
gncCustomerLookupFlip = _sw_engine.gncCustomerLookupFlip

def gncEmployeeLookupFlip(g, b):
    return _sw_engine.gncEmployeeLookupFlip(g, b)
gncEmployeeLookupFlip = _sw_engine.gncEmployeeLookupFlip
GNC_ADDRESS_MODULE_NAME = _sw_engine.GNC_ADDRESS_MODULE_NAME
GNC_ID_ADDRESS = _sw_engine.GNC_ID_ADDRESS

def gnc_address_get_type():
    return _sw_engine.gnc_address_get_type()
gnc_address_get_type = _sw_engine.gnc_address_get_type

def gncAddressCreate(book, parent):
    return _sw_engine.gncAddressCreate(book, parent)
gncAddressCreate = _sw_engine.gncAddressCreate

def gncAddressDestroy(addr):
    return _sw_engine.gncAddressDestroy(addr)
gncAddressDestroy = _sw_engine.gncAddressDestroy

def gncAddressBeginEdit(addr):
    return _sw_engine.gncAddressBeginEdit(addr)
gncAddressBeginEdit = _sw_engine.gncAddressBeginEdit

def gncAddressCommitEdit(addr):
    return _sw_engine.gncAddressCommitEdit(addr)
gncAddressCommitEdit = _sw_engine.gncAddressCommitEdit

def gncAddressSetName(addr, name):
    return _sw_engine.gncAddressSetName(addr, name)
gncAddressSetName = _sw_engine.gncAddressSetName

def gncAddressSetAddr1(addr, addr1):
    return _sw_engine.gncAddressSetAddr1(addr, addr1)
gncAddressSetAddr1 = _sw_engine.gncAddressSetAddr1

def gncAddressSetAddr2(addr, addr2):
    return _sw_engine.gncAddressSetAddr2(addr, addr2)
gncAddressSetAddr2 = _sw_engine.gncAddressSetAddr2

def gncAddressSetAddr3(addr, addr3):
    return _sw_engine.gncAddressSetAddr3(addr, addr3)
gncAddressSetAddr3 = _sw_engine.gncAddressSetAddr3

def gncAddressSetAddr4(addr, addr4):
    return _sw_engine.gncAddressSetAddr4(addr, addr4)
gncAddressSetAddr4 = _sw_engine.gncAddressSetAddr4

def gncAddressSetPhone(addr, phone):
    return _sw_engine.gncAddressSetPhone(addr, phone)
gncAddressSetPhone = _sw_engine.gncAddressSetPhone

def gncAddressSetFax(addr, fax):
    return _sw_engine.gncAddressSetFax(addr, fax)
gncAddressSetFax = _sw_engine.gncAddressSetFax

def gncAddressSetEmail(addr, email):
    return _sw_engine.gncAddressSetEmail(addr, email)
gncAddressSetEmail = _sw_engine.gncAddressSetEmail

def gncAddressClearDirty(address):
    return _sw_engine.gncAddressClearDirty(address)
gncAddressClearDirty = _sw_engine.gncAddressClearDirty

def gncAddressGetName(addr):
    return _sw_engine.gncAddressGetName(addr)
gncAddressGetName = _sw_engine.gncAddressGetName

def gncAddressGetAddr1(addr):
    return _sw_engine.gncAddressGetAddr1(addr)
gncAddressGetAddr1 = _sw_engine.gncAddressGetAddr1

def gncAddressGetAddr2(addr):
    return _sw_engine.gncAddressGetAddr2(addr)
gncAddressGetAddr2 = _sw_engine.gncAddressGetAddr2

def gncAddressGetAddr3(addr):
    return _sw_engine.gncAddressGetAddr3(addr)
gncAddressGetAddr3 = _sw_engine.gncAddressGetAddr3

def gncAddressGetAddr4(addr):
    return _sw_engine.gncAddressGetAddr4(addr)
gncAddressGetAddr4 = _sw_engine.gncAddressGetAddr4

def gncAddressGetPhone(addr):
    return _sw_engine.gncAddressGetPhone(addr)
gncAddressGetPhone = _sw_engine.gncAddressGetPhone

def gncAddressGetFax(addr):
    return _sw_engine.gncAddressGetFax(addr)
gncAddressGetFax = _sw_engine.gncAddressGetFax

def gncAddressGetEmail(addr):
    return _sw_engine.gncAddressGetEmail(addr)
gncAddressGetEmail = _sw_engine.gncAddressGetEmail

def gncAddressIsDirty(addr):
    return _sw_engine.gncAddressIsDirty(addr)
gncAddressIsDirty = _sw_engine.gncAddressIsDirty

def gncAddressCompare(a, b):
    return _sw_engine.gncAddressCompare(a, b)
gncAddressCompare = _sw_engine.gncAddressCompare

def gncAddressEqual(a, b):
    return _sw_engine.gncAddressEqual(a, b)
gncAddressEqual = _sw_engine.gncAddressEqual
ADDRESS_NAME = _sw_engine.ADDRESS_NAME
ADDRESS_ONE = _sw_engine.ADDRESS_ONE
ADDRESS_TWO = _sw_engine.ADDRESS_TWO
ADDRESS_THREE = _sw_engine.ADDRESS_THREE
ADDRESS_FOUR = _sw_engine.ADDRESS_FOUR
ADDRESS_PHONE = _sw_engine.ADDRESS_PHONE
ADDRESS_FAX = _sw_engine.ADDRESS_FAX
ADDRESS_EMAIL = _sw_engine.ADDRESS_EMAIL
ADDRESS_OWNER = _sw_engine.ADDRESS_OWNER
GNC_ID_BILLTERM = _sw_engine.GNC_ID_BILLTERM

def gnc_billterm_get_type():
    return _sw_engine.gnc_billterm_get_type()
gnc_billterm_get_type = _sw_engine.gnc_billterm_get_type
GNC_BILLTERM_NAME = _sw_engine.GNC_BILLTERM_NAME
GNC_BILLTERM_DESC = _sw_engine.GNC_BILLTERM_DESC
GNC_BILLTERM_DUEDAYS = _sw_engine.GNC_BILLTERM_DUEDAYS
GNC_BILLTERM_DISCDAYS = _sw_engine.GNC_BILLTERM_DISCDAYS
GNC_BILLTERM_CUTOFF = _sw_engine.GNC_BILLTERM_CUTOFF
GNC_BILLTERM_TYPE = _sw_engine.GNC_BILLTERM_TYPE
GNC_BILLTERM_DISCOUNT = _sw_engine.GNC_BILLTERM_DISCOUNT
GNC_BILLTERM_REFCOUNT = _sw_engine.GNC_BILLTERM_REFCOUNT
GNC_TERM_TYPE_DAYS = _sw_engine.GNC_TERM_TYPE_DAYS
GNC_TERM_TYPE_PROXIMO = _sw_engine.GNC_TERM_TYPE_PROXIMO

def gncBillTermCreate(book):
    return _sw_engine.gncBillTermCreate(book)
gncBillTermCreate = _sw_engine.gncBillTermCreate

def gncBillTermDestroy(term):
    return _sw_engine.gncBillTermDestroy(term)
gncBillTermDestroy = _sw_engine.gncBillTermDestroy

def gncBillTermIncRef(term):
    return _sw_engine.gncBillTermIncRef(term)
gncBillTermIncRef = _sw_engine.gncBillTermIncRef

def gncBillTermDecRef(term):
    return _sw_engine.gncBillTermDecRef(term)
gncBillTermDecRef = _sw_engine.gncBillTermDecRef

def gncBillTermChanged(term):
    return _sw_engine.gncBillTermChanged(term)
gncBillTermChanged = _sw_engine.gncBillTermChanged

def gncBillTermBeginEdit(term):
    return _sw_engine.gncBillTermBeginEdit(term)
gncBillTermBeginEdit = _sw_engine.gncBillTermBeginEdit

def gncBillTermCommitEdit(term):
    return _sw_engine.gncBillTermCommitEdit(term)
gncBillTermCommitEdit = _sw_engine.gncBillTermCommitEdit

def gncBillTermSetName(term, name):
    return _sw_engine.gncBillTermSetName(term, name)
gncBillTermSetName = _sw_engine.gncBillTermSetName

def gncBillTermSetDescription(term, name):
    return _sw_engine.gncBillTermSetDescription(term, name)
gncBillTermSetDescription = _sw_engine.gncBillTermSetDescription

def gncBillTermSetType(term, type):
    return _sw_engine.gncBillTermSetType(term, type)
gncBillTermSetType = _sw_engine.gncBillTermSetType

def gncBillTermSetDueDays(term, days):
    return _sw_engine.gncBillTermSetDueDays(term, days)
gncBillTermSetDueDays = _sw_engine.gncBillTermSetDueDays

def gncBillTermSetDiscountDays(term, days):
    return _sw_engine.gncBillTermSetDiscountDays(term, days)
gncBillTermSetDiscountDays = _sw_engine.gncBillTermSetDiscountDays

def gncBillTermSetDiscount(term, discount):
    return _sw_engine.gncBillTermSetDiscount(term, discount)
gncBillTermSetDiscount = _sw_engine.gncBillTermSetDiscount

def gncBillTermSetCutoff(term, cutoff):
    return _sw_engine.gncBillTermSetCutoff(term, cutoff)
gncBillTermSetCutoff = _sw_engine.gncBillTermSetCutoff

def gncBillTermLookup(book, guid):
    return _sw_engine.gncBillTermLookup(book, guid)
gncBillTermLookup = _sw_engine.gncBillTermLookup

def gncBillTermLookupByName(book, name):
    return _sw_engine.gncBillTermLookupByName(book, name)
gncBillTermLookupByName = _sw_engine.gncBillTermLookupByName

def gncBillTermGetTerms(book):
    return _sw_engine.gncBillTermGetTerms(book)
gncBillTermGetTerms = _sw_engine.gncBillTermGetTerms

def gncBillTermGetName(term):
    return _sw_engine.gncBillTermGetName(term)
gncBillTermGetName = _sw_engine.gncBillTermGetName

def gncBillTermGetDescription(term):
    return _sw_engine.gncBillTermGetDescription(term)
gncBillTermGetDescription = _sw_engine.gncBillTermGetDescription

def gncBillTermGetType(term):
    return _sw_engine.gncBillTermGetType(term)
gncBillTermGetType = _sw_engine.gncBillTermGetType

def gncBillTermGetDueDays(term):
    return _sw_engine.gncBillTermGetDueDays(term)
gncBillTermGetDueDays = _sw_engine.gncBillTermGetDueDays

def gncBillTermGetDiscountDays(term):
    return _sw_engine.gncBillTermGetDiscountDays(term)
gncBillTermGetDiscountDays = _sw_engine.gncBillTermGetDiscountDays

def gncBillTermGetDiscount(term):
    return _sw_engine.gncBillTermGetDiscount(term)
gncBillTermGetDiscount = _sw_engine.gncBillTermGetDiscount

def gncBillTermGetCutoff(term):
    return _sw_engine.gncBillTermGetCutoff(term)
gncBillTermGetCutoff = _sw_engine.gncBillTermGetCutoff

def gncBillTermIsDirty(term):
    return _sw_engine.gncBillTermIsDirty(term)
gncBillTermIsDirty = _sw_engine.gncBillTermIsDirty

def gncBillTermGetParent(term):
    return _sw_engine.gncBillTermGetParent(term)
gncBillTermGetParent = _sw_engine.gncBillTermGetParent

def gncBillTermReturnChild(term, make_new):
    return _sw_engine.gncBillTermReturnChild(term, make_new)
gncBillTermReturnChild = _sw_engine.gncBillTermReturnChild

def gncBillTermGetRefcount(term):
    return _sw_engine.gncBillTermGetRefcount(term)
gncBillTermGetRefcount = _sw_engine.gncBillTermGetRefcount

def gncBillTermCompare(a, b):
    return _sw_engine.gncBillTermCompare(a, b)
gncBillTermCompare = _sw_engine.gncBillTermCompare

def gncBillTermEqual(a, b):
    return _sw_engine.gncBillTermEqual(a, b)
gncBillTermEqual = _sw_engine.gncBillTermEqual

def gncBillTermIsFamily(a, b):
    return _sw_engine.gncBillTermIsFamily(a, b)
gncBillTermIsFamily = _sw_engine.gncBillTermIsFamily

def gncBillTermComputeDueDate(term, post_date):
    return _sw_engine.gncBillTermComputeDueDate(term, post_date)
gncBillTermComputeDueDate = _sw_engine.gncBillTermComputeDueDate
OWNER_EXPORT_PDF_DIRNAME = _sw_engine.OWNER_EXPORT_PDF_DIRNAME
LAST_POSTED_TO_ACCT = _sw_engine.LAST_POSTED_TO_ACCT
GNC_PAYMENT = _sw_engine.GNC_PAYMENT
GNC_LAST_ACCOUNT = _sw_engine.GNC_LAST_ACCOUNT
GNC_BILLTERM_MODULE_NAME = _sw_engine.GNC_BILLTERM_MODULE_NAME

def gncBusinessGetList(book, type_name, all_including_inactive):
    return _sw_engine.gncBusinessGetList(book, type_name, all_including_inactive)
gncBusinessGetList = _sw_engine.gncBusinessGetList

def gncBusinessGetOwnerList(book, type_name, all_including_inactive):
    return _sw_engine.gncBusinessGetOwnerList(book, type_name, all_including_inactive)
gncBusinessGetOwnerList = _sw_engine.gncBusinessGetOwnerList

def gncBusinessIsPaymentAcctType(type):
    return _sw_engine.gncBusinessIsPaymentAcctType(type)
gncBusinessIsPaymentAcctType = _sw_engine.gncBusinessIsPaymentAcctType
GNC_ID_CUSTOMER = _sw_engine.GNC_ID_CUSTOMER

def gnc_customer_get_type():
    return _sw_engine.gnc_customer_get_type()
gnc_customer_get_type = _sw_engine.gnc_customer_get_type

def gncCustomerCreate(book):
    return _sw_engine.gncCustomerCreate(book)
gncCustomerCreate = _sw_engine.gncCustomerCreate

def gncCustomerDestroy(customer):
    return _sw_engine.gncCustomerDestroy(customer)
gncCustomerDestroy = _sw_engine.gncCustomerDestroy

def gncCustomerBeginEdit(customer):
    return _sw_engine.gncCustomerBeginEdit(customer)
gncCustomerBeginEdit = _sw_engine.gncCustomerBeginEdit

def gncCustomerCommitEdit(customer):
    return _sw_engine.gncCustomerCommitEdit(customer)
gncCustomerCommitEdit = _sw_engine.gncCustomerCommitEdit

def gncCustomerSetID(customer, id):
    return _sw_engine.gncCustomerSetID(customer, id)
gncCustomerSetID = _sw_engine.gncCustomerSetID

def gncCustomerSetName(customer, name):
    return _sw_engine.gncCustomerSetName(customer, name)
gncCustomerSetName = _sw_engine.gncCustomerSetName

def gncCustomerSetNotes(customer, notes):
    return _sw_engine.gncCustomerSetNotes(customer, notes)
gncCustomerSetNotes = _sw_engine.gncCustomerSetNotes

def gncCustomerSetTerms(customer, term):
    return _sw_engine.gncCustomerSetTerms(customer, term)
gncCustomerSetTerms = _sw_engine.gncCustomerSetTerms

def gncCustomerSetTaxIncluded(customer, taxincl):
    return _sw_engine.gncCustomerSetTaxIncluded(customer, taxincl)
gncCustomerSetTaxIncluded = _sw_engine.gncCustomerSetTaxIncluded

def gncCustomerSetActive(customer, active):
    return _sw_engine.gncCustomerSetActive(customer, active)
gncCustomerSetActive = _sw_engine.gncCustomerSetActive

def gncCustomerSetDiscount(customer, discount):
    return _sw_engine.gncCustomerSetDiscount(customer, discount)
gncCustomerSetDiscount = _sw_engine.gncCustomerSetDiscount

def gncCustomerSetCredit(customer, credit):
    return _sw_engine.gncCustomerSetCredit(customer, credit)
gncCustomerSetCredit = _sw_engine.gncCustomerSetCredit

def gncCustomerSetCurrency(customer, currency):
    return _sw_engine.gncCustomerSetCurrency(customer, currency)
gncCustomerSetCurrency = _sw_engine.gncCustomerSetCurrency

def gncCustomerSetTaxTableOverride(customer, override):
    return _sw_engine.gncCustomerSetTaxTableOverride(customer, override)
gncCustomerSetTaxTableOverride = _sw_engine.gncCustomerSetTaxTableOverride

def gncCustomerSetTaxTable(customer, table):
    return _sw_engine.gncCustomerSetTaxTable(customer, table)
gncCustomerSetTaxTable = _sw_engine.gncCustomerSetTaxTable

def gncCustomerAddJob(customer, job):
    return _sw_engine.gncCustomerAddJob(customer, job)
gncCustomerAddJob = _sw_engine.gncCustomerAddJob

def gncCustomerRemoveJob(customer, job):
    return _sw_engine.gncCustomerRemoveJob(customer, job)
gncCustomerRemoveJob = _sw_engine.gncCustomerRemoveJob

def gncCustomerLookup(book, guid):
    return _sw_engine.gncCustomerLookup(book, guid)
gncCustomerLookup = _sw_engine.gncCustomerLookup

def gncCustomerGetID(customer):
    return _sw_engine.gncCustomerGetID(customer)
gncCustomerGetID = _sw_engine.gncCustomerGetID

def gncCustomerGetName(customer):
    return _sw_engine.gncCustomerGetName(customer)
gncCustomerGetName = _sw_engine.gncCustomerGetName

def gncCustomerGetAddr(customer):
    return _sw_engine.gncCustomerGetAddr(customer)
gncCustomerGetAddr = _sw_engine.gncCustomerGetAddr

def gncCustomerGetShipAddr(customer):
    return _sw_engine.gncCustomerGetShipAddr(customer)
gncCustomerGetShipAddr = _sw_engine.gncCustomerGetShipAddr

def gncCustomerGetNotes(customer):
    return _sw_engine.gncCustomerGetNotes(customer)
gncCustomerGetNotes = _sw_engine.gncCustomerGetNotes

def gncCustomerGetTerms(customer):
    return _sw_engine.gncCustomerGetTerms(customer)
gncCustomerGetTerms = _sw_engine.gncCustomerGetTerms

def gncCustomerGetTaxIncluded(customer):
    return _sw_engine.gncCustomerGetTaxIncluded(customer)
gncCustomerGetTaxIncluded = _sw_engine.gncCustomerGetTaxIncluded

def gncCustomerGetActive(customer):
    return _sw_engine.gncCustomerGetActive(customer)
gncCustomerGetActive = _sw_engine.gncCustomerGetActive

def gncCustomerGetDiscount(customer):
    return _sw_engine.gncCustomerGetDiscount(customer)
gncCustomerGetDiscount = _sw_engine.gncCustomerGetDiscount

def gncCustomerGetCredit(customer):
    return _sw_engine.gncCustomerGetCredit(customer)
gncCustomerGetCredit = _sw_engine.gncCustomerGetCredit

def gncCustomerGetCurrency(customer):
    return _sw_engine.gncCustomerGetCurrency(customer)
gncCustomerGetCurrency = _sw_engine.gncCustomerGetCurrency

def gncCustomerGetTaxTableOverride(customer):
    return _sw_engine.gncCustomerGetTaxTableOverride(customer)
gncCustomerGetTaxTableOverride = _sw_engine.gncCustomerGetTaxTableOverride

def gncCustomerGetTaxTable(customer):
    return _sw_engine.gncCustomerGetTaxTable(customer)
gncCustomerGetTaxTable = _sw_engine.gncCustomerGetTaxTable

def gncCustomerCompare(a, b):
    return _sw_engine.gncCustomerCompare(a, b)
gncCustomerCompare = _sw_engine.gncCustomerCompare
CUSTOMER_ID = _sw_engine.CUSTOMER_ID
CUSTOMER_NAME = _sw_engine.CUSTOMER_NAME
CUSTOMER_ADDR = _sw_engine.CUSTOMER_ADDR
CUSTOMER_SHIPADDR = _sw_engine.CUSTOMER_SHIPADDR
CUSTOMER_NOTES = _sw_engine.CUSTOMER_NOTES
CUSTOMER_DISCOUNT = _sw_engine.CUSTOMER_DISCOUNT
CUSTOMER_CREDIT = _sw_engine.CUSTOMER_CREDIT
CUSTOMER_TT_OVER = _sw_engine.CUSTOMER_TT_OVER
CUSTOMER_TAX_INC = _sw_engine.CUSTOMER_TAX_INC
CUSTOMER_TERMS = _sw_engine.CUSTOMER_TERMS
CUSTOMER_ACTIVE = _sw_engine.CUSTOMER_ACTIVE
CUSTOMER_SLOTS = _sw_engine.CUSTOMER_SLOTS

def gncCustomerEqual(a, b):
    return _sw_engine.gncCustomerEqual(a, b)
gncCustomerEqual = _sw_engine.gncCustomerEqual

def gncCustomerGetJoblist(customer, show_all):
    return _sw_engine.gncCustomerGetJoblist(customer, show_all)
gncCustomerGetJoblist = _sw_engine.gncCustomerGetJoblist

def gncCustomerIsDirty(customer):
    return _sw_engine.gncCustomerIsDirty(customer)
gncCustomerIsDirty = _sw_engine.gncCustomerIsDirty
GNC_ID_EMPLOYEE = _sw_engine.GNC_ID_EMPLOYEE

def gnc_employee_get_type():
    return _sw_engine.gnc_employee_get_type()
gnc_employee_get_type = _sw_engine.gnc_employee_get_type

def gncEmployeeCreate(book):
    return _sw_engine.gncEmployeeCreate(book)
gncEmployeeCreate = _sw_engine.gncEmployeeCreate

def gncEmployeeDestroy(employee):
    return _sw_engine.gncEmployeeDestroy(employee)
gncEmployeeDestroy = _sw_engine.gncEmployeeDestroy

def gncEmployeeBeginEdit(employee):
    return _sw_engine.gncEmployeeBeginEdit(employee)
gncEmployeeBeginEdit = _sw_engine.gncEmployeeBeginEdit

def gncEmployeeCommitEdit(employee):
    return _sw_engine.gncEmployeeCommitEdit(employee)
gncEmployeeCommitEdit = _sw_engine.gncEmployeeCommitEdit

def gncEmployeeCompare(a, b):
    return _sw_engine.gncEmployeeCompare(a, b)
gncEmployeeCompare = _sw_engine.gncEmployeeCompare

def gncEmployeeSetID(employee, id):
    return _sw_engine.gncEmployeeSetID(employee, id)
gncEmployeeSetID = _sw_engine.gncEmployeeSetID

def gncEmployeeSetUsername(employee, username):
    return _sw_engine.gncEmployeeSetUsername(employee, username)
gncEmployeeSetUsername = _sw_engine.gncEmployeeSetUsername

def gncEmployeeSetName(employee, name):
    return _sw_engine.gncEmployeeSetName(employee, name)
gncEmployeeSetName = _sw_engine.gncEmployeeSetName

def gncEmployeeSetLanguage(employee, language):
    return _sw_engine.gncEmployeeSetLanguage(employee, language)
gncEmployeeSetLanguage = _sw_engine.gncEmployeeSetLanguage

def gncEmployeeSetAcl(employee, acl):
    return _sw_engine.gncEmployeeSetAcl(employee, acl)
gncEmployeeSetAcl = _sw_engine.gncEmployeeSetAcl

def gncEmployeeSetWorkday(employee, workday):
    return _sw_engine.gncEmployeeSetWorkday(employee, workday)
gncEmployeeSetWorkday = _sw_engine.gncEmployeeSetWorkday

def gncEmployeeSetRate(employee, rate):
    return _sw_engine.gncEmployeeSetRate(employee, rate)
gncEmployeeSetRate = _sw_engine.gncEmployeeSetRate

def gncEmployeeSetCurrency(employee, currency):
    return _sw_engine.gncEmployeeSetCurrency(employee, currency)
gncEmployeeSetCurrency = _sw_engine.gncEmployeeSetCurrency

def gncEmployeeSetActive(employee, active):
    return _sw_engine.gncEmployeeSetActive(employee, active)
gncEmployeeSetActive = _sw_engine.gncEmployeeSetActive

def gncEmployeeSetCCard(employee, ccard_acc):
    return _sw_engine.gncEmployeeSetCCard(employee, ccard_acc)
gncEmployeeSetCCard = _sw_engine.gncEmployeeSetCCard

def qofEmployeeSetAddr(employee, addr_ent):
    return _sw_engine.qofEmployeeSetAddr(employee, addr_ent)
qofEmployeeSetAddr = _sw_engine.qofEmployeeSetAddr

def gncEmployeeGetBook(employee):
    return _sw_engine.gncEmployeeGetBook(employee)
gncEmployeeGetBook = _sw_engine.gncEmployeeGetBook

def gncEmployeeGetID(employee):
    return _sw_engine.gncEmployeeGetID(employee)
gncEmployeeGetID = _sw_engine.gncEmployeeGetID

def gncEmployeeGetUsername(employee):
    return _sw_engine.gncEmployeeGetUsername(employee)
gncEmployeeGetUsername = _sw_engine.gncEmployeeGetUsername

def gncEmployeeGetName(employee):
    return _sw_engine.gncEmployeeGetName(employee)
gncEmployeeGetName = _sw_engine.gncEmployeeGetName

def gncEmployeeGetAddr(employee):
    return _sw_engine.gncEmployeeGetAddr(employee)
gncEmployeeGetAddr = _sw_engine.gncEmployeeGetAddr

def gncEmployeeGetLanguage(employee):
    return _sw_engine.gncEmployeeGetLanguage(employee)
gncEmployeeGetLanguage = _sw_engine.gncEmployeeGetLanguage

def gncEmployeeGetAcl(employee):
    return _sw_engine.gncEmployeeGetAcl(employee)
gncEmployeeGetAcl = _sw_engine.gncEmployeeGetAcl

def gncEmployeeGetWorkday(employee):
    return _sw_engine.gncEmployeeGetWorkday(employee)
gncEmployeeGetWorkday = _sw_engine.gncEmployeeGetWorkday

def gncEmployeeGetRate(employee):
    return _sw_engine.gncEmployeeGetRate(employee)
gncEmployeeGetRate = _sw_engine.gncEmployeeGetRate

def gncEmployeeGetCurrency(employee):
    return _sw_engine.gncEmployeeGetCurrency(employee)
gncEmployeeGetCurrency = _sw_engine.gncEmployeeGetCurrency

def gncEmployeeGetActive(employee):
    return _sw_engine.gncEmployeeGetActive(employee)
gncEmployeeGetActive = _sw_engine.gncEmployeeGetActive

def gncEmployeeGetCCard(employee):
    return _sw_engine.gncEmployeeGetCCard(employee)
gncEmployeeGetCCard = _sw_engine.gncEmployeeGetCCard

def gncEmployeeLookup(book, guid):
    return _sw_engine.gncEmployeeLookup(book, guid)
gncEmployeeLookup = _sw_engine.gncEmployeeLookup
EMPLOYEE_ID = _sw_engine.EMPLOYEE_ID
EMPLOYEE_USERNAME = _sw_engine.EMPLOYEE_USERNAME
EMPLOYEE_NAME = _sw_engine.EMPLOYEE_NAME
EMPLOYEE_ADDR = _sw_engine.EMPLOYEE_ADDR
EMPLOYEE_LANGUAGE = _sw_engine.EMPLOYEE_LANGUAGE
EMPLOYEE_ACL = _sw_engine.EMPLOYEE_ACL
EMPLOYEE_WORKDAY = _sw_engine.EMPLOYEE_WORKDAY
EMPLOYEE_RATE = _sw_engine.EMPLOYEE_RATE
EMPLOYEE_CC = _sw_engine.EMPLOYEE_CC

def gncEmployeeEqual(e1, e2):
    return _sw_engine.gncEmployeeEqual(e1, e2)
gncEmployeeEqual = _sw_engine.gncEmployeeEqual

def gncEmployeeIsDirty(employee):
    return _sw_engine.gncEmployeeIsDirty(employee)
gncEmployeeIsDirty = _sw_engine.gncEmployeeIsDirty
GNC_PAYMENT_CASH = _sw_engine.GNC_PAYMENT_CASH
GNC_PAYMENT_CARD = _sw_engine.GNC_PAYMENT_CARD
GNC_DISC_PRETAX = _sw_engine.GNC_DISC_PRETAX
GNC_DISC_SAMETIME = _sw_engine.GNC_DISC_SAMETIME
GNC_DISC_POSTTAX = _sw_engine.GNC_DISC_POSTTAX
GNC_ID_ENTRY = _sw_engine.GNC_ID_ENTRY

def gnc_entry_get_type():
    return _sw_engine.gnc_entry_get_type()
gnc_entry_get_type = _sw_engine.gnc_entry_get_type

def gncEntryDiscountHowToString(how):
    return _sw_engine.gncEntryDiscountHowToString(how)
gncEntryDiscountHowToString = _sw_engine.gncEntryDiscountHowToString

def gncEntryDiscountStringToHow(str, how):
    return _sw_engine.gncEntryDiscountStringToHow(str, how)
gncEntryDiscountStringToHow = _sw_engine.gncEntryDiscountStringToHow

def gncEntryPaymentTypeToString(type):
    return _sw_engine.gncEntryPaymentTypeToString(type)
gncEntryPaymentTypeToString = _sw_engine.gncEntryPaymentTypeToString

def gncEntryPaymentStringToType(str, type):
    return _sw_engine.gncEntryPaymentStringToType(str, type)
gncEntryPaymentStringToType = _sw_engine.gncEntryPaymentStringToType

def gncEntryCreate(book):
    return _sw_engine.gncEntryCreate(book)
gncEntryCreate = _sw_engine.gncEntryCreate

def gncEntryDestroy(entry):
    return _sw_engine.gncEntryDestroy(entry)
gncEntryDestroy = _sw_engine.gncEntryDestroy

def gncEntrySetDateGDate(entry, date):
    return _sw_engine.gncEntrySetDateGDate(entry, date)
gncEntrySetDateGDate = _sw_engine.gncEntrySetDateGDate

def gncEntrySetDate(entry, date):
    return _sw_engine.gncEntrySetDate(entry, date)
gncEntrySetDate = _sw_engine.gncEntrySetDate

def gncEntrySetDateEntered(entry, date):
    return _sw_engine.gncEntrySetDateEntered(entry, date)
gncEntrySetDateEntered = _sw_engine.gncEntrySetDateEntered

def gncEntrySetDescription(entry, desc):
    return _sw_engine.gncEntrySetDescription(entry, desc)
gncEntrySetDescription = _sw_engine.gncEntrySetDescription

def gncEntrySetAction(entry, action):
    return _sw_engine.gncEntrySetAction(entry, action)
gncEntrySetAction = _sw_engine.gncEntrySetAction

def gncEntrySetNotes(entry, notes):
    return _sw_engine.gncEntrySetNotes(entry, notes)
gncEntrySetNotes = _sw_engine.gncEntrySetNotes

def gncEntrySetQuantity(entry, quantity):
    return _sw_engine.gncEntrySetQuantity(entry, quantity)
gncEntrySetQuantity = _sw_engine.gncEntrySetQuantity

def gncEntrySetDocQuantity(entry, quantity, is_cn):
    return _sw_engine.gncEntrySetDocQuantity(entry, quantity, is_cn)
gncEntrySetDocQuantity = _sw_engine.gncEntrySetDocQuantity

def gncEntrySetInvAccount(entry, acc):
    return _sw_engine.gncEntrySetInvAccount(entry, acc)
gncEntrySetInvAccount = _sw_engine.gncEntrySetInvAccount

def gncEntrySetInvPrice(entry, price):
    return _sw_engine.gncEntrySetInvPrice(entry, price)
gncEntrySetInvPrice = _sw_engine.gncEntrySetInvPrice

def gncEntrySetInvTaxable(entry, taxable):
    return _sw_engine.gncEntrySetInvTaxable(entry, taxable)
gncEntrySetInvTaxable = _sw_engine.gncEntrySetInvTaxable

def gncEntrySetInvTaxIncluded(entry, tax_included):
    return _sw_engine.gncEntrySetInvTaxIncluded(entry, tax_included)
gncEntrySetInvTaxIncluded = _sw_engine.gncEntrySetInvTaxIncluded

def gncEntrySetInvTaxTable(entry, table):
    return _sw_engine.gncEntrySetInvTaxTable(entry, table)
gncEntrySetInvTaxTable = _sw_engine.gncEntrySetInvTaxTable

def gncEntrySetInvDiscount(entry, discount):
    return _sw_engine.gncEntrySetInvDiscount(entry, discount)
gncEntrySetInvDiscount = _sw_engine.gncEntrySetInvDiscount

def gncEntrySetInvDiscountType(entry, type):
    return _sw_engine.gncEntrySetInvDiscountType(entry, type)
gncEntrySetInvDiscountType = _sw_engine.gncEntrySetInvDiscountType

def gncEntrySetInvDiscountHow(entry, how):
    return _sw_engine.gncEntrySetInvDiscountHow(entry, how)
gncEntrySetInvDiscountHow = _sw_engine.gncEntrySetInvDiscountHow

def qofEntrySetInvDiscType(entry, type):
    return _sw_engine.qofEntrySetInvDiscType(entry, type)
qofEntrySetInvDiscType = _sw_engine.qofEntrySetInvDiscType

def qofEntrySetInvDiscHow(entry, type):
    return _sw_engine.qofEntrySetInvDiscHow(entry, type)
qofEntrySetInvDiscHow = _sw_engine.qofEntrySetInvDiscHow

def gncEntrySetBillAccount(entry, acc):
    return _sw_engine.gncEntrySetBillAccount(entry, acc)
gncEntrySetBillAccount = _sw_engine.gncEntrySetBillAccount

def gncEntrySetBillPrice(entry, price):
    return _sw_engine.gncEntrySetBillPrice(entry, price)
gncEntrySetBillPrice = _sw_engine.gncEntrySetBillPrice

def gncEntrySetBillTaxable(entry, taxable):
    return _sw_engine.gncEntrySetBillTaxable(entry, taxable)
gncEntrySetBillTaxable = _sw_engine.gncEntrySetBillTaxable

def gncEntrySetBillTaxIncluded(entry, tax_included):
    return _sw_engine.gncEntrySetBillTaxIncluded(entry, tax_included)
gncEntrySetBillTaxIncluded = _sw_engine.gncEntrySetBillTaxIncluded

def gncEntrySetBillTaxTable(entry, table):
    return _sw_engine.gncEntrySetBillTaxTable(entry, table)
gncEntrySetBillTaxTable = _sw_engine.gncEntrySetBillTaxTable

def gncEntrySetBillable(entry, billable):
    return _sw_engine.gncEntrySetBillable(entry, billable)
gncEntrySetBillable = _sw_engine.gncEntrySetBillable

def gncEntrySetBillTo(entry, billto):
    return _sw_engine.gncEntrySetBillTo(entry, billto)
gncEntrySetBillTo = _sw_engine.gncEntrySetBillTo

def gncEntrySetBillPayment(entry, type):
    return _sw_engine.gncEntrySetBillPayment(entry, type)
gncEntrySetBillPayment = _sw_engine.gncEntrySetBillPayment

def gncEntryGetDateGDate(entry):
    return _sw_engine.gncEntryGetDateGDate(entry)
gncEntryGetDateGDate = _sw_engine.gncEntryGetDateGDate

def gncEntryGetDate(entry):
    return _sw_engine.gncEntryGetDate(entry)
gncEntryGetDate = _sw_engine.gncEntryGetDate

def gncEntryGetDateEntered(entry):
    return _sw_engine.gncEntryGetDateEntered(entry)
gncEntryGetDateEntered = _sw_engine.gncEntryGetDateEntered

def gncEntryGetDescription(entry):
    return _sw_engine.gncEntryGetDescription(entry)
gncEntryGetDescription = _sw_engine.gncEntryGetDescription

def gncEntryGetAction(entry):
    return _sw_engine.gncEntryGetAction(entry)
gncEntryGetAction = _sw_engine.gncEntryGetAction

def gncEntryGetNotes(notes):
    return _sw_engine.gncEntryGetNotes(notes)
gncEntryGetNotes = _sw_engine.gncEntryGetNotes

def gncEntryGetQuantity(entry):
    return _sw_engine.gncEntryGetQuantity(entry)
gncEntryGetQuantity = _sw_engine.gncEntryGetQuantity

def gncEntryGetDocQuantity(entry, is_cn):
    return _sw_engine.gncEntryGetDocQuantity(entry, is_cn)
gncEntryGetDocQuantity = _sw_engine.gncEntryGetDocQuantity

def gncEntryGetInvAccount(entry):
    return _sw_engine.gncEntryGetInvAccount(entry)
gncEntryGetInvAccount = _sw_engine.gncEntryGetInvAccount

def gncEntryGetInvPrice(entry):
    return _sw_engine.gncEntryGetInvPrice(entry)
gncEntryGetInvPrice = _sw_engine.gncEntryGetInvPrice

def gncEntryGetPrice(entry, cust_doc, net):
    return _sw_engine.gncEntryGetPrice(entry, cust_doc, net)
gncEntryGetPrice = _sw_engine.gncEntryGetPrice

def gncEntryGetInvDiscount(entry):
    return _sw_engine.gncEntryGetInvDiscount(entry)
gncEntryGetInvDiscount = _sw_engine.gncEntryGetInvDiscount

def gncEntryGetInvDiscountType(entry):
    return _sw_engine.gncEntryGetInvDiscountType(entry)
gncEntryGetInvDiscountType = _sw_engine.gncEntryGetInvDiscountType

def gncEntryGetInvDiscountHow(entry):
    return _sw_engine.gncEntryGetInvDiscountHow(entry)
gncEntryGetInvDiscountHow = _sw_engine.gncEntryGetInvDiscountHow

def qofEntryGetInvDiscType(entry):
    return _sw_engine.qofEntryGetInvDiscType(entry)
qofEntryGetInvDiscType = _sw_engine.qofEntryGetInvDiscType

def qofEntryGetInvDiscHow(entry):
    return _sw_engine.qofEntryGetInvDiscHow(entry)
qofEntryGetInvDiscHow = _sw_engine.qofEntryGetInvDiscHow

def gncEntryGetInvTaxable(entry):
    return _sw_engine.gncEntryGetInvTaxable(entry)
gncEntryGetInvTaxable = _sw_engine.gncEntryGetInvTaxable

def gncEntryGetInvTaxIncluded(entry):
    return _sw_engine.gncEntryGetInvTaxIncluded(entry)
gncEntryGetInvTaxIncluded = _sw_engine.gncEntryGetInvTaxIncluded

def gncEntryGetInvTaxTable(entry):
    return _sw_engine.gncEntryGetInvTaxTable(entry)
gncEntryGetInvTaxTable = _sw_engine.gncEntryGetInvTaxTable

def gncEntryGetBillAccount(entry):
    return _sw_engine.gncEntryGetBillAccount(entry)
gncEntryGetBillAccount = _sw_engine.gncEntryGetBillAccount

def gncEntryGetBillPrice(entry):
    return _sw_engine.gncEntryGetBillPrice(entry)
gncEntryGetBillPrice = _sw_engine.gncEntryGetBillPrice

def gncEntryGetBillTaxable(entry):
    return _sw_engine.gncEntryGetBillTaxable(entry)
gncEntryGetBillTaxable = _sw_engine.gncEntryGetBillTaxable

def gncEntryGetBillTaxIncluded(entry):
    return _sw_engine.gncEntryGetBillTaxIncluded(entry)
gncEntryGetBillTaxIncluded = _sw_engine.gncEntryGetBillTaxIncluded

def gncEntryGetBillTaxTable(entry):
    return _sw_engine.gncEntryGetBillTaxTable(entry)
gncEntryGetBillTaxTable = _sw_engine.gncEntryGetBillTaxTable

def gncEntryGetBillable(entry):
    return _sw_engine.gncEntryGetBillable(entry)
gncEntryGetBillable = _sw_engine.gncEntryGetBillable

def gncEntryGetBillTo(entry):
    return _sw_engine.gncEntryGetBillTo(entry)
gncEntryGetBillTo = _sw_engine.gncEntryGetBillTo

def gncEntryGetBillPayment(entry):
    return _sw_engine.gncEntryGetBillPayment(entry)
gncEntryGetBillPayment = _sw_engine.gncEntryGetBillPayment

def gncEntryCopy(src, dest, add_entry):
    return _sw_engine.gncEntryCopy(src, dest, add_entry)
gncEntryCopy = _sw_engine.gncEntryCopy

def gncEntryGetDocValue(entry, round, is_cust_doc, is_cn):
    return _sw_engine.gncEntryGetDocValue(entry, round, is_cust_doc, is_cn)
gncEntryGetDocValue = _sw_engine.gncEntryGetDocValue

def gncEntryGetDocTaxValue(entry, round, is_cust_doc, is_cn):
    return _sw_engine.gncEntryGetDocTaxValue(entry, round, is_cust_doc, is_cn)
gncEntryGetDocTaxValue = _sw_engine.gncEntryGetDocTaxValue

def gncEntryGetDocTaxValues(entry, is_cust_doc, is_cn):
    return _sw_engine.gncEntryGetDocTaxValues(entry, is_cust_doc, is_cn)
gncEntryGetDocTaxValues = _sw_engine.gncEntryGetDocTaxValues

def gncEntryGetDocDiscountValue(entry, round, is_cust_doc, is_cn):
    return _sw_engine.gncEntryGetDocDiscountValue(entry, round, is_cust_doc, is_cn)
gncEntryGetDocDiscountValue = _sw_engine.gncEntryGetDocDiscountValue

def gncEntryGetBalValue(entry, round, is_cust_doc):
    return _sw_engine.gncEntryGetBalValue(entry, round, is_cust_doc)
gncEntryGetBalValue = _sw_engine.gncEntryGetBalValue

def gncEntryGetBalTaxValue(entry, round, is_cust_doc):
    return _sw_engine.gncEntryGetBalTaxValue(entry, round, is_cust_doc)
gncEntryGetBalTaxValue = _sw_engine.gncEntryGetBalTaxValue

def gncEntryGetBalTaxValues(entry, is_cust_doc):
    return _sw_engine.gncEntryGetBalTaxValues(entry, is_cust_doc)
gncEntryGetBalTaxValues = _sw_engine.gncEntryGetBalTaxValues

def gncEntryGetBalDiscountValue(entry, round, is_cust_doc):
    return _sw_engine.gncEntryGetBalDiscountValue(entry, round, is_cust_doc)
gncEntryGetBalDiscountValue = _sw_engine.gncEntryGetBalDiscountValue

def gncEntryComputeValue(qty, price, tax_table, tax_included, discount, discount_type, discount_how, SCU, value, discount_value, tax_values):
    return _sw_engine.gncEntryComputeValue(qty, price, tax_table, tax_included, discount, discount_type, discount_how, SCU, value, discount_value, tax_values)
gncEntryComputeValue = _sw_engine.gncEntryComputeValue

def gncEntryGetOrder(entry):
    return _sw_engine.gncEntryGetOrder(entry)
gncEntryGetOrder = _sw_engine.gncEntryGetOrder

def gncEntryGetInvoice(entry):
    return _sw_engine.gncEntryGetInvoice(entry)
gncEntryGetInvoice = _sw_engine.gncEntryGetInvoice

def gncEntryGetBill(entry):
    return _sw_engine.gncEntryGetBill(entry)
gncEntryGetBill = _sw_engine.gncEntryGetBill

def gncEntryLookup(book, guid):
    return _sw_engine.gncEntryLookup(book, guid)
gncEntryLookup = _sw_engine.gncEntryLookup

def gncEntryIsOpen(entry):
    return _sw_engine.gncEntryIsOpen(entry)
gncEntryIsOpen = _sw_engine.gncEntryIsOpen

def gncEntryBeginEdit(entry):
    return _sw_engine.gncEntryBeginEdit(entry)
gncEntryBeginEdit = _sw_engine.gncEntryBeginEdit

def gncEntryCommitEdit(entry):
    return _sw_engine.gncEntryCommitEdit(entry)
gncEntryCommitEdit = _sw_engine.gncEntryCommitEdit

def gncEntryCompare(a, b):
    return _sw_engine.gncEntryCompare(a, b)
gncEntryCompare = _sw_engine.gncEntryCompare
ENTRY_DATE = _sw_engine.ENTRY_DATE
ENTRY_DATE_ENTERED = _sw_engine.ENTRY_DATE_ENTERED
ENTRY_DESC = _sw_engine.ENTRY_DESC
ENTRY_ACTION = _sw_engine.ENTRY_ACTION
ENTRY_NOTES = _sw_engine.ENTRY_NOTES
ENTRY_QTY = _sw_engine.ENTRY_QTY
ENTRY_IPRICE = _sw_engine.ENTRY_IPRICE
ENTRY_IACCT = _sw_engine.ENTRY_IACCT
ENTRY_BACCT = _sw_engine.ENTRY_BACCT
ENTRY_BPRICE = _sw_engine.ENTRY_BPRICE
ENTRY_BILLABLE = _sw_engine.ENTRY_BILLABLE
ENTRY_BILLTO = _sw_engine.ENTRY_BILLTO
ENTRY_ORDER = _sw_engine.ENTRY_ORDER
ENTRY_INVOICE = _sw_engine.ENTRY_INVOICE
ENTRY_BILL = _sw_engine.ENTRY_BILL
ENTRY_INV_DISC_TYPE = _sw_engine.ENTRY_INV_DISC_TYPE
ENTRY_INV_DISC_HOW = _sw_engine.ENTRY_INV_DISC_HOW
ENTRY_INV_TAXABLE = _sw_engine.ENTRY_INV_TAXABLE
ENTRY_BILL_TAXABLE = _sw_engine.ENTRY_BILL_TAXABLE
ENTRY_INV_TAX_INC = _sw_engine.ENTRY_INV_TAX_INC
ENTRY_BILL_TAX_INC = _sw_engine.ENTRY_BILL_TAX_INC
ENTRY_INV_DISCOUNT = _sw_engine.ENTRY_INV_DISCOUNT
ENTRY_BILL_PAY_TYPE = _sw_engine.ENTRY_BILL_PAY_TYPE
GNC_ID_INVOICE = _sw_engine.GNC_ID_INVOICE
GNC_INVOICE_UNDEFINED = _sw_engine.GNC_INVOICE_UNDEFINED
GNC_INVOICE_CUST_INVOICE = _sw_engine.GNC_INVOICE_CUST_INVOICE
GNC_INVOICE_VEND_INVOICE = _sw_engine.GNC_INVOICE_VEND_INVOICE
GNC_INVOICE_EMPL_INVOICE = _sw_engine.GNC_INVOICE_EMPL_INVOICE
GNC_INVOICE_CUST_CREDIT_NOTE = _sw_engine.GNC_INVOICE_CUST_CREDIT_NOTE
GNC_INVOICE_VEND_CREDIT_NOTE = _sw_engine.GNC_INVOICE_VEND_CREDIT_NOTE
GNC_INVOICE_EMPL_CREDIT_NOTE = _sw_engine.GNC_INVOICE_EMPL_CREDIT_NOTE
GNC_INVOICE_NUM_TYPES = _sw_engine.GNC_INVOICE_NUM_TYPES

def gnc_invoice_get_type():
    return _sw_engine.gnc_invoice_get_type()
gnc_invoice_get_type = _sw_engine.gnc_invoice_get_type

def gncInvoiceCreate(book):
    return _sw_engine.gncInvoiceCreate(book)
gncInvoiceCreate = _sw_engine.gncInvoiceCreate

def gncInvoiceDestroy(invoice):
    return _sw_engine.gncInvoiceDestroy(invoice)
gncInvoiceDestroy = _sw_engine.gncInvoiceDestroy

def gncInvoiceCopy(other_invoice):
    return _sw_engine.gncInvoiceCopy(other_invoice)
gncInvoiceCopy = _sw_engine.gncInvoiceCopy

def gncInvoiceSetID(invoice, id):
    return _sw_engine.gncInvoiceSetID(invoice, id)
gncInvoiceSetID = _sw_engine.gncInvoiceSetID

def gncInvoiceSetOwner(invoice, owner):
    return _sw_engine.gncInvoiceSetOwner(invoice, owner)
gncInvoiceSetOwner = _sw_engine.gncInvoiceSetOwner

def gncInvoiceSetDateOpenedGDate(invoice, date):
    return _sw_engine.gncInvoiceSetDateOpenedGDate(invoice, date)
gncInvoiceSetDateOpenedGDate = _sw_engine.gncInvoiceSetDateOpenedGDate

def gncInvoiceSetDateOpened(invoice, date):
    return _sw_engine.gncInvoiceSetDateOpened(invoice, date)
gncInvoiceSetDateOpened = _sw_engine.gncInvoiceSetDateOpened

def gncInvoiceSetDatePosted(invoice, date):
    return _sw_engine.gncInvoiceSetDatePosted(invoice, date)
gncInvoiceSetDatePosted = _sw_engine.gncInvoiceSetDatePosted

def gncInvoiceSetTerms(invoice, terms):
    return _sw_engine.gncInvoiceSetTerms(invoice, terms)
gncInvoiceSetTerms = _sw_engine.gncInvoiceSetTerms

def gncInvoiceSetBillingID(invoice, billing_id):
    return _sw_engine.gncInvoiceSetBillingID(invoice, billing_id)
gncInvoiceSetBillingID = _sw_engine.gncInvoiceSetBillingID

def gncInvoiceSetNotes(invoice, notes):
    return _sw_engine.gncInvoiceSetNotes(invoice, notes)
gncInvoiceSetNotes = _sw_engine.gncInvoiceSetNotes

def gncInvoiceSetCurrency(invoice, currency):
    return _sw_engine.gncInvoiceSetCurrency(invoice, currency)
gncInvoiceSetCurrency = _sw_engine.gncInvoiceSetCurrency

def gncInvoiceSetActive(invoice, active):
    return _sw_engine.gncInvoiceSetActive(invoice, active)
gncInvoiceSetActive = _sw_engine.gncInvoiceSetActive

def gncInvoiceSetIsCreditNote(invoice, credit_note):
    return _sw_engine.gncInvoiceSetIsCreditNote(invoice, credit_note)
gncInvoiceSetIsCreditNote = _sw_engine.gncInvoiceSetIsCreditNote

def gncInvoiceSetBillTo(invoice, billto):
    return _sw_engine.gncInvoiceSetBillTo(invoice, billto)
gncInvoiceSetBillTo = _sw_engine.gncInvoiceSetBillTo

def gncInvoiceSetToChargeAmount(invoice, amount):
    return _sw_engine.gncInvoiceSetToChargeAmount(invoice, amount)
gncInvoiceSetToChargeAmount = _sw_engine.gncInvoiceSetToChargeAmount

def gncInvoiceAddEntry(invoice, entry):
    return _sw_engine.gncInvoiceAddEntry(invoice, entry)
gncInvoiceAddEntry = _sw_engine.gncInvoiceAddEntry

def gncInvoiceRemoveEntry(invoice, entry):
    return _sw_engine.gncInvoiceRemoveEntry(invoice, entry)
gncInvoiceRemoveEntry = _sw_engine.gncInvoiceRemoveEntry

def gncInvoiceAddPrice(invoice, price):
    return _sw_engine.gncInvoiceAddPrice(invoice, price)
gncInvoiceAddPrice = _sw_engine.gncInvoiceAddPrice

def gncBillAddEntry(bill, entry):
    return _sw_engine.gncBillAddEntry(bill, entry)
gncBillAddEntry = _sw_engine.gncBillAddEntry

def gncBillRemoveEntry(bill, entry):
    return _sw_engine.gncBillRemoveEntry(bill, entry)
gncBillRemoveEntry = _sw_engine.gncBillRemoveEntry

def gncInvoiceSortEntries(invoice):
    return _sw_engine.gncInvoiceSortEntries(invoice)
gncInvoiceSortEntries = _sw_engine.gncInvoiceSortEntries

def gncInvoiceRemoveEntries(invoice):
    return _sw_engine.gncInvoiceRemoveEntries(invoice)
gncInvoiceRemoveEntries = _sw_engine.gncInvoiceRemoveEntries

def gncInvoiceGetID(invoice):
    return _sw_engine.gncInvoiceGetID(invoice)
gncInvoiceGetID = _sw_engine.gncInvoiceGetID

def gncInvoiceGetOwner(invoice):
    return _sw_engine.gncInvoiceGetOwner(invoice)
gncInvoiceGetOwner = _sw_engine.gncInvoiceGetOwner

def gncInvoiceGetDateOpened(invoice):
    return _sw_engine.gncInvoiceGetDateOpened(invoice)
gncInvoiceGetDateOpened = _sw_engine.gncInvoiceGetDateOpened

def gncInvoiceGetDatePosted(invoice):
    return _sw_engine.gncInvoiceGetDatePosted(invoice)
gncInvoiceGetDatePosted = _sw_engine.gncInvoiceGetDatePosted

def gncInvoiceGetDateDue(invoice):
    return _sw_engine.gncInvoiceGetDateDue(invoice)
gncInvoiceGetDateDue = _sw_engine.gncInvoiceGetDateDue

def gncInvoiceGetTerms(invoice):
    return _sw_engine.gncInvoiceGetTerms(invoice)
gncInvoiceGetTerms = _sw_engine.gncInvoiceGetTerms

def gncInvoiceGetBillingID(invoice):
    return _sw_engine.gncInvoiceGetBillingID(invoice)
gncInvoiceGetBillingID = _sw_engine.gncInvoiceGetBillingID

def gncInvoiceGetNotes(invoice):
    return _sw_engine.gncInvoiceGetNotes(invoice)
gncInvoiceGetNotes = _sw_engine.gncInvoiceGetNotes

def gncInvoiceGetOwnerType(invoice):
    return _sw_engine.gncInvoiceGetOwnerType(invoice)
gncInvoiceGetOwnerType = _sw_engine.gncInvoiceGetOwnerType

def gncInvoiceGetTypeListForOwnerType(type):
    return _sw_engine.gncInvoiceGetTypeListForOwnerType(type)
gncInvoiceGetTypeListForOwnerType = _sw_engine.gncInvoiceGetTypeListForOwnerType

def gncInvoiceGetType(invoice):
    return _sw_engine.gncInvoiceGetType(invoice)
gncInvoiceGetType = _sw_engine.gncInvoiceGetType

def gncInvoiceGetTypeString(invoice):
    return _sw_engine.gncInvoiceGetTypeString(invoice)
gncInvoiceGetTypeString = _sw_engine.gncInvoiceGetTypeString

def gncInvoiceGetCurrency(invoice):
    return _sw_engine.gncInvoiceGetCurrency(invoice)
gncInvoiceGetCurrency = _sw_engine.gncInvoiceGetCurrency

def gncInvoiceGetBillTo(invoice):
    return _sw_engine.gncInvoiceGetBillTo(invoice)
gncInvoiceGetBillTo = _sw_engine.gncInvoiceGetBillTo

def gncInvoiceGetToChargeAmount(invoice):
    return _sw_engine.gncInvoiceGetToChargeAmount(invoice)
gncInvoiceGetToChargeAmount = _sw_engine.gncInvoiceGetToChargeAmount

def gncInvoiceGetActive(invoice):
    return _sw_engine.gncInvoiceGetActive(invoice)
gncInvoiceGetActive = _sw_engine.gncInvoiceGetActive

def gncInvoiceGetIsCreditNote(invoice):
    return _sw_engine.gncInvoiceGetIsCreditNote(invoice)
gncInvoiceGetIsCreditNote = _sw_engine.gncInvoiceGetIsCreditNote

def gncInvoiceGetPostedLot(invoice):
    return _sw_engine.gncInvoiceGetPostedLot(invoice)
gncInvoiceGetPostedLot = _sw_engine.gncInvoiceGetPostedLot

def gncInvoiceGetPostedTxn(invoice):
    return _sw_engine.gncInvoiceGetPostedTxn(invoice)
gncInvoiceGetPostedTxn = _sw_engine.gncInvoiceGetPostedTxn

def gncInvoiceGetPostedAcc(invoice):
    return _sw_engine.gncInvoiceGetPostedAcc(invoice)
gncInvoiceGetPostedAcc = _sw_engine.gncInvoiceGetPostedAcc

def gncInvoiceGetTotal(invoice):
    return _sw_engine.gncInvoiceGetTotal(invoice)
gncInvoiceGetTotal = _sw_engine.gncInvoiceGetTotal

def gncInvoiceGetTotalOf(invoice, type):
    return _sw_engine.gncInvoiceGetTotalOf(invoice, type)
gncInvoiceGetTotalOf = _sw_engine.gncInvoiceGetTotalOf

def gncInvoiceGetTotalSubtotal(invoice):
    return _sw_engine.gncInvoiceGetTotalSubtotal(invoice)
gncInvoiceGetTotalSubtotal = _sw_engine.gncInvoiceGetTotalSubtotal

def gncInvoiceGetTotalTax(invoice):
    return _sw_engine.gncInvoiceGetTotalTax(invoice)
gncInvoiceGetTotalTax = _sw_engine.gncInvoiceGetTotalTax

def gncInvoiceGetTotalTaxList(invoice):
    return _sw_engine.gncInvoiceGetTotalTaxList(invoice)
gncInvoiceGetTotalTaxList = _sw_engine.gncInvoiceGetTotalTaxList

def gncInvoiceGetEntries(invoice):
    return _sw_engine.gncInvoiceGetEntries(invoice)
gncInvoiceGetEntries = _sw_engine.gncInvoiceGetEntries

def gncInvoiceGetPrice(invoice, commodity):
    return _sw_engine.gncInvoiceGetPrice(invoice, commodity)
gncInvoiceGetPrice = _sw_engine.gncInvoiceGetPrice

def gncInvoiceAmountPositive(invoice):
    return _sw_engine.gncInvoiceAmountPositive(invoice)
gncInvoiceAmountPositive = _sw_engine.gncInvoiceAmountPositive

def gncInvoiceGetForeignCurrencies(invoice):
    return _sw_engine.gncInvoiceGetForeignCurrencies(invoice)
gncInvoiceGetForeignCurrencies = _sw_engine.gncInvoiceGetForeignCurrencies

def gncInvoicePostToAccount(invoice, acc, posted_date, due_date, memo, accumulatesplits, autopay):
    return _sw_engine.gncInvoicePostToAccount(invoice, acc, posted_date, due_date, memo, accumulatesplits, autopay)
gncInvoicePostToAccount = _sw_engine.gncInvoicePostToAccount

def gncInvoiceUnpost(invoice, reset_tax_tables):
    return _sw_engine.gncInvoiceUnpost(invoice, reset_tax_tables)
gncInvoiceUnpost = _sw_engine.gncInvoiceUnpost

def gncInvoiceAutoApplyPayments(invoice):
    return _sw_engine.gncInvoiceAutoApplyPayments(invoice)
gncInvoiceAutoApplyPayments = _sw_engine.gncInvoiceAutoApplyPayments

def gncInvoiceApplyPayment(invoice, txn, xfer_acc, amount, exch, date, memo, num):
    return _sw_engine.gncInvoiceApplyPayment(invoice, txn, xfer_acc, amount, exch, date, memo, num)
gncInvoiceApplyPayment = _sw_engine.gncInvoiceApplyPayment

def gncInvoiceGetInvoiceFromTxn(txn):
    return _sw_engine.gncInvoiceGetInvoiceFromTxn(txn)
gncInvoiceGetInvoiceFromTxn = _sw_engine.gncInvoiceGetInvoiceFromTxn

def gncInvoiceGetInvoiceFromLot(lot):
    return _sw_engine.gncInvoiceGetInvoiceFromLot(lot)
gncInvoiceGetInvoiceFromLot = _sw_engine.gncInvoiceGetInvoiceFromLot

def gncInvoiceLookup(book, guid):
    return _sw_engine.gncInvoiceLookup(book, guid)
gncInvoiceLookup = _sw_engine.gncInvoiceLookup

def gncInvoiceBeginEdit(invoice):
    return _sw_engine.gncInvoiceBeginEdit(invoice)
gncInvoiceBeginEdit = _sw_engine.gncInvoiceBeginEdit

def gncInvoiceCommitEdit(invoice):
    return _sw_engine.gncInvoiceCommitEdit(invoice)
gncInvoiceCommitEdit = _sw_engine.gncInvoiceCommitEdit

def gncInvoiceCompare(a, b):
    return _sw_engine.gncInvoiceCompare(a, b)
gncInvoiceCompare = _sw_engine.gncInvoiceCompare

def gncInvoiceIsPosted(invoice):
    return _sw_engine.gncInvoiceIsPosted(invoice)
gncInvoiceIsPosted = _sw_engine.gncInvoiceIsPosted

def gncInvoiceIsPaid(invoice):
    return _sw_engine.gncInvoiceIsPaid(invoice)
gncInvoiceIsPaid = _sw_engine.gncInvoiceIsPaid
INVOICE_ID = _sw_engine.INVOICE_ID
INVOICE_OWNER = _sw_engine.INVOICE_OWNER
INVOICE_OPENED = _sw_engine.INVOICE_OPENED
INVOICE_POSTED = _sw_engine.INVOICE_POSTED
INVOICE_DUE = _sw_engine.INVOICE_DUE
INVOICE_IS_POSTED = _sw_engine.INVOICE_IS_POSTED
INVOICE_IS_PAID = _sw_engine.INVOICE_IS_PAID
INVOICE_TERMS = _sw_engine.INVOICE_TERMS
INVOICE_BILLINGID = _sw_engine.INVOICE_BILLINGID
INVOICE_NOTES = _sw_engine.INVOICE_NOTES
INVOICE_ACC = _sw_engine.INVOICE_ACC
INVOICE_POST_TXN = _sw_engine.INVOICE_POST_TXN
INVOICE_POST_LOT = _sw_engine.INVOICE_POST_LOT
INVOICE_IS_CN = _sw_engine.INVOICE_IS_CN
INVOICE_TYPE = _sw_engine.INVOICE_TYPE
INVOICE_TYPE_STRING = _sw_engine.INVOICE_TYPE_STRING
INVOICE_BILLTO = _sw_engine.INVOICE_BILLTO
INVOICE_ENTRIES = _sw_engine.INVOICE_ENTRIES
INVOICE_JOB = _sw_engine.INVOICE_JOB
INVOICE_FROM_LOT = _sw_engine.INVOICE_FROM_LOT
INVOICE_FROM_TXN = _sw_engine.INVOICE_FROM_TXN

def gncInvoiceGetBook(x):
    return _sw_engine.gncInvoiceGetBook(x)
gncInvoiceGetBook = _sw_engine.gncInvoiceGetBook

def gncInvoiceEqual(a, b):
    return _sw_engine.gncInvoiceEqual(a, b)
gncInvoiceEqual = _sw_engine.gncInvoiceEqual
GNC_ID_JOB = _sw_engine.GNC_ID_JOB

def gnc_job_get_type():
    return _sw_engine.gnc_job_get_type()
gnc_job_get_type = _sw_engine.gnc_job_get_type

def gncJobCreate(book):
    return _sw_engine.gncJobCreate(book)
gncJobCreate = _sw_engine.gncJobCreate

def gncJobDestroy(job):
    return _sw_engine.gncJobDestroy(job)
gncJobDestroy = _sw_engine.gncJobDestroy

def gncJobSetID(job, id):
    return _sw_engine.gncJobSetID(job, id)
gncJobSetID = _sw_engine.gncJobSetID

def gncJobSetName(job, jobname):
    return _sw_engine.gncJobSetName(job, jobname)
gncJobSetName = _sw_engine.gncJobSetName

def gncJobSetReference(job, owner_reference):
    return _sw_engine.gncJobSetReference(job, owner_reference)
gncJobSetReference = _sw_engine.gncJobSetReference

def gncJobSetRate(job, rate):
    return _sw_engine.gncJobSetRate(job, rate)
gncJobSetRate = _sw_engine.gncJobSetRate

def gncJobSetOwner(job, owner):
    return _sw_engine.gncJobSetOwner(job, owner)
gncJobSetOwner = _sw_engine.gncJobSetOwner

def gncJobSetActive(job, active):
    return _sw_engine.gncJobSetActive(job, active)
gncJobSetActive = _sw_engine.gncJobSetActive

def gncJobBeginEdit(job):
    return _sw_engine.gncJobBeginEdit(job)
gncJobBeginEdit = _sw_engine.gncJobBeginEdit

def gncJobCommitEdit(job):
    return _sw_engine.gncJobCommitEdit(job)
gncJobCommitEdit = _sw_engine.gncJobCommitEdit

def gncJobGetID(job):
    return _sw_engine.gncJobGetID(job)
gncJobGetID = _sw_engine.gncJobGetID

def gncJobGetName(job):
    return _sw_engine.gncJobGetName(job)
gncJobGetName = _sw_engine.gncJobGetName

def gncJobGetReference(job):
    return _sw_engine.gncJobGetReference(job)
gncJobGetReference = _sw_engine.gncJobGetReference

def gncJobGetRate(job):
    return _sw_engine.gncJobGetRate(job)
gncJobGetRate = _sw_engine.gncJobGetRate

def gncJobGetOwner(job):
    return _sw_engine.gncJobGetOwner(job)
gncJobGetOwner = _sw_engine.gncJobGetOwner

def gncJobGetActive(job):
    return _sw_engine.gncJobGetActive(job)
gncJobGetActive = _sw_engine.gncJobGetActive

def gncJobLookup(book, guid):
    return _sw_engine.gncJobLookup(book, guid)
gncJobLookup = _sw_engine.gncJobLookup

def gncJobCompare(a, b):
    return _sw_engine.gncJobCompare(a, b)
gncJobCompare = _sw_engine.gncJobCompare

def gncJobEqual(a, b):
    return _sw_engine.gncJobEqual(a, b)
gncJobEqual = _sw_engine.gncJobEqual
JOB_ID = _sw_engine.JOB_ID
JOB_NAME = _sw_engine.JOB_NAME
JOB_REFERENCE = _sw_engine.JOB_REFERENCE
JOB_RATE = _sw_engine.JOB_RATE
JOB_OWNER = _sw_engine.JOB_OWNER
Q_JOB_OWNER = _sw_engine.Q_JOB_OWNER
JOB_ACTIVE = _sw_engine.JOB_ACTIVE
GNC_ID_ORDER = _sw_engine.GNC_ID_ORDER

def gnc_order_get_type():
    return _sw_engine.gnc_order_get_type()
gnc_order_get_type = _sw_engine.gnc_order_get_type

def gncOrderCreate(book):
    return _sw_engine.gncOrderCreate(book)
gncOrderCreate = _sw_engine.gncOrderCreate

def gncOrderDestroy(order):
    return _sw_engine.gncOrderDestroy(order)
gncOrderDestroy = _sw_engine.gncOrderDestroy

def gncOrderSetID(order, id):
    return _sw_engine.gncOrderSetID(order, id)
gncOrderSetID = _sw_engine.gncOrderSetID

def gncOrderSetOwner(order, owner):
    return _sw_engine.gncOrderSetOwner(order, owner)
gncOrderSetOwner = _sw_engine.gncOrderSetOwner

def gncOrderSetDateOpened(order, date):
    return _sw_engine.gncOrderSetDateOpened(order, date)
gncOrderSetDateOpened = _sw_engine.gncOrderSetDateOpened

def gncOrderSetDateClosed(order, date):
    return _sw_engine.gncOrderSetDateClosed(order, date)
gncOrderSetDateClosed = _sw_engine.gncOrderSetDateClosed

def gncOrderSetNotes(order, notes):
    return _sw_engine.gncOrderSetNotes(order, notes)
gncOrderSetNotes = _sw_engine.gncOrderSetNotes

def gncOrderSetReference(order, reference):
    return _sw_engine.gncOrderSetReference(order, reference)
gncOrderSetReference = _sw_engine.gncOrderSetReference

def gncOrderSetActive(order, active):
    return _sw_engine.gncOrderSetActive(order, active)
gncOrderSetActive = _sw_engine.gncOrderSetActive

def gncOrderAddEntry(order, entry):
    return _sw_engine.gncOrderAddEntry(order, entry)
gncOrderAddEntry = _sw_engine.gncOrderAddEntry

def gncOrderRemoveEntry(order, entry):
    return _sw_engine.gncOrderRemoveEntry(order, entry)
gncOrderRemoveEntry = _sw_engine.gncOrderRemoveEntry

def gncOrderGetID(order):
    return _sw_engine.gncOrderGetID(order)
gncOrderGetID = _sw_engine.gncOrderGetID

def gncOrderGetOwner(order):
    return _sw_engine.gncOrderGetOwner(order)
gncOrderGetOwner = _sw_engine.gncOrderGetOwner

def gncOrderGetDateOpened(order):
    return _sw_engine.gncOrderGetDateOpened(order)
gncOrderGetDateOpened = _sw_engine.gncOrderGetDateOpened

def gncOrderGetDateClosed(order):
    return _sw_engine.gncOrderGetDateClosed(order)
gncOrderGetDateClosed = _sw_engine.gncOrderGetDateClosed

def gncOrderGetNotes(order):
    return _sw_engine.gncOrderGetNotes(order)
gncOrderGetNotes = _sw_engine.gncOrderGetNotes

def gncOrderGetReference(order):
    return _sw_engine.gncOrderGetReference(order)
gncOrderGetReference = _sw_engine.gncOrderGetReference

def gncOrderGetActive(order):
    return _sw_engine.gncOrderGetActive(order)
gncOrderGetActive = _sw_engine.gncOrderGetActive

def gncOrderGetEntries(order):
    return _sw_engine.gncOrderGetEntries(order)
gncOrderGetEntries = _sw_engine.gncOrderGetEntries

def gncOrderBeginEdit(order):
    return _sw_engine.gncOrderBeginEdit(order)
gncOrderBeginEdit = _sw_engine.gncOrderBeginEdit

def gncOrderCommitEdit(order):
    return _sw_engine.gncOrderCommitEdit(order)
gncOrderCommitEdit = _sw_engine.gncOrderCommitEdit

def gncOrderCompare(a, b):
    return _sw_engine.gncOrderCompare(a, b)
gncOrderCompare = _sw_engine.gncOrderCompare

def gncOrderIsClosed(order):
    return _sw_engine.gncOrderIsClosed(order)
gncOrderIsClosed = _sw_engine.gncOrderIsClosed

def gncOrderLookup(book, guid):
    return _sw_engine.gncOrderLookup(book, guid)
gncOrderLookup = _sw_engine.gncOrderLookup
ORDER_ID = _sw_engine.ORDER_ID
ORDER_REFERENCE = _sw_engine.ORDER_REFERENCE
ORDER_OWNER = _sw_engine.ORDER_OWNER
ORDER_OPENED = _sw_engine.ORDER_OPENED
ORDER_CLOSED = _sw_engine.ORDER_CLOSED
ORDER_IS_CLOSED = _sw_engine.ORDER_IS_CLOSED
ORDER_NOTES = _sw_engine.ORDER_NOTES
GNC_ID_OWNER = _sw_engine.GNC_ID_OWNER
GNC_OWNER_NONE = _sw_engine.GNC_OWNER_NONE
GNC_OWNER_UNDEFINED = _sw_engine.GNC_OWNER_UNDEFINED
GNC_OWNER_CUSTOMER = _sw_engine.GNC_OWNER_CUSTOMER
GNC_OWNER_JOB = _sw_engine.GNC_OWNER_JOB
GNC_OWNER_VENDOR = _sw_engine.GNC_OWNER_VENDOR
GNC_OWNER_EMPLOYEE = _sw_engine.GNC_OWNER_EMPLOYEE

def qofOwnerGetType(owner):
    return _sw_engine.qofOwnerGetType(owner)
qofOwnerGetType = _sw_engine.qofOwnerGetType

def qofOwnerGetOwner(owner):
    return _sw_engine.qofOwnerGetOwner(owner)
qofOwnerGetOwner = _sw_engine.qofOwnerGetOwner

def qofOwnerSetEntity(owner, ent):
    return _sw_engine.qofOwnerSetEntity(owner, ent)
qofOwnerSetEntity = _sw_engine.qofOwnerSetEntity

def GNC_IS_OWNER(ent):
    return _sw_engine.GNC_IS_OWNER(ent)
GNC_IS_OWNER = _sw_engine.GNC_IS_OWNER

def gncOwnerTypeToQofIdType(t):
    return _sw_engine.gncOwnerTypeToQofIdType(t)
gncOwnerTypeToQofIdType = _sw_engine.gncOwnerTypeToQofIdType

def gncOwnerRegister():
    return _sw_engine.gncOwnerRegister()
gncOwnerRegister = _sw_engine.gncOwnerRegister

def gncOwnerInitUndefined(owner, obj):
    return _sw_engine.gncOwnerInitUndefined(owner, obj)
gncOwnerInitUndefined = _sw_engine.gncOwnerInitUndefined

def gncOwnerInitCustomer(owner, customer):
    return _sw_engine.gncOwnerInitCustomer(owner, customer)
gncOwnerInitCustomer = _sw_engine.gncOwnerInitCustomer

def gncOwnerInitJob(owner, job):
    return _sw_engine.gncOwnerInitJob(owner, job)
gncOwnerInitJob = _sw_engine.gncOwnerInitJob

def gncOwnerInitVendor(owner, vendor):
    return _sw_engine.gncOwnerInitVendor(owner, vendor)
gncOwnerInitVendor = _sw_engine.gncOwnerInitVendor

def gncOwnerInitEmployee(owner, employee):
    return _sw_engine.gncOwnerInitEmployee(owner, employee)
gncOwnerInitEmployee = _sw_engine.gncOwnerInitEmployee

def gncOwnerGetType(owner):
    return _sw_engine.gncOwnerGetType(owner)
gncOwnerGetType = _sw_engine.gncOwnerGetType

def gncOwnerIsValid(owner):
    return _sw_engine.gncOwnerIsValid(owner)
gncOwnerIsValid = _sw_engine.gncOwnerIsValid

def gncOwnerGetUndefined(owner):
    return _sw_engine.gncOwnerGetUndefined(owner)
gncOwnerGetUndefined = _sw_engine.gncOwnerGetUndefined

def gncOwnerGetCustomer(owner):
    return _sw_engine.gncOwnerGetCustomer(owner)
gncOwnerGetCustomer = _sw_engine.gncOwnerGetCustomer

def gncOwnerGetJob(owner):
    return _sw_engine.gncOwnerGetJob(owner)
gncOwnerGetJob = _sw_engine.gncOwnerGetJob

def gncOwnerGetVendor(owner):
    return _sw_engine.gncOwnerGetVendor(owner)
gncOwnerGetVendor = _sw_engine.gncOwnerGetVendor

def gncOwnerGetEmployee(owner):
    return _sw_engine.gncOwnerGetEmployee(owner)
gncOwnerGetEmployee = _sw_engine.gncOwnerGetEmployee

def gncOwnerGetID(owner):
    return _sw_engine.gncOwnerGetID(owner)
gncOwnerGetID = _sw_engine.gncOwnerGetID

def gncOwnerGetName(owner):
    return _sw_engine.gncOwnerGetName(owner)
gncOwnerGetName = _sw_engine.gncOwnerGetName

def gncOwnerGetAddr(owner):
    return _sw_engine.gncOwnerGetAddr(owner)
gncOwnerGetAddr = _sw_engine.gncOwnerGetAddr

def gncOwnerGetActive(owner):
    return _sw_engine.gncOwnerGetActive(owner)
gncOwnerGetActive = _sw_engine.gncOwnerGetActive

def gncOwnerGetCurrency(owner):
    return _sw_engine.gncOwnerGetCurrency(owner)
gncOwnerGetCurrency = _sw_engine.gncOwnerGetCurrency

def gncOwnerSetActive(owner, active):
    return _sw_engine.gncOwnerSetActive(owner, active)
gncOwnerSetActive = _sw_engine.gncOwnerSetActive

def gncOwnerCopy(src, dest):
    return _sw_engine.gncOwnerCopy(src, dest)
gncOwnerCopy = _sw_engine.gncOwnerCopy

def gncOwnerEqual(a, b):
    return _sw_engine.gncOwnerEqual(a, b)
gncOwnerEqual = _sw_engine.gncOwnerEqual

def gncOwnerGCompareFunc(a, b):
    return _sw_engine.gncOwnerGCompareFunc(a, b)
gncOwnerGCompareFunc = _sw_engine.gncOwnerGCompareFunc

def gncOwnerCompare(a, b):
    return _sw_engine.gncOwnerCompare(a, b)
gncOwnerCompare = _sw_engine.gncOwnerCompare

def gncOwnerGetGUID(owner):
    return _sw_engine.gncOwnerGetGUID(owner)
gncOwnerGetGUID = _sw_engine.gncOwnerGetGUID

def gncOwnerReturnGUID(owner):
    return _sw_engine.gncOwnerReturnGUID(owner)
gncOwnerReturnGUID = _sw_engine.gncOwnerReturnGUID

def gncOwnerGetEndOwner(owner):
    return _sw_engine.gncOwnerGetEndOwner(owner)
gncOwnerGetEndOwner = _sw_engine.gncOwnerGetEndOwner

def gncOwnerGetEndGUID(owner):
    return _sw_engine.gncOwnerGetEndGUID(owner)
gncOwnerGetEndGUID = _sw_engine.gncOwnerGetEndGUID

def gncOwnerAttachToLot(owner, lot):
    return _sw_engine.gncOwnerAttachToLot(owner, lot)
gncOwnerAttachToLot = _sw_engine.gncOwnerAttachToLot

def gncOwnerLotMatchOwnerFunc(lot, user_data):
    return _sw_engine.gncOwnerLotMatchOwnerFunc(lot, user_data)
gncOwnerLotMatchOwnerFunc = _sw_engine.gncOwnerLotMatchOwnerFunc

def gncOwnerLotsSortFunc(lotA, lotB):
    return _sw_engine.gncOwnerLotsSortFunc(lotA, lotB)
gncOwnerLotsSortFunc = _sw_engine.gncOwnerLotsSortFunc

def gncOwnerGetOwnerFromLot(lot, owner):
    return _sw_engine.gncOwnerGetOwnerFromLot(lot, owner)
gncOwnerGetOwnerFromLot = _sw_engine.gncOwnerGetOwnerFromLot

def gncOwnerGetOwnerFromTxn(txn, owner):
    return _sw_engine.gncOwnerGetOwnerFromTxn(txn, owner)
gncOwnerGetOwnerFromTxn = _sw_engine.gncOwnerGetOwnerFromTxn

def gncOwnerGetOwnerFromTypeGuid(book, owner, type, guid):
    return _sw_engine.gncOwnerGetOwnerFromTypeGuid(book, owner, type, guid)
gncOwnerGetOwnerFromTypeGuid = _sw_engine.gncOwnerGetOwnerFromTypeGuid

def gncOwnerCreatePaymentLot(owner, preset_txn, posted_acc, xfer_acc, amount, exch, date, memo, num):
    return _sw_engine.gncOwnerCreatePaymentLot(owner, preset_txn, posted_acc, xfer_acc, amount, exch, date, memo, num)
gncOwnerCreatePaymentLot = _sw_engine.gncOwnerCreatePaymentLot

def gncOwnerAutoApplyPaymentsWithLots(owner, lots):
    return _sw_engine.gncOwnerAutoApplyPaymentsWithLots(owner, lots)
gncOwnerAutoApplyPaymentsWithLots = _sw_engine.gncOwnerAutoApplyPaymentsWithLots

def gncOwnerApplyPayment(owner, preset_txn, lots, posted_acc, xfer_acc, amount, exch, date, memo, num, auto_pay):
    return _sw_engine.gncOwnerApplyPayment(owner, preset_txn, lots, posted_acc, xfer_acc, amount, exch, date, memo, num, auto_pay)
gncOwnerApplyPayment = _sw_engine.gncOwnerApplyPayment

def gncOwnerFindOffsettingSplit(pay_lot, target_value):
    return _sw_engine.gncOwnerFindOffsettingSplit(pay_lot, target_value)
gncOwnerFindOffsettingSplit = _sw_engine.gncOwnerFindOffsettingSplit

def gncOwnerReduceSplitTo(split, target_value):
    return _sw_engine.gncOwnerReduceSplitTo(split, target_value)
gncOwnerReduceSplitTo = _sw_engine.gncOwnerReduceSplitTo

def gncOwnerSetLotLinkMemo(ll_txn):
    return _sw_engine.gncOwnerSetLotLinkMemo(ll_txn)
gncOwnerSetLotLinkMemo = _sw_engine.gncOwnerSetLotLinkMemo

def gncOwnerGetAccountTypesList(owner):
    return _sw_engine.gncOwnerGetAccountTypesList(owner)
gncOwnerGetAccountTypesList = _sw_engine.gncOwnerGetAccountTypesList

def gncOwnerGetCommoditiesList(owner):
    return _sw_engine.gncOwnerGetCommoditiesList(owner)
gncOwnerGetCommoditiesList = _sw_engine.gncOwnerGetCommoditiesList

def gncOwnerGetBalanceInCurrency(owner, report_currency):
    return _sw_engine.gncOwnerGetBalanceInCurrency(owner, report_currency)
gncOwnerGetBalanceInCurrency = _sw_engine.gncOwnerGetBalanceInCurrency
OWNER_TYPE = _sw_engine.OWNER_TYPE
OWNER_TYPE_STRING = _sw_engine.OWNER_TYPE_STRING
OWNER_CUSTOMER = _sw_engine.OWNER_CUSTOMER
OWNER_JOB = _sw_engine.OWNER_JOB
OWNER_VENDOR = _sw_engine.OWNER_VENDOR
OWNER_EMPLOYEE = _sw_engine.OWNER_EMPLOYEE
OWNER_PARENT = _sw_engine.OWNER_PARENT
OWNER_PARENTG = _sw_engine.OWNER_PARENTG
OWNER_NAME = _sw_engine.OWNER_NAME
OWNER_FROM_LOT = _sw_engine.OWNER_FROM_LOT

def gncOwnerNew():
    return _sw_engine.gncOwnerNew()
gncOwnerNew = _sw_engine.gncOwnerNew

def gncOwnerFree(owner):
    return _sw_engine.gncOwnerFree(owner)
gncOwnerFree = _sw_engine.gncOwnerFree

def gncOwnerBeginEdit(owner):
    return _sw_engine.gncOwnerBeginEdit(owner)
gncOwnerBeginEdit = _sw_engine.gncOwnerBeginEdit

def gncOwnerCommitEdit(owner):
    return _sw_engine.gncOwnerCommitEdit(owner)
gncOwnerCommitEdit = _sw_engine.gncOwnerCommitEdit

def gncOwnerDestroy(owner):
    return _sw_engine.gncOwnerDestroy(owner)
gncOwnerDestroy = _sw_engine.gncOwnerDestroy
GNC_ID_TAXTABLE = _sw_engine.GNC_ID_TAXTABLE

def gnc_taxtable_get_type():
    return _sw_engine.gnc_taxtable_get_type()
gnc_taxtable_get_type = _sw_engine.gnc_taxtable_get_type
GNC_AMT_TYPE_VALUE = _sw_engine.GNC_AMT_TYPE_VALUE
GNC_AMT_TYPE_PERCENT = _sw_engine.GNC_AMT_TYPE_PERCENT
GNC_TAXINCLUDED_YES = _sw_engine.GNC_TAXINCLUDED_YES
GNC_TAXINCLUDED_NO = _sw_engine.GNC_TAXINCLUDED_NO
GNC_TAXINCLUDED_USEGLOBAL = _sw_engine.GNC_TAXINCLUDED_USEGLOBAL

def gncAmountTypeToString(type):
    return _sw_engine.gncAmountTypeToString(type)
gncAmountTypeToString = _sw_engine.gncAmountTypeToString

def gncAmountStringToType(str, type):
    return _sw_engine.gncAmountStringToType(str, type)
gncAmountStringToType = _sw_engine.gncAmountStringToType

def gncTaxIncludedTypeToString(type):
    return _sw_engine.gncTaxIncludedTypeToString(type)
gncTaxIncludedTypeToString = _sw_engine.gncTaxIncludedTypeToString

def gncTaxIncludedStringToType(str, type):
    return _sw_engine.gncTaxIncludedStringToType(str, type)
gncTaxIncludedStringToType = _sw_engine.gncTaxIncludedStringToType

def gncTaxTableCreate(book):
    return _sw_engine.gncTaxTableCreate(book)
gncTaxTableCreate = _sw_engine.gncTaxTableCreate

def gncTaxTableDestroy(table):
    return _sw_engine.gncTaxTableDestroy(table)
gncTaxTableDestroy = _sw_engine.gncTaxTableDestroy

def gncTaxTableEntryCreate():
    return _sw_engine.gncTaxTableEntryCreate()
gncTaxTableEntryCreate = _sw_engine.gncTaxTableEntryCreate

def gncTaxTableEntryDestroy(entry):
    return _sw_engine.gncTaxTableEntryDestroy(entry)
gncTaxTableEntryDestroy = _sw_engine.gncTaxTableEntryDestroy

def gncTaxTableSetName(table, name):
    return _sw_engine.gncTaxTableSetName(table, name)
gncTaxTableSetName = _sw_engine.gncTaxTableSetName

def gncTaxTableIncRef(table):
    return _sw_engine.gncTaxTableIncRef(table)
gncTaxTableIncRef = _sw_engine.gncTaxTableIncRef

def gncTaxTableDecRef(table):
    return _sw_engine.gncTaxTableDecRef(table)
gncTaxTableDecRef = _sw_engine.gncTaxTableDecRef

def gncTaxTableEntrySetAccount(entry, account):
    return _sw_engine.gncTaxTableEntrySetAccount(entry, account)
gncTaxTableEntrySetAccount = _sw_engine.gncTaxTableEntrySetAccount

def gncTaxTableEntrySetType(entry, type):
    return _sw_engine.gncTaxTableEntrySetType(entry, type)
gncTaxTableEntrySetType = _sw_engine.gncTaxTableEntrySetType

def gncTaxTableEntrySetAmount(entry, amount):
    return _sw_engine.gncTaxTableEntrySetAmount(entry, amount)
gncTaxTableEntrySetAmount = _sw_engine.gncTaxTableEntrySetAmount

def gncTaxTableAddEntry(table, entry):
    return _sw_engine.gncTaxTableAddEntry(table, entry)
gncTaxTableAddEntry = _sw_engine.gncTaxTableAddEntry

def gncTaxTableRemoveEntry(table, entry):
    return _sw_engine.gncTaxTableRemoveEntry(table, entry)
gncTaxTableRemoveEntry = _sw_engine.gncTaxTableRemoveEntry

def gncTaxTableChanged(table):
    return _sw_engine.gncTaxTableChanged(table)
gncTaxTableChanged = _sw_engine.gncTaxTableChanged

def gncTaxTableBeginEdit(table):
    return _sw_engine.gncTaxTableBeginEdit(table)
gncTaxTableBeginEdit = _sw_engine.gncTaxTableBeginEdit

def gncTaxTableCommitEdit(table):
    return _sw_engine.gncTaxTableCommitEdit(table)
gncTaxTableCommitEdit = _sw_engine.gncTaxTableCommitEdit

def gncTaxTableEqual(a, b):
    return _sw_engine.gncTaxTableEqual(a, b)
gncTaxTableEqual = _sw_engine.gncTaxTableEqual

def gncTaxTableLookup(book, guid):
    return _sw_engine.gncTaxTableLookup(book, guid)
gncTaxTableLookup = _sw_engine.gncTaxTableLookup

def gncTaxTableLookupByName(book, name):
    return _sw_engine.gncTaxTableLookupByName(book, name)
gncTaxTableLookupByName = _sw_engine.gncTaxTableLookupByName

def gncTaxTableGetTables(book):
    return _sw_engine.gncTaxTableGetTables(book)
gncTaxTableGetTables = _sw_engine.gncTaxTableGetTables

def gncTaxTableGetName(table):
    return _sw_engine.gncTaxTableGetName(table)
gncTaxTableGetName = _sw_engine.gncTaxTableGetName

def gncTaxTableGetParent(table):
    return _sw_engine.gncTaxTableGetParent(table)
gncTaxTableGetParent = _sw_engine.gncTaxTableGetParent

def gncTaxTableReturnChild(table, make_new):
    return _sw_engine.gncTaxTableReturnChild(table, make_new)
gncTaxTableReturnChild = _sw_engine.gncTaxTableReturnChild

def gncTaxTableGetEntries(table):
    return _sw_engine.gncTaxTableGetEntries(table)
gncTaxTableGetEntries = _sw_engine.gncTaxTableGetEntries

def gncTaxTableGetRefcount(table):
    return _sw_engine.gncTaxTableGetRefcount(table)
gncTaxTableGetRefcount = _sw_engine.gncTaxTableGetRefcount

def gncTaxTableLastModified(table):
    return _sw_engine.gncTaxTableLastModified(table)
gncTaxTableLastModified = _sw_engine.gncTaxTableLastModified

def gncTaxTableEntryGetAccount(entry):
    return _sw_engine.gncTaxTableEntryGetAccount(entry)
gncTaxTableEntryGetAccount = _sw_engine.gncTaxTableEntryGetAccount

def gncTaxTableEntryGetType(entry):
    return _sw_engine.gncTaxTableEntryGetType(entry)
gncTaxTableEntryGetType = _sw_engine.gncTaxTableEntryGetType

def gncTaxTableEntryGetAmount(entry):
    return _sw_engine.gncTaxTableEntryGetAmount(entry)
gncTaxTableEntryGetAmount = _sw_engine.gncTaxTableEntryGetAmount

def gncTaxTableCompare(a, b):
    return _sw_engine.gncTaxTableCompare(a, b)
gncTaxTableCompare = _sw_engine.gncTaxTableCompare

def gncTaxTableEntryCompare(a, b):
    return _sw_engine.gncTaxTableEntryCompare(a, b)
gncTaxTableEntryCompare = _sw_engine.gncTaxTableEntryCompare

def gncTaxTableEntryEqual(a, b):
    return _sw_engine.gncTaxTableEntryEqual(a, b)
gncTaxTableEntryEqual = _sw_engine.gncTaxTableEntryEqual
class _gncAccountValue(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _gncAccountValue, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _gncAccountValue, name)
    __repr__ = _swig_repr
    __swig_setmethods__["account"] = _sw_engine._gncAccountValue_account_set
    __swig_getmethods__["account"] = _sw_engine._gncAccountValue_account_get
    if _newclass:
        account = _swig_property(_sw_engine._gncAccountValue_account_get, _sw_engine._gncAccountValue_account_set)
    __swig_setmethods__["value"] = _sw_engine._gncAccountValue_value_set
    __swig_getmethods__["value"] = _sw_engine._gncAccountValue_value_get
    if _newclass:
        value = _swig_property(_sw_engine._gncAccountValue_value_get, _sw_engine._gncAccountValue_value_set)

    def __init__(self):
        this = _sw_engine.new__gncAccountValue()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_engine.delete__gncAccountValue
    __del__ = lambda self: None
_gncAccountValue_swigregister = _sw_engine._gncAccountValue_swigregister
_gncAccountValue_swigregister(_gncAccountValue)


def gncAccountValueAdd(list, acc, value):
    return _sw_engine.gncAccountValueAdd(list, acc, value)
gncAccountValueAdd = _sw_engine.gncAccountValueAdd

def gncAccountValueAddList(l1, l2):
    return _sw_engine.gncAccountValueAddList(l1, l2)
gncAccountValueAddList = _sw_engine.gncAccountValueAddList

def gncAccountValueTotal(list):
    return _sw_engine.gncAccountValueTotal(list)
gncAccountValueTotal = _sw_engine.gncAccountValueTotal

def gncAccountValueDestroy(list):
    return _sw_engine.gncAccountValueDestroy(list)
gncAccountValueDestroy = _sw_engine.gncAccountValueDestroy
GNC_TT_NAME = _sw_engine.GNC_TT_NAME
GNC_TT_REFCOUNT = _sw_engine.GNC_TT_REFCOUNT
GNC_ID_VENDOR = _sw_engine.GNC_ID_VENDOR

def gnc_vendor_get_type():
    return _sw_engine.gnc_vendor_get_type()
gnc_vendor_get_type = _sw_engine.gnc_vendor_get_type

def gncVendorCreate(book):
    return _sw_engine.gncVendorCreate(book)
gncVendorCreate = _sw_engine.gncVendorCreate

def gncVendorDestroy(vendor):
    return _sw_engine.gncVendorDestroy(vendor)
gncVendorDestroy = _sw_engine.gncVendorDestroy

def gncVendorSetID(vendor, id):
    return _sw_engine.gncVendorSetID(vendor, id)
gncVendorSetID = _sw_engine.gncVendorSetID

def gncVendorSetName(vendor, name):
    return _sw_engine.gncVendorSetName(vendor, name)
gncVendorSetName = _sw_engine.gncVendorSetName

def gncVendorSetNotes(vendor, notes):
    return _sw_engine.gncVendorSetNotes(vendor, notes)
gncVendorSetNotes = _sw_engine.gncVendorSetNotes

def gncVendorSetTerms(vendor, terms):
    return _sw_engine.gncVendorSetTerms(vendor, terms)
gncVendorSetTerms = _sw_engine.gncVendorSetTerms

def gncVendorSetTaxIncluded(vendor, taxincl):
    return _sw_engine.gncVendorSetTaxIncluded(vendor, taxincl)
gncVendorSetTaxIncluded = _sw_engine.gncVendorSetTaxIncluded

def gncVendorSetCurrency(vendor, currency):
    return _sw_engine.gncVendorSetCurrency(vendor, currency)
gncVendorSetCurrency = _sw_engine.gncVendorSetCurrency

def gncVendorSetActive(vendor, active):
    return _sw_engine.gncVendorSetActive(vendor, active)
gncVendorSetActive = _sw_engine.gncVendorSetActive

def gncVendorSetTaxTableOverride(vendor, override):
    return _sw_engine.gncVendorSetTaxTableOverride(vendor, override)
gncVendorSetTaxTableOverride = _sw_engine.gncVendorSetTaxTableOverride

def gncVendorSetTaxTable(vendor, table):
    return _sw_engine.gncVendorSetTaxTable(vendor, table)
gncVendorSetTaxTable = _sw_engine.gncVendorSetTaxTable

def gncVendorAddJob(vendor, job):
    return _sw_engine.gncVendorAddJob(vendor, job)
gncVendorAddJob = _sw_engine.gncVendorAddJob

def gncVendorRemoveJob(vendor, job):
    return _sw_engine.gncVendorRemoveJob(vendor, job)
gncVendorRemoveJob = _sw_engine.gncVendorRemoveJob

def gncVendorBeginEdit(vendor):
    return _sw_engine.gncVendorBeginEdit(vendor)
gncVendorBeginEdit = _sw_engine.gncVendorBeginEdit

def gncVendorCommitEdit(vendor):
    return _sw_engine.gncVendorCommitEdit(vendor)
gncVendorCommitEdit = _sw_engine.gncVendorCommitEdit

def gncVendorGetID(vendor):
    return _sw_engine.gncVendorGetID(vendor)
gncVendorGetID = _sw_engine.gncVendorGetID

def gncVendorGetName(vendor):
    return _sw_engine.gncVendorGetName(vendor)
gncVendorGetName = _sw_engine.gncVendorGetName

def gncVendorGetAddr(vendor):
    return _sw_engine.gncVendorGetAddr(vendor)
gncVendorGetAddr = _sw_engine.gncVendorGetAddr

def gncVendorGetNotes(vendor):
    return _sw_engine.gncVendorGetNotes(vendor)
gncVendorGetNotes = _sw_engine.gncVendorGetNotes

def gncVendorGetTerms(vendor):
    return _sw_engine.gncVendorGetTerms(vendor)
gncVendorGetTerms = _sw_engine.gncVendorGetTerms

def gncVendorGetTaxIncluded(vendor):
    return _sw_engine.gncVendorGetTaxIncluded(vendor)
gncVendorGetTaxIncluded = _sw_engine.gncVendorGetTaxIncluded

def gncVendorGetCurrency(vendor):
    return _sw_engine.gncVendorGetCurrency(vendor)
gncVendorGetCurrency = _sw_engine.gncVendorGetCurrency

def gncVendorGetActive(vendor):
    return _sw_engine.gncVendorGetActive(vendor)
gncVendorGetActive = _sw_engine.gncVendorGetActive

def gncVendorGetTaxTableOverride(vendor):
    return _sw_engine.gncVendorGetTaxTableOverride(vendor)
gncVendorGetTaxTableOverride = _sw_engine.gncVendorGetTaxTableOverride

def gncVendorGetTaxTable(vendor):
    return _sw_engine.gncVendorGetTaxTable(vendor)
gncVendorGetTaxTable = _sw_engine.gncVendorGetTaxTable

def gncVendorCompare(a, b):
    return _sw_engine.gncVendorCompare(a, b)
gncVendorCompare = _sw_engine.gncVendorCompare

def gncVendorLookup(book, guid):
    return _sw_engine.gncVendorLookup(book, guid)
gncVendorLookup = _sw_engine.gncVendorLookup
VENDOR_ID = _sw_engine.VENDOR_ID
VENDOR_NAME = _sw_engine.VENDOR_NAME
VENDOR_ADDR = _sw_engine.VENDOR_ADDR
VENDOR_NOTES = _sw_engine.VENDOR_NOTES
VENDOR_TERMS = _sw_engine.VENDOR_TERMS
VENDOR_TAX_INC = _sw_engine.VENDOR_TAX_INC
VENDOR_ACTIVE = _sw_engine.VENDOR_ACTIVE
VENDOR_TAX_OVERRIDE = _sw_engine.VENDOR_TAX_OVERRIDE
VENDOR_TAX_TABLE = _sw_engine.VENDOR_TAX_TABLE

def gncVendorEqual(a, b):
    return _sw_engine.gncVendorEqual(a, b)
gncVendorEqual = _sw_engine.gncVendorEqual

def gncVendorIsDirty(vendor):
    return _sw_engine.gncVendorIsDirty(vendor)
gncVendorIsDirty = _sw_engine.gncVendorIsDirty
URL_TYPE_CUSTOMER = _sw_engine.URL_TYPE_CUSTOMER
URL_TYPE_VENDOR = _sw_engine.URL_TYPE_VENDOR
URL_TYPE_EMPLOYEE = _sw_engine.URL_TYPE_EMPLOYEE
URL_TYPE_JOB = _sw_engine.URL_TYPE_JOB
URL_TYPE_INVOICE = _sw_engine.URL_TYPE_INVOICE
URL_TYPE_OWNERREPORT = _sw_engine.URL_TYPE_OWNERREPORT

def qof_query_create_for_invoices():
    return _sw_engine.qof_query_create_for_invoices()
qof_query_create_for_invoices = _sw_engine.qof_query_create_for_invoices

def qof_query_run_for_invoices(q):
    return _sw_engine.qof_query_run_for_invoices(q)
qof_query_run_for_invoices = _sw_engine.qof_query_run_for_invoices
# This file is compatible with both classic and new-style classes.



<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="GncGUID" version="0.1"/>
  <include name="KvpFrame" version="1.0"/>
  <namespace name="QofInstance"
             version="0.1"
             shared-library="/opt/local/lib/libgnc-qof.1.dylib"
             c:identifier-prefixes="Qof"
             c:symbol-prefixes="qof">
    <alias name="IdType" c:type="QofIdType">
      <type name="gpointer" c:type="gpointer"/>
    </alias>
    <alias name="IdTypeConst" c:type="QofIdTypeConst">
      <type name="gpointer" c:type="gpointer"/>
    </alias>
    <alias name="LogModule" c:type="QofLogModule">
      <type name="gpointer" c:type="gpointer"/>
    </alias>
    <class name="Instance"
           c:symbol-prefix="instance"
           c:type="QofInstance"
           parent="GObject.Object"
           glib:type-name="QofInstance"
           glib:get-type="qof_instance_get_type"
           glib:type-struct="InstanceClass">
    </class>
    <record name="InstanceClass"
            c:type="QofInstanceClass"
            glib:is-gtype-struct-for="Instance">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_display_name">
        <callback name="get_display_name">
          <return-value transfer-ownership="full">
            <doc xml:space="preserve">A name</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="inst" transfer-ownership="none">
              <doc xml:space="preserve">A #QofInstance
 Returns a displayable name for this object.  The returned string must be freed by the caller.</doc>
              <type name="Instance" c:type="const QofInstance*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="refers_to_object">
        <callback name="refers_to_object">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="inst" transfer-ownership="none">
              <doc xml:space="preserve">A #QofInstance</doc>
              <type name="Instance" c:type="const QofInstance*"/>
            </parameter>
            <parameter name="ref" transfer-ownership="none">
              <doc xml:space="preserve">A #QofInstance
 Does this object refer to a specific object</doc>
              <type name="Instance" c:type="const QofInstance*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_typed_referring_object_list">
        <callback name="get_typed_referring_object_list">
          <return-value transfer-ownership="container">
            <doc xml:space="preserve">A #GList of objects
 again - are elements really GObjects??</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="GObject.Object"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="inst" transfer-ownership="none">
              <doc xml:space="preserve">A #QofInstance</doc>
              <type name="Instance" c:type="const QofInstance*"/>
            </parameter>
            <parameter name="ref" transfer-ownership="none">
              <doc xml:space="preserve">A #QofInstance
 Returns a list of my type of object which refers to an object.  For example, when called as
        qof_instance_get_typed_referring_object_list(taxtable, account);
    it will return the list of taxtables which refer to a specific account.  The result should be the
    same regardless of which taxtable object is used.  The list must be freed by the caller but the
    objects on the list must not.</doc>
              <type name="Instance" c:type="const QofInstance*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
  </namespace>
</repository>

# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_sw_gnome_utils')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_sw_gnome_utils')
    _sw_gnome_utils = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_sw_gnome_utils', [dirname(__file__)])
        except ImportError:
            import _sw_gnome_utils
            return _sw_gnome_utils
        try:
            _mod = imp.load_module('_sw_gnome_utils', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _sw_gnome_utils = swig_import_helper()
    del swig_import_helper
else:
    import _sw_gnome_utils
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def gnc_options_dialog_new(title, parent):
    return _sw_gnome_utils.gnc_options_dialog_new(title, parent)
gnc_options_dialog_new = _sw_gnome_utils.gnc_options_dialog_new

def gnc_options_dialog_destroy(win):
    return _sw_gnome_utils.gnc_options_dialog_destroy(win)
gnc_options_dialog_destroy = _sw_gnome_utils.gnc_options_dialog_destroy

def gnc_options_dialog_build_contents(propertybox, odb):
    return _sw_gnome_utils.gnc_options_dialog_build_contents(propertybox, odb)
gnc_options_dialog_build_contents = _sw_gnome_utils.gnc_options_dialog_build_contents

def gnc_option_get_gtk_widget(option):
    return _sw_gnome_utils.gnc_option_get_gtk_widget(option)
gnc_option_get_gtk_widget = _sw_gnome_utils.gnc_option_get_gtk_widget

def gnc_options_dialog_new_modal(modal, title, component_class, parent):
    return _sw_gnome_utils.gnc_options_dialog_new_modal(modal, title, component_class, parent)
gnc_options_dialog_new_modal = _sw_gnome_utils.gnc_options_dialog_new_modal

def gnc_options_dialog_new_w_dialog(title, dialog):
    return _sw_gnome_utils.gnc_options_dialog_new_w_dialog(title, dialog)
gnc_options_dialog_new_w_dialog = _sw_gnome_utils.gnc_options_dialog_new_w_dialog

def gnc_options_register_stocks():
    return _sw_gnome_utils.gnc_options_register_stocks()
gnc_options_register_stocks = _sw_gnome_utils.gnc_options_register_stocks

def gnc_options_dialog_widget(win):
    return _sw_gnome_utils.gnc_options_dialog_widget(win)
gnc_options_dialog_widget = _sw_gnome_utils.gnc_options_dialog_widget

def gnc_options_page_list(win):
    return _sw_gnome_utils.gnc_options_page_list(win)
gnc_options_page_list = _sw_gnome_utils.gnc_options_page_list

def gnc_options_dialog_notebook(win):
    return _sw_gnome_utils.gnc_options_dialog_notebook(win)
gnc_options_dialog_notebook = _sw_gnome_utils.gnc_options_dialog_notebook

def gnc_options_dialog_changed(win):
    return _sw_gnome_utils.gnc_options_dialog_changed(win)
gnc_options_dialog_changed = _sw_gnome_utils.gnc_options_dialog_changed

def gnc_option_changed_widget_cb(widget, option):
    return _sw_gnome_utils.gnc_option_changed_widget_cb(widget, option)
gnc_option_changed_widget_cb = _sw_gnome_utils.gnc_option_changed_widget_cb

def gnc_option_changed_option_cb(dummy, option):
    return _sw_gnome_utils.gnc_option_changed_option_cb(dummy, option)
gnc_option_changed_option_cb = _sw_gnome_utils.gnc_option_changed_option_cb

def gnc_options_dialog_set_apply_cb(win, thunk, cb_data):
    return _sw_gnome_utils.gnc_options_dialog_set_apply_cb(win, thunk, cb_data)
gnc_options_dialog_set_apply_cb = _sw_gnome_utils.gnc_options_dialog_set_apply_cb

def gnc_options_dialog_set_help_cb(win, thunk, cb_data):
    return _sw_gnome_utils.gnc_options_dialog_set_help_cb(win, thunk, cb_data)
gnc_options_dialog_set_help_cb = _sw_gnome_utils.gnc_options_dialog_set_help_cb

def gnc_options_dialog_set_close_cb(win, thunk, cb_data):
    return _sw_gnome_utils.gnc_options_dialog_set_close_cb(win, thunk, cb_data)
gnc_options_dialog_set_close_cb = _sw_gnome_utils.gnc_options_dialog_set_close_cb

def gnc_options_dialog_set_global_help_cb(thunk, cb_data):
    return _sw_gnome_utils.gnc_options_dialog_set_global_help_cb(thunk, cb_data)
gnc_options_dialog_set_global_help_cb = _sw_gnome_utils.gnc_options_dialog_set_global_help_cb

def gnc_options_dialog_build_contents_full(win, odb, show_dialog):
    return _sw_gnome_utils.gnc_options_dialog_build_contents_full(win, odb, show_dialog)
gnc_options_dialog_build_contents_full = _sw_gnome_utils.gnc_options_dialog_build_contents_full

def gnc_options_dialog_set_scm_callbacks(win, apply_cb, close_cb):
    return _sw_gnome_utils.gnc_options_dialog_set_scm_callbacks(win, apply_cb, close_cb)
gnc_options_dialog_set_scm_callbacks = _sw_gnome_utils.gnc_options_dialog_set_scm_callbacks
class GNCOptionDef_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GNCOptionDef_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GNCOptionDef_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["option_name"] = _sw_gnome_utils.GNCOptionDef_t_option_name_set
    __swig_getmethods__["option_name"] = _sw_gnome_utils.GNCOptionDef_t_option_name_get
    if _newclass:
        option_name = _swig_property(_sw_gnome_utils.GNCOptionDef_t_option_name_get, _sw_gnome_utils.GNCOptionDef_t_option_name_set)
    __swig_setmethods__["set_widget"] = _sw_gnome_utils.GNCOptionDef_t_set_widget_set
    __swig_getmethods__["set_widget"] = _sw_gnome_utils.GNCOptionDef_t_set_widget_get
    if _newclass:
        set_widget = _swig_property(_sw_gnome_utils.GNCOptionDef_t_set_widget_get, _sw_gnome_utils.GNCOptionDef_t_set_widget_set)
    __swig_setmethods__["set_value"] = _sw_gnome_utils.GNCOptionDef_t_set_value_set
    __swig_getmethods__["set_value"] = _sw_gnome_utils.GNCOptionDef_t_set_value_get
    if _newclass:
        set_value = _swig_property(_sw_gnome_utils.GNCOptionDef_t_set_value_get, _sw_gnome_utils.GNCOptionDef_t_set_value_set)
    __swig_setmethods__["get_value"] = _sw_gnome_utils.GNCOptionDef_t_get_value_set
    __swig_getmethods__["get_value"] = _sw_gnome_utils.GNCOptionDef_t_get_value_get
    if _newclass:
        get_value = _swig_property(_sw_gnome_utils.GNCOptionDef_t_get_value_get, _sw_gnome_utils.GNCOptionDef_t_get_value_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GNCOptionDef_t()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GNCOptionDef_t
    __del__ = lambda self: None
GNCOptionDef_t_swigregister = _sw_gnome_utils.GNCOptionDef_t_swigregister
GNCOptionDef_t_swigregister(GNCOptionDef_t)


def gnc_options_ui_initialize():
    return _sw_gnome_utils.gnc_options_ui_initialize()
gnc_options_ui_initialize = _sw_gnome_utils.gnc_options_ui_initialize

def gnc_options_ui_register_option(option):
    return _sw_gnome_utils.gnc_options_ui_register_option(option)
gnc_options_ui_register_option = _sw_gnome_utils.gnc_options_ui_register_option

def gnc_options_ui_get_option(option_name):
    return _sw_gnome_utils.gnc_options_ui_get_option(option_name)
gnc_options_ui_get_option = _sw_gnome_utils.gnc_options_ui_get_option
PLUGIN_PAGE_IMMUTABLE = _sw_gnome_utils.PLUGIN_PAGE_IMMUTABLE
class GncMainWindow(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncMainWindow, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncMainWindow, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gtk_window"] = _sw_gnome_utils.GncMainWindow_gtk_window_set
    __swig_getmethods__["gtk_window"] = _sw_gnome_utils.GncMainWindow_gtk_window_get
    if _newclass:
        gtk_window = _swig_property(_sw_gnome_utils.GncMainWindow_gtk_window_get, _sw_gnome_utils.GncMainWindow_gtk_window_set)
    __swig_setmethods__["ui_merge"] = _sw_gnome_utils.GncMainWindow_ui_merge_set
    __swig_getmethods__["ui_merge"] = _sw_gnome_utils.GncMainWindow_ui_merge_get
    if _newclass:
        ui_merge = _swig_property(_sw_gnome_utils.GncMainWindow_ui_merge_get, _sw_gnome_utils.GncMainWindow_ui_merge_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncMainWindow()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncMainWindow
    __del__ = lambda self: None
GncMainWindow_swigregister = _sw_gnome_utils.GncMainWindow_swigregister
GncMainWindow_swigregister(GncMainWindow)

class GncMainWindowClass(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncMainWindowClass, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncMainWindowClass, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gtk_window"] = _sw_gnome_utils.GncMainWindowClass_gtk_window_set
    __swig_getmethods__["gtk_window"] = _sw_gnome_utils.GncMainWindowClass_gtk_window_get
    if _newclass:
        gtk_window = _swig_property(_sw_gnome_utils.GncMainWindowClass_gtk_window_get, _sw_gnome_utils.GncMainWindowClass_gtk_window_set)
    __swig_setmethods__["page_added"] = _sw_gnome_utils.GncMainWindowClass_page_added_set
    __swig_getmethods__["page_added"] = _sw_gnome_utils.GncMainWindowClass_page_added_get
    if _newclass:
        page_added = _swig_property(_sw_gnome_utils.GncMainWindowClass_page_added_get, _sw_gnome_utils.GncMainWindowClass_page_added_set)
    __swig_setmethods__["page_changed"] = _sw_gnome_utils.GncMainWindowClass_page_changed_set
    __swig_getmethods__["page_changed"] = _sw_gnome_utils.GncMainWindowClass_page_changed_get
    if _newclass:
        page_changed = _swig_property(_sw_gnome_utils.GncMainWindowClass_page_changed_get, _sw_gnome_utils.GncMainWindowClass_page_changed_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncMainWindowClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncMainWindowClass
    __del__ = lambda self: None
GncMainWindowClass_swigregister = _sw_gnome_utils.GncMainWindowClass_swigregister
GncMainWindowClass_swigregister(GncMainWindowClass)

class GncMainWindowActionData(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncMainWindowActionData, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncMainWindowActionData, name)
    __repr__ = _swig_repr
    __swig_setmethods__["window"] = _sw_gnome_utils.GncMainWindowActionData_window_set
    __swig_getmethods__["window"] = _sw_gnome_utils.GncMainWindowActionData_window_get
    if _newclass:
        window = _swig_property(_sw_gnome_utils.GncMainWindowActionData_window_get, _sw_gnome_utils.GncMainWindowActionData_window_set)
    __swig_setmethods__["data"] = _sw_gnome_utils.GncMainWindowActionData_data_set
    __swig_getmethods__["data"] = _sw_gnome_utils.GncMainWindowActionData_data_get
    if _newclass:
        data = _swig_property(_sw_gnome_utils.GncMainWindowActionData_data_get, _sw_gnome_utils.GncMainWindowActionData_data_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncMainWindowActionData()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncMainWindowActionData
    __del__ = lambda self: None
GncMainWindowActionData_swigregister = _sw_gnome_utils.GncMainWindowActionData_swigregister
GncMainWindowActionData_swigregister(GncMainWindowActionData)


def gnc_main_window_get_type():
    return _sw_gnome_utils.gnc_main_window_get_type()
gnc_main_window_get_type = _sw_gnome_utils.gnc_main_window_get_type

def gnc_main_window_new():
    return _sw_gnome_utils.gnc_main_window_new()
gnc_main_window_new = _sw_gnome_utils.gnc_main_window_new

def gnc_main_window_display_page(page):
    return _sw_gnome_utils.gnc_main_window_display_page(page)
gnc_main_window_display_page = _sw_gnome_utils.gnc_main_window_display_page

def gnc_main_window_open_page(window, page):
    return _sw_gnome_utils.gnc_main_window_open_page(window, page)
gnc_main_window_open_page = _sw_gnome_utils.gnc_main_window_open_page

def gnc_main_window_close_page(page):
    return _sw_gnome_utils.gnc_main_window_close_page(page)
gnc_main_window_close_page = _sw_gnome_utils.gnc_main_window_close_page

def gnc_main_window_foreach_page(fn, user_data):
    return _sw_gnome_utils.gnc_main_window_foreach_page(fn, user_data)
gnc_main_window_foreach_page = _sw_gnome_utils.gnc_main_window_foreach_page

def gnc_main_window_get_current_page(window):
    return _sw_gnome_utils.gnc_main_window_get_current_page(window)
gnc_main_window_get_current_page = _sw_gnome_utils.gnc_main_window_get_current_page

def gnc_main_window_get_uimanager(window):
    return _sw_gnome_utils.gnc_main_window_get_uimanager(window)
gnc_main_window_get_uimanager = _sw_gnome_utils.gnc_main_window_get_uimanager

def main_window_update_page_name(page, name_in):
    return _sw_gnome_utils.main_window_update_page_name(page, name_in)
main_window_update_page_name = _sw_gnome_utils.main_window_update_page_name

def main_window_update_page_color(page, color_in):
    return _sw_gnome_utils.main_window_update_page_color(page, color_in)
main_window_update_page_color = _sw_gnome_utils.main_window_update_page_color

def gnc_main_window_manual_merge_actions(window, group_name, group, merge_id):
    return _sw_gnome_utils.gnc_main_window_manual_merge_actions(window, group_name, group, merge_id)
gnc_main_window_manual_merge_actions = _sw_gnome_utils.gnc_main_window_manual_merge_actions

def gnc_main_window_merge_actions(window, group_name, entries, n_entries, toggle_entries, n_toggle_entries, filename, user_data):
    return _sw_gnome_utils.gnc_main_window_merge_actions(window, group_name, entries, n_entries, toggle_entries, n_toggle_entries, filename, user_data)
gnc_main_window_merge_actions = _sw_gnome_utils.gnc_main_window_merge_actions

def gnc_main_window_unmerge_actions(window, group_name):
    return _sw_gnome_utils.gnc_main_window_unmerge_actions(window, group_name)
gnc_main_window_unmerge_actions = _sw_gnome_utils.gnc_main_window_unmerge_actions

def gnc_main_window_actions_updated(window):
    return _sw_gnome_utils.gnc_main_window_actions_updated(window)
gnc_main_window_actions_updated = _sw_gnome_utils.gnc_main_window_actions_updated

def gnc_main_window_get_action_group(window, group_name):
    return _sw_gnome_utils.gnc_main_window_get_action_group(window, group_name)
gnc_main_window_get_action_group = _sw_gnome_utils.gnc_main_window_get_action_group

def gnc_main_window_set_progressbar_window(window):
    return _sw_gnome_utils.gnc_main_window_set_progressbar_window(window)
gnc_main_window_set_progressbar_window = _sw_gnome_utils.gnc_main_window_set_progressbar_window

def gnc_main_window_button_press_cb(whatever, event, page):
    return _sw_gnome_utils.gnc_main_window_button_press_cb(whatever, event, page)
gnc_main_window_button_press_cb = _sw_gnome_utils.gnc_main_window_button_press_cb

def gnc_main_window_popup_menu_cb(widget, page):
    return _sw_gnome_utils.gnc_main_window_popup_menu_cb(widget, page)
gnc_main_window_popup_menu_cb = _sw_gnome_utils.gnc_main_window_popup_menu_cb

def gnc_main_window_restore_all_windows(keyfile):
    return _sw_gnome_utils.gnc_main_window_restore_all_windows(keyfile)
gnc_main_window_restore_all_windows = _sw_gnome_utils.gnc_main_window_restore_all_windows

def gnc_main_window_save_all_windows(keyfile):
    return _sw_gnome_utils.gnc_main_window_save_all_windows(keyfile)
gnc_main_window_save_all_windows = _sw_gnome_utils.gnc_main_window_save_all_windows

def gnc_main_window_restore_default_state(window):
    return _sw_gnome_utils.gnc_main_window_restore_default_state(window)
gnc_main_window_restore_default_state = _sw_gnome_utils.gnc_main_window_restore_default_state

def gnc_gtk_action_group_set_translation_domain(action_group, domain):
    return _sw_gnome_utils.gnc_gtk_action_group_set_translation_domain(action_group, domain)
gnc_gtk_action_group_set_translation_domain = _sw_gnome_utils.gnc_gtk_action_group_set_translation_domain

def gnc_main_window_finish_pending(window):
    return _sw_gnome_utils.gnc_main_window_finish_pending(window)
gnc_main_window_finish_pending = _sw_gnome_utils.gnc_main_window_finish_pending

def gnc_main_window_all_finish_pending():
    return _sw_gnome_utils.gnc_main_window_all_finish_pending()
gnc_main_window_all_finish_pending = _sw_gnome_utils.gnc_main_window_all_finish_pending

def gnc_main_window_all_action_set_sensitive(action_name, sensitive):
    return _sw_gnome_utils.gnc_main_window_all_action_set_sensitive(action_name, sensitive)
gnc_main_window_all_action_set_sensitive = _sw_gnome_utils.gnc_main_window_all_action_set_sensitive

def gnc_main_window_find_action(window, name):
    return _sw_gnome_utils.gnc_main_window_find_action(window, name)
gnc_main_window_find_action = _sw_gnome_utils.gnc_main_window_find_action

def gnc_main_window_show_all_windows():
    return _sw_gnome_utils.gnc_main_window_show_all_windows()
gnc_main_window_show_all_windows = _sw_gnome_utils.gnc_main_window_show_all_windows

def gnc_book_options_dialog_cb(modal, title, parent):
    return _sw_gnome_utils.gnc_book_options_dialog_cb(modal, title, parent)
gnc_book_options_dialog_cb = _sw_gnome_utils.gnc_book_options_dialog_cb

def gnc_book_options_dialog_apply_helper(options):
    return _sw_gnome_utils.gnc_book_options_dialog_apply_helper(options)
gnc_book_options_dialog_apply_helper = _sw_gnome_utils.gnc_book_options_dialog_apply_helper
GNC_PLUGIN_NAME = _sw_gnome_utils.GNC_PLUGIN_NAME
class GncPlugin(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncPlugin, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncPlugin, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gobject"] = _sw_gnome_utils.GncPlugin_gobject_set
    __swig_getmethods__["gobject"] = _sw_gnome_utils.GncPlugin_gobject_get
    if _newclass:
        gobject = _swig_property(_sw_gnome_utils.GncPlugin_gobject_get, _sw_gnome_utils.GncPlugin_gobject_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncPlugin()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncPlugin
    __del__ = lambda self: None
GncPlugin_swigregister = _sw_gnome_utils.GncPlugin_swigregister
GncPlugin_swigregister(GncPlugin)

class GncPluginClass(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncPluginClass, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncPluginClass, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gobject"] = _sw_gnome_utils.GncPluginClass_gobject_set
    __swig_getmethods__["gobject"] = _sw_gnome_utils.GncPluginClass_gobject_get
    if _newclass:
        gobject = _swig_property(_sw_gnome_utils.GncPluginClass_gobject_get, _sw_gnome_utils.GncPluginClass_gobject_set)
    __swig_setmethods__["plugin_name"] = _sw_gnome_utils.GncPluginClass_plugin_name_set
    __swig_getmethods__["plugin_name"] = _sw_gnome_utils.GncPluginClass_plugin_name_get
    if _newclass:
        plugin_name = _swig_property(_sw_gnome_utils.GncPluginClass_plugin_name_get, _sw_gnome_utils.GncPluginClass_plugin_name_set)
    __swig_setmethods__["actions_name"] = _sw_gnome_utils.GncPluginClass_actions_name_set
    __swig_getmethods__["actions_name"] = _sw_gnome_utils.GncPluginClass_actions_name_get
    if _newclass:
        actions_name = _swig_property(_sw_gnome_utils.GncPluginClass_actions_name_get, _sw_gnome_utils.GncPluginClass_actions_name_set)
    __swig_setmethods__["actions"] = _sw_gnome_utils.GncPluginClass_actions_set
    __swig_getmethods__["actions"] = _sw_gnome_utils.GncPluginClass_actions_get
    if _newclass:
        actions = _swig_property(_sw_gnome_utils.GncPluginClass_actions_get, _sw_gnome_utils.GncPluginClass_actions_set)
    __swig_setmethods__["n_actions"] = _sw_gnome_utils.GncPluginClass_n_actions_set
    __swig_getmethods__["n_actions"] = _sw_gnome_utils.GncPluginClass_n_actions_get
    if _newclass:
        n_actions = _swig_property(_sw_gnome_utils.GncPluginClass_n_actions_get, _sw_gnome_utils.GncPluginClass_n_actions_set)
    __swig_setmethods__["toggle_actions"] = _sw_gnome_utils.GncPluginClass_toggle_actions_set
    __swig_getmethods__["toggle_actions"] = _sw_gnome_utils.GncPluginClass_toggle_actions_get
    if _newclass:
        toggle_actions = _swig_property(_sw_gnome_utils.GncPluginClass_toggle_actions_get, _sw_gnome_utils.GncPluginClass_toggle_actions_set)
    __swig_setmethods__["n_toggle_actions"] = _sw_gnome_utils.GncPluginClass_n_toggle_actions_set
    __swig_getmethods__["n_toggle_actions"] = _sw_gnome_utils.GncPluginClass_n_toggle_actions_get
    if _newclass:
        n_toggle_actions = _swig_property(_sw_gnome_utils.GncPluginClass_n_toggle_actions_get, _sw_gnome_utils.GncPluginClass_n_toggle_actions_set)
    __swig_setmethods__["important_actions"] = _sw_gnome_utils.GncPluginClass_important_actions_set
    __swig_getmethods__["important_actions"] = _sw_gnome_utils.GncPluginClass_important_actions_get
    if _newclass:
        important_actions = _swig_property(_sw_gnome_utils.GncPluginClass_important_actions_get, _sw_gnome_utils.GncPluginClass_important_actions_set)
    __swig_setmethods__["ui_filename"] = _sw_gnome_utils.GncPluginClass_ui_filename_set
    __swig_getmethods__["ui_filename"] = _sw_gnome_utils.GncPluginClass_ui_filename_get
    if _newclass:
        ui_filename = _swig_property(_sw_gnome_utils.GncPluginClass_ui_filename_get, _sw_gnome_utils.GncPluginClass_ui_filename_set)
    __swig_setmethods__["add_to_window"] = _sw_gnome_utils.GncPluginClass_add_to_window_set
    __swig_getmethods__["add_to_window"] = _sw_gnome_utils.GncPluginClass_add_to_window_get
    if _newclass:
        add_to_window = _swig_property(_sw_gnome_utils.GncPluginClass_add_to_window_get, _sw_gnome_utils.GncPluginClass_add_to_window_set)
    __swig_setmethods__["remove_from_window"] = _sw_gnome_utils.GncPluginClass_remove_from_window_set
    __swig_getmethods__["remove_from_window"] = _sw_gnome_utils.GncPluginClass_remove_from_window_get
    if _newclass:
        remove_from_window = _swig_property(_sw_gnome_utils.GncPluginClass_remove_from_window_get, _sw_gnome_utils.GncPluginClass_remove_from_window_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncPluginClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncPluginClass
    __del__ = lambda self: None
GncPluginClass_swigregister = _sw_gnome_utils.GncPluginClass_swigregister
GncPluginClass_swigregister(GncPluginClass)


def gnc_plugin_get_type():
    return _sw_gnome_utils.gnc_plugin_get_type()
gnc_plugin_get_type = _sw_gnome_utils.gnc_plugin_get_type

def gnc_plugin_add_to_window(plugin, window, type):
    return _sw_gnome_utils.gnc_plugin_add_to_window(plugin, window, type)
gnc_plugin_add_to_window = _sw_gnome_utils.gnc_plugin_add_to_window

def gnc_plugin_remove_from_window(plugin, window, type):
    return _sw_gnome_utils.gnc_plugin_remove_from_window(plugin, window, type)
gnc_plugin_remove_from_window = _sw_gnome_utils.gnc_plugin_remove_from_window

def gnc_plugin_get_name(plugin):
    return _sw_gnome_utils.gnc_plugin_get_name(plugin)
gnc_plugin_get_name = _sw_gnome_utils.gnc_plugin_get_name
class action_toolbar_labels(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, action_toolbar_labels, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, action_toolbar_labels, name)
    __repr__ = _swig_repr
    __swig_setmethods__["action_name"] = _sw_gnome_utils.action_toolbar_labels_action_name_set
    __swig_getmethods__["action_name"] = _sw_gnome_utils.action_toolbar_labels_action_name_get
    if _newclass:
        action_name = _swig_property(_sw_gnome_utils.action_toolbar_labels_action_name_get, _sw_gnome_utils.action_toolbar_labels_action_name_set)
    __swig_setmethods__["label"] = _sw_gnome_utils.action_toolbar_labels_label_set
    __swig_getmethods__["label"] = _sw_gnome_utils.action_toolbar_labels_label_get
    if _newclass:
        label = _swig_property(_sw_gnome_utils.action_toolbar_labels_label_get, _sw_gnome_utils.action_toolbar_labels_label_set)

    def __init__(self):
        this = _sw_gnome_utils.new_action_toolbar_labels()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_action_toolbar_labels
    __del__ = lambda self: None
action_toolbar_labels_swigregister = _sw_gnome_utils.action_toolbar_labels_swigregister
action_toolbar_labels_swigregister(action_toolbar_labels)


def gnc_plugin_init_short_names(action_group, toolbar_labels):
    return _sw_gnome_utils.gnc_plugin_init_short_names(action_group, toolbar_labels)
gnc_plugin_init_short_names = _sw_gnome_utils.gnc_plugin_init_short_names

def gnc_plugin_set_important_actions(action_group, names):
    return _sw_gnome_utils.gnc_plugin_set_important_actions(action_group, names)
gnc_plugin_set_important_actions = _sw_gnome_utils.gnc_plugin_set_important_actions

def gnc_plugin_update_actions(action_group, action_names, property_name, value):
    return _sw_gnome_utils.gnc_plugin_update_actions(action_group, action_names, property_name, value)
gnc_plugin_update_actions = _sw_gnome_utils.gnc_plugin_update_actions

def gnc_plugin_add_actions(ui_merge, action_group, filename):
    return _sw_gnome_utils.gnc_plugin_add_actions(ui_merge, action_group, filename)
gnc_plugin_add_actions = _sw_gnome_utils.gnc_plugin_add_actions
GNC_PREF_SUMMARYBAR_POSITION_TOP = _sw_gnome_utils.GNC_PREF_SUMMARYBAR_POSITION_TOP
GNC_PREF_SUMMARYBAR_POSITION_BOTTOM = _sw_gnome_utils.GNC_PREF_SUMMARYBAR_POSITION_BOTTOM
class GncPluginPage(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncPluginPage, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncPluginPage, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gobject"] = _sw_gnome_utils.GncPluginPage_gobject_set
    __swig_getmethods__["gobject"] = _sw_gnome_utils.GncPluginPage_gobject_get
    if _newclass:
        gobject = _swig_property(_sw_gnome_utils.GncPluginPage_gobject_get, _sw_gnome_utils.GncPluginPage_gobject_set)
    __swig_setmethods__["window"] = _sw_gnome_utils.GncPluginPage_window_set
    __swig_getmethods__["window"] = _sw_gnome_utils.GncPluginPage_window_get
    if _newclass:
        window = _swig_property(_sw_gnome_utils.GncPluginPage_window_get, _sw_gnome_utils.GncPluginPage_window_set)
    __swig_setmethods__["notebook_page"] = _sw_gnome_utils.GncPluginPage_notebook_page_set
    __swig_getmethods__["notebook_page"] = _sw_gnome_utils.GncPluginPage_notebook_page_get
    if _newclass:
        notebook_page = _swig_property(_sw_gnome_utils.GncPluginPage_notebook_page_get, _sw_gnome_utils.GncPluginPage_notebook_page_set)
    __swig_setmethods__["summarybar"] = _sw_gnome_utils.GncPluginPage_summarybar_set
    __swig_getmethods__["summarybar"] = _sw_gnome_utils.GncPluginPage_summarybar_get
    if _newclass:
        summarybar = _swig_property(_sw_gnome_utils.GncPluginPage_summarybar_get, _sw_gnome_utils.GncPluginPage_summarybar_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncPluginPage()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncPluginPage
    __del__ = lambda self: None
GncPluginPage_swigregister = _sw_gnome_utils.GncPluginPage_swigregister
GncPluginPage_swigregister(GncPluginPage)

class GncPluginPageClass(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncPluginPageClass, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncPluginPageClass, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gobject"] = _sw_gnome_utils.GncPluginPageClass_gobject_set
    __swig_getmethods__["gobject"] = _sw_gnome_utils.GncPluginPageClass_gobject_get
    if _newclass:
        gobject = _swig_property(_sw_gnome_utils.GncPluginPageClass_gobject_get, _sw_gnome_utils.GncPluginPageClass_gobject_set)
    __swig_setmethods__["tab_icon"] = _sw_gnome_utils.GncPluginPageClass_tab_icon_set
    __swig_getmethods__["tab_icon"] = _sw_gnome_utils.GncPluginPageClass_tab_icon_get
    if _newclass:
        tab_icon = _swig_property(_sw_gnome_utils.GncPluginPageClass_tab_icon_get, _sw_gnome_utils.GncPluginPageClass_tab_icon_set)
    __swig_setmethods__["plugin_name"] = _sw_gnome_utils.GncPluginPageClass_plugin_name_set
    __swig_getmethods__["plugin_name"] = _sw_gnome_utils.GncPluginPageClass_plugin_name_get
    if _newclass:
        plugin_name = _swig_property(_sw_gnome_utils.GncPluginPageClass_plugin_name_get, _sw_gnome_utils.GncPluginPageClass_plugin_name_set)
    __swig_setmethods__["inserted"] = _sw_gnome_utils.GncPluginPageClass_inserted_set
    __swig_getmethods__["inserted"] = _sw_gnome_utils.GncPluginPageClass_inserted_get
    if _newclass:
        inserted = _swig_property(_sw_gnome_utils.GncPluginPageClass_inserted_get, _sw_gnome_utils.GncPluginPageClass_inserted_set)
    __swig_setmethods__["removed"] = _sw_gnome_utils.GncPluginPageClass_removed_set
    __swig_getmethods__["removed"] = _sw_gnome_utils.GncPluginPageClass_removed_get
    if _newclass:
        removed = _swig_property(_sw_gnome_utils.GncPluginPageClass_removed_get, _sw_gnome_utils.GncPluginPageClass_removed_set)
    __swig_setmethods__["selected"] = _sw_gnome_utils.GncPluginPageClass_selected_set
    __swig_getmethods__["selected"] = _sw_gnome_utils.GncPluginPageClass_selected_get
    if _newclass:
        selected = _swig_property(_sw_gnome_utils.GncPluginPageClass_selected_get, _sw_gnome_utils.GncPluginPageClass_selected_set)
    __swig_setmethods__["unselected"] = _sw_gnome_utils.GncPluginPageClass_unselected_set
    __swig_getmethods__["unselected"] = _sw_gnome_utils.GncPluginPageClass_unselected_get
    if _newclass:
        unselected = _swig_property(_sw_gnome_utils.GncPluginPageClass_unselected_get, _sw_gnome_utils.GncPluginPageClass_unselected_set)
    __swig_setmethods__["create_widget"] = _sw_gnome_utils.GncPluginPageClass_create_widget_set
    __swig_getmethods__["create_widget"] = _sw_gnome_utils.GncPluginPageClass_create_widget_get
    if _newclass:
        create_widget = _swig_property(_sw_gnome_utils.GncPluginPageClass_create_widget_get, _sw_gnome_utils.GncPluginPageClass_create_widget_set)
    __swig_setmethods__["destroy_widget"] = _sw_gnome_utils.GncPluginPageClass_destroy_widget_set
    __swig_getmethods__["destroy_widget"] = _sw_gnome_utils.GncPluginPageClass_destroy_widget_get
    if _newclass:
        destroy_widget = _swig_property(_sw_gnome_utils.GncPluginPageClass_destroy_widget_get, _sw_gnome_utils.GncPluginPageClass_destroy_widget_set)
    __swig_setmethods__["save_page"] = _sw_gnome_utils.GncPluginPageClass_save_page_set
    __swig_getmethods__["save_page"] = _sw_gnome_utils.GncPluginPageClass_save_page_get
    if _newclass:
        save_page = _swig_property(_sw_gnome_utils.GncPluginPageClass_save_page_get, _sw_gnome_utils.GncPluginPageClass_save_page_set)
    __swig_setmethods__["recreate_page"] = _sw_gnome_utils.GncPluginPageClass_recreate_page_set
    __swig_getmethods__["recreate_page"] = _sw_gnome_utils.GncPluginPageClass_recreate_page_get
    if _newclass:
        recreate_page = _swig_property(_sw_gnome_utils.GncPluginPageClass_recreate_page_get, _sw_gnome_utils.GncPluginPageClass_recreate_page_set)
    __swig_setmethods__["window_changed"] = _sw_gnome_utils.GncPluginPageClass_window_changed_set
    __swig_getmethods__["window_changed"] = _sw_gnome_utils.GncPluginPageClass_window_changed_get
    if _newclass:
        window_changed = _swig_property(_sw_gnome_utils.GncPluginPageClass_window_changed_get, _sw_gnome_utils.GncPluginPageClass_window_changed_set)
    __swig_setmethods__["page_name_changed"] = _sw_gnome_utils.GncPluginPageClass_page_name_changed_set
    __swig_getmethods__["page_name_changed"] = _sw_gnome_utils.GncPluginPageClass_page_name_changed_get
    if _newclass:
        page_name_changed = _swig_property(_sw_gnome_utils.GncPluginPageClass_page_name_changed_get, _sw_gnome_utils.GncPluginPageClass_page_name_changed_set)
    __swig_setmethods__["update_edit_menu_actions"] = _sw_gnome_utils.GncPluginPageClass_update_edit_menu_actions_set
    __swig_getmethods__["update_edit_menu_actions"] = _sw_gnome_utils.GncPluginPageClass_update_edit_menu_actions_get
    if _newclass:
        update_edit_menu_actions = _swig_property(_sw_gnome_utils.GncPluginPageClass_update_edit_menu_actions_get, _sw_gnome_utils.GncPluginPageClass_update_edit_menu_actions_set)
    __swig_setmethods__["finish_pending"] = _sw_gnome_utils.GncPluginPageClass_finish_pending_set
    __swig_getmethods__["finish_pending"] = _sw_gnome_utils.GncPluginPageClass_finish_pending_get
    if _newclass:
        finish_pending = _swig_property(_sw_gnome_utils.GncPluginPageClass_finish_pending_get, _sw_gnome_utils.GncPluginPageClass_finish_pending_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncPluginPageClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncPluginPageClass
    __del__ = lambda self: None
GncPluginPageClass_swigregister = _sw_gnome_utils.GncPluginPageClass_swigregister
GncPluginPageClass_swigregister(GncPluginPageClass)


def gnc_plugin_page_get_type():
    return _sw_gnome_utils.gnc_plugin_page_get_type()
gnc_plugin_page_get_type = _sw_gnome_utils.gnc_plugin_page_get_type

def gnc_plugin_page_create_widget(plugin_page):
    return _sw_gnome_utils.gnc_plugin_page_create_widget(plugin_page)
gnc_plugin_page_create_widget = _sw_gnome_utils.gnc_plugin_page_create_widget

def gnc_plugin_page_destroy_widget(plugin_page):
    return _sw_gnome_utils.gnc_plugin_page_destroy_widget(plugin_page)
gnc_plugin_page_destroy_widget = _sw_gnome_utils.gnc_plugin_page_destroy_widget

def gnc_plugin_page_show_summarybar(page, visible):
    return _sw_gnome_utils.gnc_plugin_page_show_summarybar(page, visible)
gnc_plugin_page_show_summarybar = _sw_gnome_utils.gnc_plugin_page_show_summarybar

def gnc_plugin_page_save_page(page, key_file, group_name):
    return _sw_gnome_utils.gnc_plugin_page_save_page(page, key_file, group_name)
gnc_plugin_page_save_page = _sw_gnome_utils.gnc_plugin_page_save_page

def gnc_plugin_page_recreate_page(window, page_type, key_file, group_name):
    return _sw_gnome_utils.gnc_plugin_page_recreate_page(window, page_type, key_file, group_name)
gnc_plugin_page_recreate_page = _sw_gnome_utils.gnc_plugin_page_recreate_page

def gnc_plugin_page_merge_actions(plugin_page, merge):
    return _sw_gnome_utils.gnc_plugin_page_merge_actions(plugin_page, merge)
gnc_plugin_page_merge_actions = _sw_gnome_utils.gnc_plugin_page_merge_actions

def gnc_plugin_page_unmerge_actions(plugin_page, merge):
    return _sw_gnome_utils.gnc_plugin_page_unmerge_actions(plugin_page, merge)
gnc_plugin_page_unmerge_actions = _sw_gnome_utils.gnc_plugin_page_unmerge_actions

def gnc_plugin_page_get_plugin_name(plugin_page):
    return _sw_gnome_utils.gnc_plugin_page_get_plugin_name(plugin_page)
gnc_plugin_page_get_plugin_name = _sw_gnome_utils.gnc_plugin_page_get_plugin_name

def gnc_plugin_page_add_book(page, book):
    return _sw_gnome_utils.gnc_plugin_page_add_book(page, book)
gnc_plugin_page_add_book = _sw_gnome_utils.gnc_plugin_page_add_book

def gnc_plugin_page_has_book(page, book):
    return _sw_gnome_utils.gnc_plugin_page_has_book(page, book)
gnc_plugin_page_has_book = _sw_gnome_utils.gnc_plugin_page_has_book

def gnc_plugin_page_has_books(page):
    return _sw_gnome_utils.gnc_plugin_page_has_books(page)
gnc_plugin_page_has_books = _sw_gnome_utils.gnc_plugin_page_has_books

def gnc_plugin_page_get_window(page):
    return _sw_gnome_utils.gnc_plugin_page_get_window(page)
gnc_plugin_page_get_window = _sw_gnome_utils.gnc_plugin_page_get_window

def gnc_plugin_page_get_page_name(page):
    return _sw_gnome_utils.gnc_plugin_page_get_page_name(page)
gnc_plugin_page_get_page_name = _sw_gnome_utils.gnc_plugin_page_get_page_name

def gnc_plugin_page_set_page_name(page, name):
    return _sw_gnome_utils.gnc_plugin_page_set_page_name(page, name)
gnc_plugin_page_set_page_name = _sw_gnome_utils.gnc_plugin_page_set_page_name

def gnc_plugin_page_get_page_long_name(page):
    return _sw_gnome_utils.gnc_plugin_page_get_page_long_name(page)
gnc_plugin_page_get_page_long_name = _sw_gnome_utils.gnc_plugin_page_get_page_long_name

def gnc_plugin_page_set_page_long_name(page, name):
    return _sw_gnome_utils.gnc_plugin_page_set_page_long_name(page, name)
gnc_plugin_page_set_page_long_name = _sw_gnome_utils.gnc_plugin_page_set_page_long_name

def gnc_plugin_page_get_page_color(page):
    return _sw_gnome_utils.gnc_plugin_page_get_page_color(page)
gnc_plugin_page_get_page_color = _sw_gnome_utils.gnc_plugin_page_get_page_color

def gnc_plugin_page_set_page_color(page, color):
    return _sw_gnome_utils.gnc_plugin_page_set_page_color(page, color)
gnc_plugin_page_set_page_color = _sw_gnome_utils.gnc_plugin_page_set_page_color

def gnc_plugin_page_get_uri(page):
    return _sw_gnome_utils.gnc_plugin_page_get_uri(page)
gnc_plugin_page_get_uri = _sw_gnome_utils.gnc_plugin_page_get_uri

def gnc_plugin_page_set_uri(page, name):
    return _sw_gnome_utils.gnc_plugin_page_set_uri(page, name)
gnc_plugin_page_set_uri = _sw_gnome_utils.gnc_plugin_page_set_uri

def gnc_plugin_page_get_statusbar_text(page):
    return _sw_gnome_utils.gnc_plugin_page_get_statusbar_text(page)
gnc_plugin_page_get_statusbar_text = _sw_gnome_utils.gnc_plugin_page_get_statusbar_text

def gnc_plugin_page_set_statusbar_text(page, name):
    return _sw_gnome_utils.gnc_plugin_page_set_statusbar_text(page, name)
gnc_plugin_page_set_statusbar_text = _sw_gnome_utils.gnc_plugin_page_set_statusbar_text

def gnc_plugin_page_get_use_new_window(page):
    return _sw_gnome_utils.gnc_plugin_page_get_use_new_window(page)
gnc_plugin_page_get_use_new_window = _sw_gnome_utils.gnc_plugin_page_get_use_new_window

def gnc_plugin_page_set_use_new_window(page, use_new):
    return _sw_gnome_utils.gnc_plugin_page_set_use_new_window(page, use_new)
gnc_plugin_page_set_use_new_window = _sw_gnome_utils.gnc_plugin_page_set_use_new_window

def gnc_plugin_page_get_ui_description(page):
    return _sw_gnome_utils.gnc_plugin_page_get_ui_description(page)
gnc_plugin_page_get_ui_description = _sw_gnome_utils.gnc_plugin_page_get_ui_description

def gnc_plugin_page_set_ui_description(page, ui_filename):
    return _sw_gnome_utils.gnc_plugin_page_set_ui_description(page, ui_filename)
gnc_plugin_page_set_ui_description = _sw_gnome_utils.gnc_plugin_page_set_ui_description

def gnc_plugin_page_get_ui_merge(page):
    return _sw_gnome_utils.gnc_plugin_page_get_ui_merge(page)
gnc_plugin_page_get_ui_merge = _sw_gnome_utils.gnc_plugin_page_get_ui_merge

def gnc_plugin_page_get_action_group(page):
    return _sw_gnome_utils.gnc_plugin_page_get_action_group(page)
gnc_plugin_page_get_action_group = _sw_gnome_utils.gnc_plugin_page_get_action_group

def gnc_plugin_page_create_action_group(page, group_name):
    return _sw_gnome_utils.gnc_plugin_page_create_action_group(page, group_name)
gnc_plugin_page_create_action_group = _sw_gnome_utils.gnc_plugin_page_create_action_group

def gnc_plugin_page_get_action(page, name):
    return _sw_gnome_utils.gnc_plugin_page_get_action(page, name)
gnc_plugin_page_get_action = _sw_gnome_utils.gnc_plugin_page_get_action

def gnc_plugin_page_inserted(plugin_page):
    return _sw_gnome_utils.gnc_plugin_page_inserted(plugin_page)
gnc_plugin_page_inserted = _sw_gnome_utils.gnc_plugin_page_inserted

def gnc_plugin_page_removed(plugin_page):
    return _sw_gnome_utils.gnc_plugin_page_removed(plugin_page)
gnc_plugin_page_removed = _sw_gnome_utils.gnc_plugin_page_removed

def gnc_plugin_page_selected(plugin_page):
    return _sw_gnome_utils.gnc_plugin_page_selected(plugin_page)
gnc_plugin_page_selected = _sw_gnome_utils.gnc_plugin_page_selected

def gnc_plugin_page_unselected(plugin_page):
    return _sw_gnome_utils.gnc_plugin_page_unselected(plugin_page)
gnc_plugin_page_unselected = _sw_gnome_utils.gnc_plugin_page_unselected

def gnc_plugin_page_finish_pending(plugin_page):
    return _sw_gnome_utils.gnc_plugin_page_finish_pending(plugin_page)
gnc_plugin_page_finish_pending = _sw_gnome_utils.gnc_plugin_page_finish_pending
import sw_engine
class GncPluginManager(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncPluginManager, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncPluginManager, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gobject"] = _sw_gnome_utils.GncPluginManager_gobject_set
    __swig_getmethods__["gobject"] = _sw_gnome_utils.GncPluginManager_gobject_get
    if _newclass:
        gobject = _swig_property(_sw_gnome_utils.GncPluginManager_gobject_get, _sw_gnome_utils.GncPluginManager_gobject_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncPluginManager()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncPluginManager
    __del__ = lambda self: None
GncPluginManager_swigregister = _sw_gnome_utils.GncPluginManager_swigregister
GncPluginManager_swigregister(GncPluginManager)

class GncPluginManagerClass(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GncPluginManagerClass, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GncPluginManagerClass, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gobject"] = _sw_gnome_utils.GncPluginManagerClass_gobject_set
    __swig_getmethods__["gobject"] = _sw_gnome_utils.GncPluginManagerClass_gobject_get
    if _newclass:
        gobject = _swig_property(_sw_gnome_utils.GncPluginManagerClass_gobject_get, _sw_gnome_utils.GncPluginManagerClass_gobject_set)
    __swig_setmethods__["plugin_added"] = _sw_gnome_utils.GncPluginManagerClass_plugin_added_set
    __swig_getmethods__["plugin_added"] = _sw_gnome_utils.GncPluginManagerClass_plugin_added_get
    if _newclass:
        plugin_added = _swig_property(_sw_gnome_utils.GncPluginManagerClass_plugin_added_get, _sw_gnome_utils.GncPluginManagerClass_plugin_added_set)
    __swig_setmethods__["plugin_removed"] = _sw_gnome_utils.GncPluginManagerClass_plugin_removed_set
    __swig_getmethods__["plugin_removed"] = _sw_gnome_utils.GncPluginManagerClass_plugin_removed_get
    if _newclass:
        plugin_removed = _swig_property(_sw_gnome_utils.GncPluginManagerClass_plugin_removed_get, _sw_gnome_utils.GncPluginManagerClass_plugin_removed_set)

    def __init__(self):
        this = _sw_gnome_utils.new_GncPluginManagerClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sw_gnome_utils.delete_GncPluginManagerClass
    __del__ = lambda self: None
GncPluginManagerClass_swigregister = _sw_gnome_utils.GncPluginManagerClass_swigregister
GncPluginManagerClass_swigregister(GncPluginManagerClass)


def gnc_plugin_manager_get_type():
    return _sw_gnome_utils.gnc_plugin_manager_get_type()
gnc_plugin_manager_get_type = _sw_gnome_utils.gnc_plugin_manager_get_type

def gnc_plugin_manager_get():
    return _sw_gnome_utils.gnc_plugin_manager_get()
gnc_plugin_manager_get = _sw_gnome_utils.gnc_plugin_manager_get

def gnc_plugin_manager_add_plugin(manager, plugin):
    return _sw_gnome_utils.gnc_plugin_manager_add_plugin(manager, plugin)
gnc_plugin_manager_add_plugin = _sw_gnome_utils.gnc_plugin_manager_add_plugin

def gnc_plugin_manager_remove_plugin(manager, plugin):
    return _sw_gnome_utils.gnc_plugin_manager_remove_plugin(manager, plugin)
gnc_plugin_manager_remove_plugin = _sw_gnome_utils.gnc_plugin_manager_remove_plugin

def gnc_plugin_manager_get_plugins(manager):
    return _sw_gnome_utils.gnc_plugin_manager_get_plugins(manager)
gnc_plugin_manager_get_plugins = _sw_gnome_utils.gnc_plugin_manager_get_plugins

def gnc_plugin_manager_get_plugin(manager, name):
    return _sw_gnome_utils.gnc_plugin_manager_get_plugin(manager, name)
gnc_plugin_manager_get_plugin = _sw_gnome_utils.gnc_plugin_manager_get_plugin
# This file is compatible with both classic and new-style classes.


